<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="comma" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '0'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="2" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="True" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2024.2.4" valType="str" updates="None" name="Use version"/>
    <Param val="[1680, 1050]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="nofbo" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="-0.7804, -0.7804, -0.7804" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="pilot_sequence_learning" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="PsychToolbox" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="startup_settings">
      <RoutineSettingsComponent name="startup_settings" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="startup_settings" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="functions_imports" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;# log function that saves variables to log file&amp;#10;def log(*msgs, sep=' ', end='\n'):&amp;#10;    log_file = u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'] + '_print.log')&amp;#10;    print(*msgs, sep=sep, end=end, flush=True)&amp;#10;&amp;#10;    # Append to log file&amp;#10;    with open(log_file, 'a') as f:&amp;#10;        f.write(sep.join(str(msg) for msg in msgs) + end)&amp;#10;        &amp;#10; # import meg_trigger package&amp;#10;import meg_triggers&amp;#10;from meg_triggers import send_trigger&amp;#10;meg_triggers.enable_printing()&amp;#10;meg_triggers.set_default_duration(0.005)&amp;#10;&amp;#10;# function for setting triggers when comps appear&amp;#10;def send_onset_trigger(stim, trig_number):&amp;#10;    # record exact onset on the global clock &amp;#10;    win.timeOnFlip(stim, 'tStartRefresh')&amp;#10;    log(f'{stim}.started')&amp;#10;    send_trigger(trig_number)&amp;#10;    &amp;#10;from ast import literal_eval&amp;#10;&amp;#10;# define function that matches position keywords to tuples&amp;#10;def resolve_pos(val):&amp;#10;    &quot;&quot;&quot;Return a (x,y) tuple from various spreadsheet formats.&quot;&quot;&quot;&amp;#10;    # Already a tuple/list/ndarray -&gt; normalize to tuple&amp;#10;    if isinstance(val, (list, tuple, np.ndarray)):&amp;#10;        return tuple(val)&amp;#10;    # Name like &quot;left_pos&quot; -&gt; look up&amp;#10;    if isinstance(val, str):&amp;#10;        name = val.strip()&amp;#10;        if name in POS:&amp;#10;            return POS[name]&amp;#10;        # Or literal like &quot;(-0.4, 0.2)&quot; in the cell&amp;#10;        try:&amp;#10;            parsed = literal_eval(name)&amp;#10;            if isinstance(parsed, (list, tuple)) and len(parsed) == 2:&amp;#10;                return tuple(parsed)&amp;#10;        except Exception:&amp;#10;            pass&amp;#10;        raise ValueError(f&quot;Unrecognized position value: {val!r}&quot;)&amp;#10;    raise TypeError(f&quot;Unsupported position type: {type(val)}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="functions_imports" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="exp_settings" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;## set main experimental variables&amp;#10;&amp;#10;# instruction language&amp;#10;language = &quot;english&quot; # &quot;german&quot; or &quot;english&quot;&amp;#10;&amp;#10;# pos of images (x-coord, y-coord)&amp;#10;left_pos   = (-0.4, 0.2)&amp;#10;right_pos  = (0.4, 0.2)&amp;#10;center_pos = (0.0, 0.2)&amp;#10;prompt_pos = (0, -0.2) &amp;#10;&amp;#10;# # Map positions to keys&amp;#10;pos_to_key = {&amp;#10;    right_pos: 'r',&amp;#10;    center_pos: 'y',&amp;#10;    left_pos: 'b',&amp;#10;}&amp;#10;# pos of instructions&amp;#10;instruc_pos = (0,0)&amp;#10;&amp;#10;# make coordinates her match with position description in excel file &amp;#10;POS = {&amp;#10;    'left':   left_pos,&amp;#10;    'center': center_pos,&amp;#10;    'right':  right_pos,&amp;#10;}&amp;#10; &amp;#10; # timings&amp;#10;max_response_time = 10 # [s]&amp;#10; &amp;#10; # feedback&amp;#10;feedback_steps  =  0.04   # steps out of 1&amp;#10;rest_jump       =  0.004 # abs distance to target pos&amp;#10;animation_time   = 2.5    # [s]&amp;#10; &amp;#10;# breaks (indicate after whch trial number you want to break)&amp;#10;break_points = {60, 120, 180}" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="exp_settings" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_logging_functions" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# --- BIDS event logger (no Builder BIDS components needed) ---&amp;#10;from pathlib import Path&amp;#10;import csv&amp;#10;import numpy as np&amp;#10;&amp;#10;class BIDSLogger:&amp;#10;    def __init__(self, win, clock, default_cols=None):&amp;#10;        self.win = win&amp;#10;        self.clock = clock&amp;#10;        self.rows = []          # list of dicts -&gt; will become events.tsv&amp;#10;        self.active = {}        # stim -&gt; row index (for duration)&amp;#10;        self.defaults = default_cols or {}&amp;#10;&amp;#10;        # fixed column order (add any you want to see in the TSV)&amp;#10;        self.col_order = [&amp;#10;            &quot;stim_label&quot;, &quot;onset&quot;, &quot;duration&quot;,&amp;#10;            &quot;subject&quot;, &quot;session&quot;,&amp;#10;            &quot;trial_type&quot;, &quot;concept_label&quot;,&amp;#10;            &quot;concept_examplar&quot;,&amp;#10;            &quot;response_time&quot;, &quot;response&quot;,&amp;#10;            &quot;expected_response&quot;,&amp;#10;            &quot;correct&quot;, &quot;feedback_time&quot;,&amp;#10;        ]&amp;#10;&amp;#10;    # schedule logging of onset on the *next* flip (exactly when the stim appears)&amp;#10;    def schedule_onset(self, stim, trial_type, stim_label=None, **extra_cols):&amp;#10;        def _on_flip():&amp;#10;            t = self.clock.getTime()&amp;#10;            row = {&quot;onset&quot;: float(t), &quot;duration&quot;: np.nan,&amp;#10;                   &quot;trial_type&quot;: trial_type, &quot;stim_label&quot;: stim_label}&amp;#10;            row.update(self.defaults)&amp;#10;            row.update(extra_cols)&amp;#10;            self.rows.append(row)&amp;#10;            self.active[stim] = len(self.rows) - 1&amp;#10;        self.win.callOnFlip(_on_flip)&amp;#10;&amp;#10;    # log a one-shot event right now (no duration), e.g., button press&amp;#10;    def add_instant(self, trial_type, **extra_cols):&amp;#10;        row = {&quot;onset&quot;: float(self.clock.getTime()), &quot;duration&quot;: 0.0,&amp;#10;               &quot;trial_type&quot;: trial_type}&amp;#10;        row.update(self.defaults)&amp;#10;        row.update(extra_cols)&amp;#10;        self.rows.append(row)&amp;#10;&amp;#10;    # write out a BIDS-like events.tsv&amp;#10;    def save(self, filename_base):&amp;#10;        out = Path(filename_base).with_suffix(&quot;&quot;)  # strip .csv/.log if present&amp;#10;        out = out.parent / (out.name + &quot;_events.tsv&quot;)&amp;#10;&amp;#10;        # union of all keys, but keep preferred order first&amp;#10;        all_keys = list(self.col_order)&amp;#10;        for r in self.rows:&amp;#10;            for k in r.keys():&amp;#10;                if k not in all_keys:&amp;#10;                    all_keys.append(k)&amp;#10;&amp;#10;        with open(out, &quot;w&quot;, newline=&quot;&quot;, encoding=&quot;utf-8&quot;) as f:&amp;#10;            w = csv.DictWriter(f, fieldnames=all_keys, delimiter=&quot;\t&quot;, extrasaction=&quot;ignore&quot;)&amp;#10;            w.writeheader()&amp;#10;            for r in self.rows:&amp;#10;                # convert Nones to &quot;n/a&quot; for BIDS friendliness&amp;#10;                out_row = {k: (&quot;n/a&quot; if (r.get(k) is None or (isinstance(r.get(k), float) and np.isnan(r.get(k)))) else r.get(k))&amp;#10;                           for k in all_keys}&amp;#10;                w.writerow(out_row)&amp;#10;&amp;#10;        return str(out)&amp;#10;# set global clock as default because we need it for timing&amp;#10;bids = None&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids = new BIDSLogger({&quot;win&quot;: psychoJS.window, &quot;clock&quot;: globalClock, &quot;default_cols&quot;: dict({&quot;subject&quot;: expInfo.get(&quot;participant&quot;), &quot;condition&quot;: &quot;learning&quot;})});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# ---- Create the logger once ----&amp;#10;bids = BIDSLogger(&amp;#10;    win=win,&amp;#10;    clock=globalClock,&amp;#10;    default_cols=dict(&amp;#10;        subject=expInfo.get(&quot;participant&quot;),&amp;#10;        condition=&quot;learning&quot;   &amp;#10;    )&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_logging_functions" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="choice_display">
      <RoutineSettingsComponent name="choice_display" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="choice_display" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_choice_disp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids.schedule_onset(instructions_choose, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;instruction_choose&quot;});&amp;#10;bids.schedule_onset(prompt, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;prompt_current_choice&quot;, &quot;concept_label&quot;: promptFile.partition(&quot;//&quot;)[0], &quot;concept_examplar&quot;: promptFile.partition(&quot;//&quot;)[2]});&amp;#10;bids.schedule_onset(correct, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;choice_options_correct&quot;, &quot;concept_label&quot;: correctFile.partition(&quot;//&quot;)[0], &quot;concept_examplar&quot;: correctFile.partition(&quot;//&quot;)[2]});&amp;#10;bids.schedule_onset(dist_01, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;choice_options_dist_01&quot;, &quot;concept_label&quot;: dist_01File.partition(&quot;//&quot;)[0], &quot;concept_examplar&quot;: dist_01File.partition(&quot;//&quot;)[2]});&amp;#10;bids.schedule_onset(dist_02, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;choice_options_dist_02&quot;, &quot;concept_label&quot;: dist_02File.partition(&quot;//&quot;)[0], &quot;concept_examplar&quot;: dist_02File.partition(&quot;//&quot;)[2]});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;bids.schedule_onset(instructions_choose, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;instruction_choose&quot;)&amp;#10;&amp;#10;bids.schedule_onset(prompt, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;prompt_current_choice&quot;, &amp;#10;concept_label = promptFile.partition(&quot;//&quot;)[0],&amp;#10;concept_examplar = promptFile.partition(&quot;//&quot;)[2])&amp;#10;&amp;#10;bids.schedule_onset(correct, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;choice_options_correct&quot;, &amp;#10;concept_label = correctFile.partition(&quot;//&quot;)[0],&amp;#10;concept_examplar = correctFile.partition(&quot;//&quot;)[2])&amp;#10;&amp;#10;bids.schedule_onset(dist_01, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;choice_options_dist_01&quot;, &amp;#10;concept_label = dist_01File.partition(&quot;//&quot;)[0],&amp;#10;concept_examplar = dist_01File.partition(&quot;//&quot;)[2])&amp;#10;&amp;#10;bids.schedule_onset(dist_02, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;choice_options_dist_02&quot;, &amp;#10;concept_label = dist_02File.partition(&quot;//&quot;)[0],&amp;#10;concept_examplar = dist_02File.partition(&quot;//&quot;)[2])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.add_instant(&quot;button&quot;, {&quot;response&quot;: (key_resp.keys ? key_resp.keys : null), &quot;response_time&quot;: ((&quot;rt&quot; in key_resp) ? key_resp.rt : null), &quot;correct&quot;: ((&quot;corr&quot; in key_resp) ? key_resp.corr : null), &quot;expected_response&quot;: correct_ans});&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# response neeeds to be saved at end of trial&amp;#10;bids.add_instant(&amp;#10;    &quot;button&quot;,&amp;#10;    response=(key_resp.keys if key_resp.keys else None),&amp;#10;    response_time=(key_resp.rt if hasattr(key_resp, &quot;rt&quot;) else None),&amp;#10;    correct=(key_resp.corr if hasattr(key_resp, &quot;corr&quot;) else None),&amp;#10;    expected_response = correct_ans&amp;#10;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_choice_disp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="trigger_choice_disp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# prompt triggering &amp;#10;if prompt.status == NOT_STARTED and tThisFlip &gt;= 0.0-frameTolerance:&amp;#10;    send_onset_trigger(prompt, promptTrig)&amp;#10; &amp;#10;# dist01 triggering &amp;#10;if dist_01.status == NOT_STARTED and tThisFlip &gt;= 0.0-frameTolerance:&amp;#10;    send_onset_trigger(dist_01, dist_01Trig)&amp;#10;&amp;#10;# dist02 triggering &amp;#10;if dist_02.status == NOT_STARTED and tThisFlip &gt;= 0.0-frameTolerance:&amp;#10;    send_onset_trigger(dist_02, dist_02Trig)&amp;#10;&amp;#10;# correct triggering &amp;#10;if correct.status == NOT_STARTED and tThisFlip &gt;= 0.0-frameTolerance:&amp;#10;    send_onset_trigger(correct, correctTrig)&amp;#10;&amp;#10;# &quot;choose prompt&quot; triggering &amp;#10;if instructions_choose.status == NOT_STARTED and tThisFlip &gt;= 0.0-frameTolerance:&amp;#10;    send_onset_trigger(instructions_choose, 32)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((prompt.status === NOT_STARTED) &amp;&amp; (tThisFlip &gt;= (0.0 - frameTolerance)))) {&amp;#10;    send_onset_trigger(prompt, promptTrig);&amp;#10;}&amp;#10;if (((dist_01.status === NOT_STARTED) &amp;&amp; (tThisFlip &gt;= (0.0 - frameTolerance)))) {&amp;#10;    send_onset_trigger(dist_01, dist_01Trig);&amp;#10;}&amp;#10;if (((dist_02.status === NOT_STARTED) &amp;&amp; (tThisFlip &gt;= (0.0 - frameTolerance)))) {&amp;#10;    send_onset_trigger(dist_02, dist_02Trig);&amp;#10;}&amp;#10;if (((correct.status === NOT_STARTED) &amp;&amp; (tThisFlip &gt;= (0.0 - frameTolerance)))) {&amp;#10;    send_onset_trigger(correct, correctTrig);&amp;#10;}&amp;#10;if (((instructions_choose.status === NOT_STARTED) &amp;&amp; (tThisFlip &gt;= (0.0 - frameTolerance)))) {&amp;#10;    send_onset_trigger(instructions_choose, 32);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trigger_choice_disp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="prompt" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\' + promptFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="prompt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="prompt_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_01" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\' + dist_01File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_01" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist01_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_02" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\' + dist_02File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_02" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist02_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="correct" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\' + correctFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="correct" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(correct_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="max_response_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;# determine which one is correct response on this trial &amp;#10;# might need later &amp;#10;correctAnsKey = pos_to_key[resolve_pos(correct_pos)]&amp;#10;&amp;#10;# start a clock to time out routine if necessary&amp;#10;routClock = core.Clock()&amp;#10;routClock.reset()&amp;#10;&amp;#10;# initialize&amp;#10;responded = False&amp;#10;key_resp.keys = []&amp;#10;key_resp.rt = None&amp;#10;&amp;#10;# this attribute needs to also exist otherwise there is error&amp;#10;key_resp.duration = None&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# timeout case&amp;#10;if routClock.getTime() &gt;= max_response_time:&amp;#10;    # no key was pressed in time&amp;#10;    key_resp.keys = None&amp;#10;    key_resp.rt = None&amp;#10;    responded = False&amp;#10;    continueRoutine = False &amp;#10;    # (optionally store that it was a timeout)&amp;#10;    thisExp.addData('timeout', True)&amp;#10;    &amp;#10;# if there is key selection &amp;#10;if key_resp.status == STARTED:&amp;#10;    theseKeys = key_resp.getKeys(keyList=['y','g','b','r'], ignoreKeys=[&quot;escape&quot;], waitRelease=True)&amp;#10;    if len(theseKeys):&amp;#10;        key_resp.keys     = theseKeys[0].name&amp;#10;        key_resp.rt       = theseKeys[0].rt&amp;#10;        key_resp.duration = theseKeys[0].duration  # safe to save later&amp;#10;        key_resp.corr = 1 if key_resp.keys == correctAnsKey else 0&amp;#10;        responded = True&amp;#10;        continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((routClock.getTime() &gt;= max_response_time)) {&amp;#10;    key_resp.keys = null;&amp;#10;    key_resp.rt = null;&amp;#10;    responded = false;&amp;#10;    continueRoutine = false;&amp;#10;    psychoJS.experiment.addData(&quot;timeout&quot;, true);&amp;#10;}&amp;#10;if ((key_resp.status === PsychoJS.Status.STARTED)) {&amp;#10;    theseKeys = key_resp.getKeys({&quot;keyList&quot;: [&quot;y&quot;, &quot;g&quot;, &quot;b&quot;, &quot;r&quot;], &quot;ignoreKeys&quot;: [&quot;escape&quot;], &quot;waitRelease&quot;: true});&amp;#10;    if (theseKeys.length) {&amp;#10;        key_resp.keys = theseKeys[0].name;&amp;#10;        key_resp.rt = theseKeys[0].rt;&amp;#10;        key_resp.duration = theseKeys[0].duration;&amp;#10;        key_resp.corr = ((key_resp.keys === correctAnsKey) ? 1 : 0);&amp;#10;        responded = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instructions_choose" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instructions_choose" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="instruc_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instructions_choose_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instructions_choose.text = &quot;Choose the next image in the sequence!&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instructions_choose.text = &quot;W\u00e4hle das n\u00e4chste Bild in der Sequenz!&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;:&amp;#10;    instructions_choose.text = (&amp;#10;    &quot;Choose the next image in the sequence!&quot;)&amp;#10; &amp;#10;if language == &quot;german&quot;:&amp;#10;    instructions_choose.text = (&amp;#10;    &quot;Wähle das nächste Bild in der Sequenz!&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instructions_choose_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback">
      <RoutineSettingsComponent name="feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_feedback_disp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids.schedule_onset(correct_2, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;correct_move_start&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;bids.schedule_onset(correct_2, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;correct_move_start&quot;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.add_instant(&quot;feedback&quot;, {&quot;feedback_duration&quot;: animationTimer});&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="bids.add_instant(&amp;#10;    &quot;feedback&quot;,&amp;#10;    feedback_duration = animationTimer,&amp;#10;)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_feedback_disp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="animation_control" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="endY = prompt_pos[1];&amp;#10;endX = prompt_pos[0];&amp;#10;maxAnimationDur = Number.parseInt(util.round((animation_time * expInfo[&quot;frameRate&quot;])));&amp;#10;animationTimer = 0;&amp;#10;animationDone = false;&amp;#10;moveCorrect = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# Initialize animation control&amp;#10;endY = prompt_pos[1]    # end y-coor of moving image&amp;#10;endX = prompt_pos[0]    # end x-coord of moving image&amp;#10;&amp;#10;maxAnimationDur = int(round(animation_time * expInfo['frameRate']))&amp;#10;animationTimer = 0      # initialize variable &amp;#10;animationDone = False   # initialize variable &amp;#10;moveCorrect = False     # initialize variable " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Start animation &amp;#10;if not moveCorrect and not animationDone:&amp;#10;    moveCorrect = True &amp;#10;&amp;#10;# Run animation&amp;#10;if moveCorrect and not animationDone:&amp;#10;    animationTimer += 1&amp;#10;    &amp;#10;    # Current position&amp;#10;    current_x, current_y = correct_2.pos&amp;#10;    &amp;#10;    # Compute direction toward target&amp;#10;    dx = endX - current_x&amp;#10;    dy = endY - current_y&amp;#10;&amp;#10;    # Move a small fraction toward target&amp;#10;    move_fraction = feedback_steps # % of the remaining distance each frame&amp;#10;    new_x = current_x + dx * move_fraction&amp;#10;    new_y = current_y + dy * move_fraction&amp;#10;&amp;#10;    # Update position&amp;#10;    correct_2.setPos((new_x, new_y))&amp;#10;&amp;#10;    # Stop when close enough to target&amp;#10;    if (abs(dx) &lt; rest_jump and abs(dy) &lt; rest_jump) or animationTimer &gt; maxAnimationDur:&amp;#10;    # if (abs(dx) &lt; rest_jump and abs(dy) &lt; rest_jump):&amp;#10;        correct_2.setPos((endX, endY))&amp;#10;        animationDone = True&amp;#10;        moveCorrect = False&amp;#10;        continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((! moveCorrect) &amp;&amp; (! animationDone))) {&amp;#10;    moveCorrect = true;&amp;#10;}&amp;#10;if ((moveCorrect &amp;&amp; (! animationDone))) {&amp;#10;    animationTimer += 1;&amp;#10;    [current_x, current_y] = correct_2.pos;&amp;#10;    dx = (endX - current_x);&amp;#10;    dy = (endY - current_y);&amp;#10;    move_fraction = feedback_steps;&amp;#10;    new_x = (current_x + (dx * move_fraction));&amp;#10;    new_y = (current_y + (dy * move_fraction));&amp;#10;    correct_2.setPos([new_x, new_y]);&amp;#10;    if ((((Math.abs(dx) &lt; rest_jump) &amp;&amp; (Math.abs(dy) &lt; rest_jump)) || (animationTimer &gt; maxAnimationDur))) {&amp;#10;        correct_2.setPos([endX, endY]);&amp;#10;        animationDone = true;&amp;#10;        moveCorrect = false;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="animation_control" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="trigger_feedback_disp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="feedback.trigger_sent = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="feedback.trigger_sent = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# feedback onset&amp;#10;if moveCorrect and not feedback.trigger_sent: &amp;#10;    send_trigger(98)&amp;#10;    feedback.trigger_sent = True &amp;#10; &amp;#10;# feedback offset&amp;#10;if animationDone: &amp;#10;    send_trigger(99)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((moveCorrect &amp;&amp; (! feedback.trigger_sent))) {&amp;#10;    send_trigger(98);&amp;#10;    feedback.trigger_sent = true;&amp;#10;}&amp;#10;if (animationDone) {&amp;#10;    send_trigger(99);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trigger_feedback_disp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="prompt_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\'  + promptFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="prompt_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="prompt_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_01_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\' + dist_01File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_01_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist01_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_02_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\'  + dist_02File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_02_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist02_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="correct_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\'  + correctFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="correct_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(correct_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids.schedule_onset(instruction_part1, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;instruction_01&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;bids.schedule_onset(instruction_part1, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;instruction_01&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="trigger_start" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# set trigger that exp has started&amp;#10;send_trigger(255)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="send_trigger(255);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trigger_start" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part1" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_part1_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part1.text = &quot;Welcome to the second part of the experiment. You will now learn 3 sequences of images by moving through them, one pair at a time. Press any button to continue.&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part1.text = &quot;Willkommen zum zweiten Teil des Experiments. Sie werden nun drei Bildsequenzen lernen. Sie werden die Sequenzen erleben, indem Sie sie durchlaufen und von einem Bild zum n\u00e4chsten springen. Dr\u00fccken Sie irgendeinen Knopf, um weiterzumachen. &quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part1.text = (&amp;#10;    &quot;Welcome to the second part of the experiment. &quot;&amp;#10;    &quot;You will now learn 3 sequences of images by moving through them, one pair at a time. &quot;&amp;#10;    &quot;Press any button to continue.&quot;&amp;#10;)&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part1.text = (&quot;Willkommen zum zweiten Teil des Experiments. &quot;&amp;#10;    &quot;Sie werden nun drei Bildsequenzen lernen. &quot;&amp;#10;    &quot;Sie werden die Sequenzen erleben, indem Sie sie durchlaufen und von einem Bild zum nächsten springen. &quot;&amp;#10;    &quot;Drücken Sie irgendeinen Knopf, um weiterzumachen. &quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_part1_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_02">
      <RoutineSettingsComponent name="instructions_02" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_02" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids.schedule_onset(instruction_part2, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;instruction_02&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;bids.schedule_onset(instruction_part2, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;instruction_02&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instructions_part2_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part2.text = &quot;Starting at the first image, choose the next image in the sequence by trial and error. After each choice, you\u2019ll get feedback: the correct next image will move down and replace the current one. Then you choose again. Press any button to continue. &quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part2.text = &quot;Sie beginnen nun am Anfang der ersten Sequenz und sollten durch Ausprobieren das n\u00e4chste Bild in der Sequenz ausw\u00e4hlen. Sie erhalten Feedback zu Ihrer Auswahl, da das richtige n\u00e4chste Bild das erste Bild ersetzt. Dann treffen Sie die n\u00e4chste Auswahl. Dr\u00fccken Sie irgendeinen Knopf, um weiterzumachen.&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part2.text = (&amp;#10;    &quot;Starting at the first image, choose the next image in the sequence by trial and error. &quot;&amp;#10;    &quot;After each choice, you’ll get feedback: the correct next image will move down and replace the current one. &quot;&amp;#10;    &quot;Then you choose again. &quot;&amp;#10;    &quot;Press any button to continue. &quot;&amp;#10; &amp;#10;    )&amp;#10;&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part2.text = (&amp;#10;    &quot;Sie beginnen nun am Anfang der ersten Sequenz und sollten durch Ausprobieren das nächste Bild in der Sequenz auswählen. &quot; &amp;#10;    &quot;Sie erhalten Feedback zu Ihrer Auswahl, da das richtige nächste Bild das erste Bild ersetzt. &quot;&amp;#10;    &quot;Dann treffen Sie die nächste Auswahl. &quot;&amp;#10;    &quot;Drücken Sie irgendeinen Knopf, um weiterzumachen.&quot;&amp;#10;    )&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instructions_part2_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_2" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_2" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_end">
      <RoutineSettingsComponent name="instructions_end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="instruction_end" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_end" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instructions_end_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part3.text = &quot;This was the experiment. Thank you for your participation! Press any button to end the task. &quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part3.text = &quot;Hiermit ist das Experiment beendet. Vielen Dank f\u00fcr Ihre Teilnahme. Dr\u00fccken Sie irgendeinen Knopf, um das Experiment zu beenden. &quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part3.text = (&amp;#10;        &quot;This was the experiment. Thank you for your participation! &quot;&amp;#10;        &quot;Press any button to end the task. &quot;&amp;#10;    )&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part3.text = (&amp;#10;        &quot;Hiermit ist das Experiment beendet. Vielen Dank für Ihre Teilnahme. &quot;&amp;#10;        &quot;Drücken Sie irgendeinen Knopf, um das Experiment zu beenden. &quot;&amp;#10;    )&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instructions_end_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_3" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_3" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="trigger_end" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="# set trigger that exp has ended&amp;#10;send_trigger(255)&amp;#10;" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="send_trigger(255);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trigger_end" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <BidsExportRoutine name="bidsExport">
      <Param name="acq" updates="None" val="" valType="str"/>
      <Param name="add_code" updates="None" val="False" valType="bool"/>
      <Param name="add_environment" updates="None" val="True" valType="bool"/>
      <Param name="add_stimuli" updates="None" val="True" valType="bool"/>
      <Param name="bids_license" updates="None" val="" valType="str"/>
      <Param name="data_type" updates="None" val="meg" valType="str"/>
      <Param name="dataset_description" updates="constant" val="" valType="str"/>
      <Param name="dataset_name" updates="None" val="bids" valType="str"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="generate_hed_metadata" updates="None" val="False" valType="bool"/>
      <Param name="json_sidecar" updates="constant" val="" valType="str"/>
      <Param name="name" updates="None" val="bidsExport" valType="code"/>
      <Param name="runs" updates="None" val="True" valType="bool"/>
    </BidsExportRoutine>
    <Routine name="bids_export">
      <RoutineSettingsComponent name="bids_export" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="bids_export" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="save_tsv" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="events_path = bids.save(thisExp.dataFileName)  # writes ..._events.tsv &amp;#10;print(f&quot;BIDS events written to: {events_path}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="events_path = bids.save(psychoJS.experiment.dataFileName);&amp;#10;console.log(`BIDS events written to: ${events_path}`);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="save_tsv" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="bids_triggers">
      <RoutineSettingsComponent name="bids_triggers" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="bids_triggers" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
    </Routine>
    <Routine name="instructions_03">
      <RoutineSettingsComponent name="instructions_03" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_03" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids.schedule_onset(instruction_part3, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;instruction_03&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;bids.schedule_onset(instruction_part3, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;instruction_03&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_part3_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part3.text = &quot;We will start with a few practice trials. The current image appears at the bottom of the screen, and three options appear at the top. Choose the image you think comes next in the sequence. Press any key to start the practice trials.&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part3.text = &quot;Wir beginnen mit einigen \u00dcbungsdurchg\u00e4ngen. Unten auf dem Bildschirm sehen Sie das aktuelle Bild, oben drei Auswahlm\u00f6glichkeiten. W\u00e4hlen Sie das Bild, von dem Sie denken, dass es als N\u00e4chstes in der Abfolge kommt. Dr\u00fccken Sie irgendeinen Knopf, um mit den \u00dcbungsdurchg\u00e4ngen zu beginnen.&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part3.text = (&amp;#10;    &quot;We will start with a few practice trials. &quot;&amp;#10;    &quot;The current image appears at the bottom of the screen, and three options appear at the top. &quot;&amp;#10;    &quot;Choose the image you think comes next in the sequence. &quot;&amp;#10;    &quot;Press any key to start the practice trials.&quot;&amp;#10;    )&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part3.text = (&amp;#10;        &quot;Wir beginnen mit einigen Übungsdurchgängen. &quot;&amp;#10;        &quot;Unten auf dem Bildschirm sehen Sie das aktuelle Bild, oben drei Auswahlmöglichkeiten. &quot;&amp;#10;        &quot;Wählen Sie das Bild, von dem Sie denken, dass es als Nächstes in der Abfolge kommt. &quot;&amp;#10;        &quot;Drücken Sie irgendeinen Knopf, um mit den Übungsdurchgängen zu beginnen.&quot;&amp;#10;    )&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_part3_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_4" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_4" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="choice_disp_learn">
      <RoutineSettingsComponent name="choice_disp_learn" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="choice_disp_learn" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="prompt_prc" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + promptFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="prompt_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="prompt_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25,0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_01_prc" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + dist_01File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_01_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist01_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25,0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_02_prc" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + dist_02File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_02_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist02_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25,0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="correct_prc" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + correctFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="correct_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(correct_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25,0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_prc" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_prc" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="max_response_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_prc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="responded = false;&amp;#10;key_resp_prc.keys = [];&amp;#10;key_resp_prc.rt = null;&amp;#10;key_resp_prc.duration = null;&amp;#10;routClock = new util.Clock();&amp;#10;routClock.reset();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# initialize&amp;#10;responded = False&amp;#10;key_resp_prc.keys = []&amp;#10;key_resp_prc.rt = None&amp;#10;&amp;#10;# this attribute needs to also exist otherwise there is error&amp;#10;key_resp_prc.duration = None&amp;#10;&amp;#10;# start a clock to time out routine if necessary&amp;#10;routClock = core.Clock()&amp;#10;routClock.reset()&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# timeout case&amp;#10;if routClock.getTime() &gt;= max_response_time:&amp;#10;    # no key was pressed in time&amp;#10;    key_resp_prc.keys = None&amp;#10;    key_resp_prc.rt = None&amp;#10;    responded = False&amp;#10;    continueRoutine = False &amp;#10;    # (optionally store that it was a timeout)&amp;#10;    #thisExp.addData('timeout', True)&amp;#10;    &amp;#10;# if there is key selection &amp;#10;if key_resp_prc.status == STARTED:&amp;#10;    theseKeys = key_resp_prc.getKeys(keyList=['y','g','b','r'], ignoreKeys=[&quot;escape&quot;], waitRelease=True)&amp;#10;    if len(theseKeys):&amp;#10;        key_resp_prc.keys     = theseKeys[0].name&amp;#10;        key_resp_prc.rt       = theseKeys[0].rt&amp;#10;        key_resp_prc.duration = theseKeys[0].duration  # safe to save later&amp;#10;        key_resp_prc.corr = 1 if key_resp_prc.keys == correctAnsKey else 0&amp;#10;        responded = True&amp;#10;        continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((routClock.getTime() &gt;= max_response_time)) {&amp;#10;    key_resp_prc.keys = null;&amp;#10;    key_resp_prc.rt = null;&amp;#10;    responded = false;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if ((key_resp_prc.status === PsychoJS.Status.STARTED)) {&amp;#10;    theseKeys = key_resp_prc.getKeys({&quot;keyList&quot;: [&quot;y&quot;, &quot;g&quot;, &quot;b&quot;, &quot;r&quot;], &quot;ignoreKeys&quot;: [&quot;escape&quot;], &quot;waitRelease&quot;: true});&amp;#10;    if (theseKeys.length) {&amp;#10;        key_resp_prc.keys = theseKeys[0].name;&amp;#10;        key_resp_prc.rt = theseKeys[0].rt;&amp;#10;        key_resp_prc.duration = theseKeys[0].duration;&amp;#10;        key_resp_prc.corr = ((key_resp_prc.keys === correctAnsKey) ? 1 : 0);&amp;#10;        responded = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_prc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instructions_choose_prc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instructions_choose_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="instruc_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instructions_choose_txt_prc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instructions_choose_prc.text = &quot;Choose the next image in the sequence!&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instructions_choose_prc.text = &quot;W\u00e4hle das n\u00e4chste Bild in der Sequenz!&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;:&amp;#10;    instructions_choose_prc.text = (&amp;#10;    &quot;Choose the next image in the sequence!&quot;)&amp;#10; &amp;#10;if language == &quot;german&quot;:&amp;#10;    instructions_choose_prc.text = (&amp;#10;    &quot;Wähle das nächste Bild in der Sequenz!&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instructions_choose_txt_prc" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback_learn">
      <RoutineSettingsComponent name="feedback_learn" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="feedback_learn" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="animation_control_prc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="endY = prompt_pos[1];&amp;#10;endX = prompt_pos[0];&amp;#10;maxAnimationDur = Number.parseInt(util.round((animation_time * expInfo[&quot;frameRate&quot;])));&amp;#10;animationTimer = 0;&amp;#10;animationDone = false;&amp;#10;moveCorrect = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# Initialize animation control&amp;#10;endY = prompt_pos[1]    # end y-coor of moving image&amp;#10;endX = prompt_pos[0]    # end x-coord of moving image&amp;#10;&amp;#10;maxAnimationDur = int(round(animation_time * expInfo['frameRate']))&amp;#10;animationTimer = 0      # initialize variable &amp;#10;animationDone = False   # initialize variable &amp;#10;moveCorrect = False     # initialize variable " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Start animation &amp;#10;if not moveCorrect and not animationDone:&amp;#10;    moveCorrect = True &amp;#10;&amp;#10;# Run animation&amp;#10;if moveCorrect and not animationDone:&amp;#10;    animationTimer += 1&amp;#10;    &amp;#10;    # Current position&amp;#10;    current_x, current_y = correct_prc_2.pos&amp;#10;    &amp;#10;    # Compute direction toward target&amp;#10;    dx = endX - current_x&amp;#10;    dy = endY - current_y&amp;#10;&amp;#10;    # Move a small fraction toward target&amp;#10;    move_fraction = feedback_steps # % of the remaining distance each frame&amp;#10;    new_x = current_x + dx * move_fraction&amp;#10;    new_y = current_y + dy * move_fraction&amp;#10;&amp;#10;    # Update position&amp;#10;    correct_prc_2.setPos((new_x, new_y))&amp;#10;&amp;#10;    # Stop when close enough to target&amp;#10;    if (abs(dx) &lt; rest_jump and abs(dy) &lt; rest_jump) or animationTimer &gt; maxAnimationDur:&amp;#10;    # if (abs(dx) &lt; rest_jump and abs(dy) &lt; rest_jump):&amp;#10;        correct_prc_2.setPos((endX, endY))&amp;#10;        animationDone = True&amp;#10;        moveCorrect = False&amp;#10;        continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((! moveCorrect) &amp;&amp; (! animationDone))) {&amp;#10;    moveCorrect = true;&amp;#10;}&amp;#10;if ((moveCorrect &amp;&amp; (! animationDone))) {&amp;#10;    animationTimer += 1;&amp;#10;    [current_x, current_y] = correct_prc_2.pos;&amp;#10;    dx = (endX - current_x);&amp;#10;    dy = (endY - current_y);&amp;#10;    move_fraction = feedback_steps;&amp;#10;    new_x = (current_x + (dx * move_fraction));&amp;#10;    new_y = (current_y + (dy * move_fraction));&amp;#10;    correct_prc_2.setPos([new_x, new_y]);&amp;#10;    if ((((Math.abs(dx) &lt; rest_jump) &amp;&amp; (Math.abs(dy) &lt; rest_jump)) || (animationTimer &gt; maxAnimationDur))) {&amp;#10;        correct_prc_2.setPos([endX, endY]);&amp;#10;        animationDone = true;&amp;#10;        moveCorrect = false;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="animation_control_prc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="prompt_prc_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + promptFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="prompt_prc_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="prompt_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3,0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_01_prc_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + dist_01File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_01_prc_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist01_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3,0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dist_02_prc_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + dist_02File" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dist_02_prc_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(dist02_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3,0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="correct_prc_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'stimuli\\practice_images\\' + correctFile" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="correct_prc_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="resolve_pos(correct_pos)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3,0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="instructions_start">
      <RoutineSettingsComponent name="instructions_start" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_start" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids.schedule_onset(instruction_part4, {&quot;trial_type&quot;: &quot;learning&quot;, &quot;stim_label&quot;: &quot;instruction_start&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;bids.schedule_onset(instruction_part4, trial_type=&quot;learning&quot;, &amp;#10;stim_label=&quot;instruction_start&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_part4_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part4.text = &quot;This is the end of the practice trials. Now the experiment starts. Remember to choose the next image in the sequence out of the three options. Try to remember the correct orders. Press any button to continue.&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part4.text = &quot;Das ist das Ende der \u00dcbungsdurchg\u00e4nge. Jetzt beginnt das Experiment. Denken Sie daran, das n\u00e4chste Bild in der Abfolge aus den drei Optionen auszuw\u00e4hlen. Versuchen Sie, sich die richtige Reihenfolge zu merken. Dr\u00fccken Sie eine beliebige Taste, um fortzufahren.&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part4.text = (&amp;#10;    &quot;This is the end of the practice trials. Now the &quot;&amp;#10;    &quot;experiment starts. Remember to choose the next image in the &quot;&amp;#10;    &quot;sequence out of the three options. Try to remember the correct orders. &quot;&amp;#10;    &quot;Press any button to continue.&quot;&amp;#10;    )&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part4.text = (&amp;#10;    &quot;Das ist das Ende der Übungsdurchgänge. Jetzt beginnt &quot;&amp;#10;    &quot;das Experiment. Denken Sie daran, das nächste Bild in der &quot;&amp;#10;    &quot;Abfolge aus den drei Optionen auszuwählen. Versuchen Sie, sich die richtige Reihenfolge zu merken. &quot;&amp;#10;    &quot;Drücken Sie eine beliebige Taste, um fortzufahren.&quot;&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_part4_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_5" plugin="None">
        <Param val="'y', 'g', 'b', 'r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_5" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="task_break">
      <RoutineSettingsComponent name="task_break" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="task_break" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="definition_breaks" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;continueRoutine = _pj.in_es6(trials.thisN, break_points);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# only break at the break points, otherwise don't continue this routine&amp;#10;continueRoutine = (trials.thisN in break_points)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="definition_breaks" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="breaks_instruction" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="breaks_instruction" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="break_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="break, the task will continue soon" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="startup_settings"/>
    <Routine name="instructions"/>
    <Routine name="instructions_02"/>
    <Routine name="instructions_03"/>
    <LoopInitiator loopType="TrialHandler" name="practice_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'promptFile': 'anchor.jpg', 'correctFile': 'cow.jpg', 'dist_01File': 'bread.jpg', 'dist_02File': 'plane.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'correct_ans': 'g'}, {'promptFile': 'cow.jpg', 'correctFile': 'ant.jpg', 'dist_01File': 'banana.jpg', 'dist_02File': 'glasses.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'correct_ans': 'y'}, {'promptFile': 'ant.jpg', 'correctFile': 'basket.jpg', 'dist_01File': 'axe.jpg', 'dist_02File': 'duck.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'correct_ans': 'r'}, {'promptFile': 'basket.jpg', 'correctFile': 'bed.jpg', 'dist_01File': 'belt.jpg', 'dist_02File': 'bread.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'correct_ans': 'r'}, {'promptFile': 'bed.jpg', 'correctFile': 'belt.jpg', 'dist_01File': 'anchor.jpg', 'dist_02File': 'desk.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'correct_ans': 'y'}, {'promptFile': 'belt.jpg', 'correctFile': 'bird.jpg', 'dist_01File': 'ant.jpg', 'dist_02File': 'crocodile.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'correct_ans': 'g'}, {'promptFile': 'bird.jpg', 'correctFile': 'axe.jpg', 'dist_01File': 'banana.jpg', 'dist_02File': 'baby_stroller.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'correct_ans': 'r'}, {'promptFile': 'axe.jpg', 'correctFile': 'bear.jpg', 'dist_01File': 'bike.jpg', 'dist_02File': 'cow.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'correct_ans': 'g'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="sequences/main_trials_prc.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="practice_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="choice_disp_learn"/>
    <Routine name="feedback_learn"/>
    <LoopTerminator name="practice_trials"/>
    <Routine name="instructions_start"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'promptFile': 'plane//plane_36.jpg', 'correctFile': 'car//car_13.jpg', 'dist_01File': 'house//house_29.jpg', 'dist_02File': 'bike//bike_32.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_13.jpg', 'correctFile': 'jacket//jacket_35.jpg', 'dist_01File': 'milk//milk_38.jpg', 'dist_02File': 'box//box_16.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_35.jpg', 'correctFile': 'bug//bug_27.jpg', 'dist_01File': 'milk//milk_38.jpg', 'dist_02File': 'bike//bike_36.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 2, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_27.jpg', 'correctFile': 'fish//fish_15.jpg', 'dist_01File': 'house//house_29.jpg', 'dist_02File': 'pencil//pencil_08.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 17, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_15.jpg', 'correctFile': 'house//house_29.jpg', 'dist_01File': 'car//car_13.jpg', 'dist_02File': 'chair//chair_31.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 6, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_29.jpg', 'correctFile': 'milk//milk_38.jpg', 'dist_01File': 'jacket//jacket_35.jpg', 'dist_02File': 'chair//chair_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_18.jpg', 'correctFile': 'car//car_01.jpg', 'dist_01File': 'fish//fish_23.jpg', 'dist_02File': 'pizza//pizza_04.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 19, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_01.jpg', 'correctFile': 'jacket//jacket_11.jpg', 'dist_01File': 'bug//bug_29.jpg', 'dist_02File': 'tree//tree_01.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 5, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_11.jpg', 'correctFile': 'bug//bug_29.jpg', 'dist_01File': 'house//house_18.jpg', 'dist_02File': 'chair//chair_04.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_29.jpg', 'correctFile': 'fish//fish_23.jpg', 'dist_01File': 'milk//milk_10.jpg', 'dist_02File': 'bird//bird_37.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 16, 'dist_02Trig': 3, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_23.jpg', 'correctFile': 'house//house_18.jpg', 'dist_01File': 'plane//plane_18.jpg', 'dist_02File': 'pencil//pencil_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_18.jpg', 'correctFile': 'milk//milk_10.jpg', 'dist_01File': 'bug//bug_29.jpg', 'dist_02File': 'face//face_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_14.jpg', 'correctFile': 'car//car_24.jpg', 'dist_01File': 'milk//milk_24.jpg', 'dist_02File': 'box//box_07.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 16, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_24.jpg', 'correctFile': 'jacket//jacket_07.jpg', 'dist_01File': 'fish//fish_27.jpg', 'dist_02File': 'pencil//pencil_12.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_07.jpg', 'correctFile': 'bug//bug_06.jpg', 'dist_01File': 'milk//milk_24.jpg', 'dist_02File': 'bike//bike_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_06.jpg', 'correctFile': 'fish//fish_27.jpg', 'dist_01File': 'house//house_07.jpg', 'dist_02File': 'bike//bike_30.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_27.jpg', 'correctFile': 'house//house_07.jpg', 'dist_01File': 'milk//milk_24.jpg', 'dist_02File': 'pizza//pizza_35.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 16, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_07.jpg', 'correctFile': 'milk//milk_24.jpg', 'dist_01File': 'plane//plane_14.jpg', 'dist_02File': 'chair//chair_20.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 20, 'dist_02Trig': 7, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_25.jpg', 'correctFile': 'car//car_19.jpg', 'dist_01File': 'house//house_09.jpg', 'dist_02File': 'box//box_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_19.jpg', 'correctFile': 'jacket//jacket_03.jpg', 'dist_01File': 'milk//milk_27.jpg', 'dist_02File': 'pizza//pizza_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_03.jpg', 'correctFile': 'bug//bug_33.jpg', 'dist_01File': 'plane//plane_25.jpg', 'dist_02File': 'pizza//pizza_15.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_33.jpg', 'correctFile': 'fish//fish_38.jpg', 'dist_01File': 'plane//plane_25.jpg', 'dist_02File': 'hammer//hammer_12.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 12, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_38.jpg', 'correctFile': 'house//house_09.jpg', 'dist_01File': 'milk//milk_27.jpg', 'dist_02File': 'box//box_32.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 16, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_09.jpg', 'correctFile': 'milk//milk_27.jpg', 'dist_01File': 'jacket//jacket_03.jpg', 'dist_02File': 'box//box_07.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_06.jpg', 'correctFile': 'car//car_40.jpg', 'dist_01File': 'fish//fish_13.jpg', 'dist_02File': 'bike//bike_26.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_40.jpg', 'correctFile': 'jacket//jacket_22.jpg', 'dist_01File': 'house//house_05.jpg', 'dist_02File': 'hand//hand_08.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 13, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_22.jpg', 'correctFile': 'bug//bug_25.jpg', 'dist_01File': 'milk//milk_03.jpg', 'dist_02File': 'bird//bird_13.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_25.jpg', 'correctFile': 'fish//fish_13.jpg', 'dist_01File': 'plane//plane_06.jpg', 'dist_02File': 'pencil//pencil_18.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_13.jpg', 'correctFile': 'house//house_05.jpg', 'dist_01File': 'plane//plane_06.jpg', 'dist_02File': 'bird//bird_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_05.jpg', 'correctFile': 'milk//milk_03.jpg', 'dist_01File': 'bug//bug_25.jpg', 'dist_02File': 'bird//bird_15.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_17.jpg', 'correctFile': 'car//car_22.jpg', 'dist_01File': 'house//house_30.jpg', 'dist_02File': 'box//box_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_22.jpg', 'correctFile': 'jacket//jacket_08.jpg', 'dist_01File': 'fish//fish_07.jpg', 'dist_02File': 'phones//phones_36.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 18, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_08.jpg', 'correctFile': 'bug//bug_16.jpg', 'dist_01File': 'plane//plane_17.jpg', 'dist_02File': 'hand//hand_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 13, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_16.jpg', 'correctFile': 'fish//fish_07.jpg', 'dist_01File': 'house//house_30.jpg', 'dist_02File': 'hammer//hammer_38.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 12, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_07.jpg', 'correctFile': 'house//house_30.jpg', 'dist_01File': 'jacket//jacket_08.jpg', 'dist_02File': 'dog//dog_36.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_30.jpg', 'correctFile': 'milk//milk_20.jpg', 'dist_01File': 'car//car_22.jpg', 'dist_02File': 'guitar//guitar_25.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 11, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_35.jpg', 'correctFile': 'car//car_29.jpg', 'dist_01File': 'house//house_17.jpg', 'dist_02File': 'face//face_10.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 9, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_29.jpg', 'correctFile': 'jacket//jacket_15.jpg', 'dist_01File': 'bug//bug_28.jpg', 'dist_02File': 'tree//tree_29.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 5, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_15.jpg', 'correctFile': 'bug//bug_28.jpg', 'dist_01File': 'milk//milk_21.jpg', 'dist_02File': 'hammer//hammer_10.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 12, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_28.jpg', 'correctFile': 'fish//fish_28.jpg', 'dist_01File': 'plane//plane_35.jpg', 'dist_02File': 'tree//tree_22.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_28.jpg', 'correctFile': 'house//house_17.jpg', 'dist_01File': 'plane//plane_35.jpg', 'dist_02File': 'berry//berry_05.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_17.jpg', 'correctFile': 'milk//milk_21.jpg', 'dist_01File': 'bug//bug_28.jpg', 'dist_02File': 'bird//bird_07.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_05.jpg', 'correctFile': 'car//car_12.jpg', 'dist_01File': 'fish//fish_36.jpg', 'dist_02File': 'tree//tree_04.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_12.jpg', 'correctFile': 'jacket//jacket_21.jpg', 'dist_01File': 'fish//fish_36.jpg', 'dist_02File': 'berry//berry_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_21.jpg', 'correctFile': 'bug//bug_12.jpg', 'dist_01File': 'milk//milk_22.jpg', 'dist_02File': 'guitar//guitar_16.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 11, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_12.jpg', 'correctFile': 'fish//fish_36.jpg', 'dist_01File': 'house//house_32.jpg', 'dist_02File': 'phones//phones_17.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 18, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_36.jpg', 'correctFile': 'house//house_32.jpg', 'dist_01File': 'plane//plane_05.jpg', 'dist_02File': 'face//face_23.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_32.jpg', 'correctFile': 'milk//milk_22.jpg', 'dist_01File': 'bug//bug_12.jpg', 'dist_02File': 'hammer//hammer_20.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 12, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_20.jpg', 'correctFile': 'car//car_27.jpg', 'dist_01File': 'house//house_26.jpg', 'dist_02File': 'berry//berry_23.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_27.jpg', 'correctFile': 'jacket//jacket_05.jpg', 'dist_01File': 'house//house_26.jpg', 'dist_02File': 'pizza//pizza_37.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_05.jpg', 'correctFile': 'bug//bug_18.jpg', 'dist_01File': 'house//house_26.jpg', 'dist_02File': 'pencil//pencil_13.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_18.jpg', 'correctFile': 'fish//fish_03.jpg', 'dist_01File': 'plane//plane_20.jpg', 'dist_02File': 'hand//hand_29.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 13, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_03.jpg', 'correctFile': 'house//house_26.jpg', 'dist_01File': 'plane//plane_20.jpg', 'dist_02File': 'hand//hand_21.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 13, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_26.jpg', 'correctFile': 'milk//milk_33.jpg', 'dist_01File': 'jacket//jacket_05.jpg', 'dist_02File': 'guitar//guitar_33.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_11.jpg', 'correctFile': 'car//car_04.jpg', 'dist_01File': 'fish//fish_40.jpg', 'dist_02File': 'hammer//hammer_08.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 12, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_04.jpg', 'correctFile': 'jacket//jacket_12.jpg', 'dist_01File': 'house//house_24.jpg', 'dist_02File': 'pizza//pizza_26.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_12.jpg', 'correctFile': 'bug//bug_39.jpg', 'dist_01File': 'house//house_24.jpg', 'dist_02File': 'berry//berry_25.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_39.jpg', 'correctFile': 'fish//fish_40.jpg', 'dist_01File': 'milk//milk_37.jpg', 'dist_02File': 'bird//bird_40.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 16, 'dist_02Trig': 3, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_40.jpg', 'correctFile': 'house//house_24.jpg', 'dist_01File': 'milk//milk_37.jpg', 'dist_02File': 'bike//bike_20.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 16, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_24.jpg', 'correctFile': 'milk//milk_37.jpg', 'dist_01File': 'plane//plane_11.jpg', 'dist_02File': 'dog//dog_32.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 20, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_31.jpg', 'correctFile': 'car//car_15.jpg', 'dist_01File': 'house//house_16.jpg', 'dist_02File': 'face//face_24.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_15.jpg', 'correctFile': 'jacket//jacket_13.jpg', 'dist_01File': 'milk//milk_39.jpg', 'dist_02File': 'bike//bike_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_13.jpg', 'correctFile': 'bug//bug_26.jpg', 'dist_01File': 'house//house_16.jpg', 'dist_02File': 'chair//chair_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_26.jpg', 'correctFile': 'fish//fish_20.jpg', 'dist_01File': 'house//house_16.jpg', 'dist_02File': 'pizza//pizza_26.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_20.jpg', 'correctFile': 'house//house_16.jpg', 'dist_01File': 'car//car_15.jpg', 'dist_02File': 'bike//bike_39.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 6, 'dist_02Trig': 2, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_16.jpg', 'correctFile': 'milk//milk_39.jpg', 'dist_01File': 'car//car_15.jpg', 'dist_02File': 'pizza//pizza_36.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_29.jpg', 'correctFile': 'car//car_21.jpg', 'dist_01File': 'bug//bug_10.jpg', 'dist_02File': 'hammer//hammer_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 5, 'dist_02Trig': 12, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_21.jpg', 'correctFile': 'jacket//jacket_09.jpg', 'dist_01File': 'fish//fish_06.jpg', 'dist_02File': 'bird//bird_02.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 3, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_09.jpg', 'correctFile': 'bug//bug_10.jpg', 'dist_01File': 'plane//plane_29.jpg', 'dist_02File': 'pencil//pencil_17.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 17, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_10.jpg', 'correctFile': 'fish//fish_06.jpg', 'dist_01File': 'plane//plane_29.jpg', 'dist_02File': 'face//face_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 9, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_06.jpg', 'correctFile': 'house//house_11.jpg', 'dist_01File': 'plane//plane_29.jpg', 'dist_02File': 'bike//bike_34.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_11.jpg', 'correctFile': 'milk//milk_31.jpg', 'dist_01File': 'bug//bug_10.jpg', 'dist_02File': 'phones//phones_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 18, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_26.jpg', 'correctFile': 'car//car_28.jpg', 'dist_01File': 'milk//milk_25.jpg', 'dist_02File': 'chair//chair_05.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 16, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_28.jpg', 'correctFile': 'jacket//jacket_18.jpg', 'dist_01File': 'milk//milk_25.jpg', 'dist_02File': 'berry//berry_39.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_18.jpg', 'correctFile': 'bug//bug_35.jpg', 'dist_01File': 'milk//milk_25.jpg', 'dist_02File': 'phones//phones_15.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 18, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_35.jpg', 'correctFile': 'fish//fish_26.jpg', 'dist_01File': 'plane//plane_26.jpg', 'dist_02File': 'hand//hand_28.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 13, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_26.jpg', 'correctFile': 'house//house_21.jpg', 'dist_01File': 'plane//plane_26.jpg', 'dist_02File': 'bird//bird_06.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_21.jpg', 'correctFile': 'milk//milk_25.jpg', 'dist_01File': 'car//car_28.jpg', 'dist_02File': 'guitar//guitar_04.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_19.jpg', 'correctFile': 'car//car_17.jpg', 'dist_01File': 'house//house_25.jpg', 'dist_02File': 'hand//hand_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 13, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_17.jpg', 'correctFile': 'jacket//jacket_17.jpg', 'dist_01File': 'house//house_25.jpg', 'dist_02File': 'pizza//pizza_37.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 19, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_17.jpg', 'correctFile': 'bug//bug_05.jpg', 'dist_01File': 'fish//fish_24.jpg', 'dist_02File': 'tree//tree_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 10, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_05.jpg', 'correctFile': 'fish//fish_24.jpg', 'dist_01File': 'car//car_17.jpg', 'dist_02File': 'tree//tree_28.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_24.jpg', 'correctFile': 'house//house_25.jpg', 'dist_01File': 'plane//plane_19.jpg', 'dist_02File': 'pencil//pencil_18.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_25.jpg', 'correctFile': 'milk//milk_04.jpg', 'dist_01File': 'car//car_17.jpg', 'dist_02File': 'tree//tree_10.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_39.jpg', 'correctFile': 'car//car_03.jpg', 'dist_01File': 'jacket//jacket_06.jpg', 'dist_02File': 'bike//bike_34.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 15, 'dist_02Trig': 2, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_03.jpg', 'correctFile': 'jacket//jacket_06.jpg', 'dist_01File': 'fish//fish_32.jpg', 'dist_02File': 'dog//dog_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_06.jpg', 'correctFile': 'bug//bug_07.jpg', 'dist_01File': 'fish//fish_32.jpg', 'dist_02File': 'hammer//hammer_40.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 10, 'dist_02Trig': 12, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_07.jpg', 'correctFile': 'fish//fish_32.jpg', 'dist_01File': 'milk//milk_40.jpg', 'dist_02File': 'berry//berry_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 16, 'dist_02Trig': 1, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_32.jpg', 'correctFile': 'house//house_08.jpg', 'dist_01File': 'jacket//jacket_06.jpg', 'dist_02File': 'phones//phones_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 18, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_08.jpg', 'correctFile': 'milk//milk_40.jpg', 'dist_01File': 'plane//plane_39.jpg', 'dist_02File': 'pencil//pencil_26.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 20, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_34.jpg', 'correctFile': 'car//car_25.jpg', 'dist_01File': 'bug//bug_03.jpg', 'dist_02File': 'tree//tree_09.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 5, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_25.jpg', 'correctFile': 'jacket//jacket_34.jpg', 'dist_01File': 'milk//milk_29.jpg', 'dist_02File': 'box//box_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_34.jpg', 'correctFile': 'bug//bug_03.jpg', 'dist_01File': 'house//house_22.jpg', 'dist_02File': 'pizza//pizza_26.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_03.jpg', 'correctFile': 'fish//fish_18.jpg', 'dist_01File': 'plane//plane_34.jpg', 'dist_02File': 'tree//tree_21.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_18.jpg', 'correctFile': 'house//house_22.jpg', 'dist_01File': 'jacket//jacket_34.jpg', 'dist_02File': 'pizza//pizza_26.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_22.jpg', 'correctFile': 'milk//milk_29.jpg', 'dist_01File': 'jacket//jacket_34.jpg', 'dist_02File': 'bird//bird_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_23.jpg', 'correctFile': 'car//car_32.jpg', 'dist_01File': 'milk//milk_36.jpg', 'dist_02File': 'pizza//pizza_26.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 16, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_32.jpg', 'correctFile': 'jacket//jacket_23.jpg', 'dist_01File': 'bug//bug_31.jpg', 'dist_02File': 'guitar//guitar_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 5, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_23.jpg', 'correctFile': 'bug//bug_31.jpg', 'dist_01File': 'fish//fish_01.jpg', 'dist_02File': 'chair//chair_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 10, 'dist_02Trig': 7, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_31.jpg', 'correctFile': 'fish//fish_01.jpg', 'dist_01File': 'plane//plane_23.jpg', 'dist_02File': 'chair//chair_32.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_01.jpg', 'correctFile': 'house//house_38.jpg', 'dist_01File': 'jacket//jacket_23.jpg', 'dist_02File': 'chair//chair_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_38.jpg', 'correctFile': 'milk//milk_36.jpg', 'dist_01File': 'jacket//jacket_23.jpg', 'dist_02File': 'guitar//guitar_04.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 11, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_04.jpg', 'correctFile': 'car//car_38.jpg', 'dist_01File': 'house//house_19.jpg', 'dist_02File': 'pizza//pizza_04.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 19, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_38.jpg', 'correctFile': 'jacket//jacket_33.jpg', 'dist_01File': 'milk//milk_06.jpg', 'dist_02File': 'face//face_38.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_33.jpg', 'correctFile': 'bug//bug_15.jpg', 'dist_01File': 'house//house_19.jpg', 'dist_02File': 'berry//berry_31.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_15.jpg', 'correctFile': 'fish//fish_35.jpg', 'dist_01File': 'house//house_19.jpg', 'dist_02File': 'box//box_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_35.jpg', 'correctFile': 'house//house_19.jpg', 'dist_01File': 'milk//milk_06.jpg', 'dist_02File': 'guitar//guitar_34.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 16, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_19.jpg', 'correctFile': 'milk//milk_06.jpg', 'dist_01File': 'bug//bug_15.jpg', 'dist_02File': 'face//face_22.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 9, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_15.jpg', 'correctFile': 'car//car_26.jpg', 'dist_01File': 'jacket//jacket_16.jpg', 'dist_02File': 'dog//dog_07.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 15, 'dist_02Trig': 8, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_26.jpg', 'correctFile': 'jacket//jacket_16.jpg', 'dist_01File': 'house//house_14.jpg', 'dist_02File': 'bird//bird_38.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_16.jpg', 'correctFile': 'bug//bug_24.jpg', 'dist_01File': 'fish//fish_02.jpg', 'dist_02File': 'guitar//guitar_06.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 10, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_24.jpg', 'correctFile': 'fish//fish_02.jpg', 'dist_01File': 'car//car_26.jpg', 'dist_02File': 'box//box_34.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_02.jpg', 'correctFile': 'house//house_14.jpg', 'dist_01File': 'jacket//jacket_16.jpg', 'dist_02File': 'pencil//pencil_14.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 17, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_14.jpg', 'correctFile': 'milk//milk_26.jpg', 'dist_01File': 'car//car_26.jpg', 'dist_02File': 'bird//bird_19.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 3, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_09.jpg', 'correctFile': 'car//car_34.jpg', 'dist_01File': 'milk//milk_28.jpg', 'dist_02File': 'pencil//pencil_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 16, 'dist_02Trig': 17, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_34.jpg', 'correctFile': 'jacket//jacket_10.jpg', 'dist_01File': 'milk//milk_28.jpg', 'dist_02File': 'pizza//pizza_27.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 19, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_10.jpg', 'correctFile': 'bug//bug_40.jpg', 'dist_01File': 'milk//milk_28.jpg', 'dist_02File': 'chair//chair_35.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_40.jpg', 'correctFile': 'fish//fish_17.jpg', 'dist_01File': 'milk//milk_28.jpg', 'dist_02File': 'phones//phones_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 16, 'dist_02Trig': 18, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_17.jpg', 'correctFile': 'house//house_40.jpg', 'dist_01File': 'car//car_34.jpg', 'dist_02File': 'tree//tree_17.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 6, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_40.jpg', 'correctFile': 'milk//milk_28.jpg', 'dist_01File': 'plane//plane_09.jpg', 'dist_02File': 'hand//hand_06.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 20, 'dist_02Trig': 13, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'pizza//pizza_13.jpg', 'correctFile': 'chair//chair_07.jpg', 'dist_01File': 'bike//bike_28.jpg', 'dist_02File': 'bird//bird_15.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 2, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_07.jpg', 'correctFile': 'hand//hand_07.jpg', 'dist_01File': 'hammer//hammer_27.jpg', 'dist_02File': 'berry//berry_24.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_07.jpg', 'correctFile': 'phones//phones_28.jpg', 'dist_01File': 'pizza//pizza_13.jpg', 'dist_02File': 'dog//dog_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 19, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_28.jpg', 'correctFile': 'guitar//guitar_23.jpg', 'dist_01File': 'bike//bike_28.jpg', 'dist_02File': 'tree//tree_31.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 2, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_23.jpg', 'correctFile': 'bike//bike_28.jpg', 'dist_01File': 'pizza//pizza_13.jpg', 'dist_02File': 'plane//plane_17.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 19, 'dist_02Trig': 20, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_28.jpg', 'correctFile': 'hammer//hammer_27.jpg', 'dist_01File': 'chair//chair_07.jpg', 'dist_02File': 'dog//dog_08.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 8, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_31.jpg', 'correctFile': 'chair//chair_04.jpg', 'dist_01File': 'hand//hand_08.jpg', 'dist_02File': 'plane//plane_32.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 13, 'dist_02Trig': 20, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_04.jpg', 'correctFile': 'hand//hand_08.jpg', 'dist_01File': 'guitar//guitar_27.jpg', 'dist_02File': 'jacket//jacket_28.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 11, 'dist_02Trig': 15, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_08.jpg', 'correctFile': 'phones//phones_04.jpg', 'dist_01File': 'guitar//guitar_27.jpg', 'dist_02File': 'house//house_06.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 11, 'dist_02Trig': 14, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_04.jpg', 'correctFile': 'guitar//guitar_27.jpg', 'dist_01File': 'hammer//hammer_07.jpg', 'dist_02File': 'tree//tree_31.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 21, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_27.jpg', 'correctFile': 'bike//bike_22.jpg', 'dist_01File': 'hand//hand_08.jpg', 'dist_02File': 'milk//milk_05.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 13, 'dist_02Trig': 16, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_22.jpg', 'correctFile': 'hammer//hammer_07.jpg', 'dist_01File': 'chair//chair_04.jpg', 'dist_02File': 'bird//bird_23.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_17.jpg', 'correctFile': 'chair//chair_15.jpg', 'dist_01File': 'bike//bike_09.jpg', 'dist_02File': 'house//house_12.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 2, 'dist_02Trig': 14, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_15.jpg', 'correctFile': 'hand//hand_15.jpg', 'dist_01File': 'guitar//guitar_31.jpg', 'dist_02File': 'bird//bird_13.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 11, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_15.jpg', 'correctFile': 'phones//phones_37.jpg', 'dist_01File': 'hammer//hammer_30.jpg', 'dist_02File': 'dog//dog_03.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_37.jpg', 'correctFile': 'guitar//guitar_31.jpg', 'dist_01File': 'bike//bike_09.jpg', 'dist_02File': 'dog//dog_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 2, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_31.jpg', 'correctFile': 'bike//bike_09.jpg', 'dist_01File': 'hammer//hammer_30.jpg', 'dist_02File': 'dog//dog_12.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 12, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_09.jpg', 'correctFile': 'hammer//hammer_30.jpg', 'dist_01File': 'pizza//pizza_17.jpg', 'dist_02File': 'box//box_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 19, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_12.jpg', 'correctFile': 'chair//chair_21.jpg', 'dist_01File': 'guitar//guitar_05.jpg', 'dist_02File': 'bird//bird_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 11, 'dist_02Trig': 3, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_21.jpg', 'correctFile': 'hand//hand_33.jpg', 'dist_01File': 'guitar//guitar_05.jpg', 'dist_02File': 'house//house_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 11, 'dist_02Trig': 14, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_33.jpg', 'correctFile': 'phones//phones_17.jpg', 'dist_01File': 'hammer//hammer_39.jpg', 'dist_02File': 'dog//dog_04.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_17.jpg', 'correctFile': 'guitar//guitar_05.jpg', 'dist_01File': 'pizza//pizza_12.jpg', 'dist_02File': 'pencil//pencil_39.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 19, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_05.jpg', 'correctFile': 'bike//bike_32.jpg', 'dist_01File': 'chair//chair_21.jpg', 'dist_02File': 'milk//milk_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_32.jpg', 'correctFile': 'hammer//hammer_39.jpg', 'dist_01File': 'phones//phones_17.jpg', 'dist_02File': 'jacket//jacket_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 18, 'dist_02Trig': 15, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_07.jpg', 'correctFile': 'chair//chair_05.jpg', 'dist_01File': 'bike//bike_17.jpg', 'dist_02File': 'dog//dog_18.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 2, 'dist_02Trig': 8, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_05.jpg', 'correctFile': 'hand//hand_39.jpg', 'dist_01File': 'hammer//hammer_12.jpg', 'dist_02File': 'fish//fish_25.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 10, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_39.jpg', 'correctFile': 'phones//phones_01.jpg', 'dist_01File': 'guitar//guitar_07.jpg', 'dist_02File': 'berry//berry_19.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 11, 'dist_02Trig': 1, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_01.jpg', 'correctFile': 'guitar//guitar_07.jpg', 'dist_01File': 'pizza//pizza_07.jpg', 'dist_02File': 'bug//bug_12.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 19, 'dist_02Trig': 5, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_07.jpg', 'correctFile': 'bike//bike_17.jpg', 'dist_01File': 'hand//hand_39.jpg', 'dist_02File': 'box//box_05.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 13, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_17.jpg', 'correctFile': 'hammer//hammer_12.jpg', 'dist_01File': 'chair//chair_05.jpg', 'dist_02File': 'tree//tree_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 21, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_32.jpg', 'correctFile': 'chair//chair_37.jpg', 'dist_01File': 'phones//phones_16.jpg', 'dist_02File': 'milk//milk_32.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 18, 'dist_02Trig': 16, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_37.jpg', 'correctFile': 'hand//hand_35.jpg', 'dist_01File': 'phones//phones_16.jpg', 'dist_02File': 'plane//plane_20.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 18, 'dist_02Trig': 20, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_35.jpg', 'correctFile': 'phones//phones_16.jpg', 'dist_01File': 'guitar//guitar_30.jpg', 'dist_02File': 'jacket//jacket_05.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 11, 'dist_02Trig': 15, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_16.jpg', 'correctFile': 'guitar//guitar_30.jpg', 'dist_01File': 'chair//chair_37.jpg', 'dist_02File': 'bug//bug_33.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 7, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_30.jpg', 'correctFile': 'bike//bike_04.jpg', 'dist_01File': 'chair//chair_37.jpg', 'dist_02File': 'dog//dog_15.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_04.jpg', 'correctFile': 'hammer//hammer_13.jpg', 'dist_01File': 'chair//chair_37.jpg', 'dist_02File': 'box//box_36.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_29.jpg', 'correctFile': 'chair//chair_01.jpg', 'dist_01File': 'hammer//hammer_33.jpg', 'dist_02File': 'box//box_11.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 12, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_01.jpg', 'correctFile': 'hand//hand_28.jpg', 'dist_01File': 'phones//phones_21.jpg', 'dist_02File': 'milk//milk_02.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 18, 'dist_02Trig': 16, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_28.jpg', 'correctFile': 'phones//phones_21.jpg', 'dist_01File': 'hammer//hammer_33.jpg', 'dist_02File': 'berry//berry_02.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_21.jpg', 'correctFile': 'guitar//guitar_36.jpg', 'dist_01File': 'hammer//hammer_33.jpg', 'dist_02File': 'pencil//pencil_26.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_36.jpg', 'correctFile': 'bike//bike_23.jpg', 'dist_01File': 'chair//chair_01.jpg', 'dist_02File': 'face//face_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 9, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_23.jpg', 'correctFile': 'hammer//hammer_33.jpg', 'dist_01File': 'hand//hand_28.jpg', 'dist_02File': 'milk//milk_21.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 13, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_39.jpg', 'correctFile': 'chair//chair_14.jpg', 'dist_01File': 'hammer//hammer_04.jpg', 'dist_02File': 'fish//fish_07.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 12, 'dist_02Trig': 10, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_14.jpg', 'correctFile': 'hand//hand_16.jpg', 'dist_01File': 'hammer//hammer_04.jpg', 'dist_02File': 'car//car_10.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 6, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_16.jpg', 'correctFile': 'phones//phones_24.jpg', 'dist_01File': 'guitar//guitar_16.jpg', 'dist_02File': 'tree//tree_11.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 11, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_24.jpg', 'correctFile': 'guitar//guitar_16.jpg', 'dist_01File': 'hammer//hammer_04.jpg', 'dist_02File': 'fish//fish_30.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 10, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_16.jpg', 'correctFile': 'bike//bike_05.jpg', 'dist_01File': 'hammer//hammer_04.jpg', 'dist_02File': 'fish//fish_30.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 12, 'dist_02Trig': 10, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_05.jpg', 'correctFile': 'hammer//hammer_04.jpg', 'dist_01File': 'hand//hand_16.jpg', 'dist_02File': 'bug//bug_39.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 13, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_25.jpg', 'correctFile': 'chair//chair_08.jpg', 'dist_01File': 'hand//hand_04.jpg', 'dist_02File': 'face//face_09.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 13, 'dist_02Trig': 9, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_08.jpg', 'correctFile': 'hand//hand_04.jpg', 'dist_01File': 'hammer//hammer_08.jpg', 'dist_02File': 'plane//plane_37.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 20, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_04.jpg', 'correctFile': 'phones//phones_39.jpg', 'dist_01File': 'pizza//pizza_25.jpg', 'dist_02File': 'bug//bug_33.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 19, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_39.jpg', 'correctFile': 'guitar//guitar_13.jpg', 'dist_01File': 'chair//chair_08.jpg', 'dist_02File': 'plane//plane_26.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 7, 'dist_02Trig': 20, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_13.jpg', 'correctFile': 'bike//bike_06.jpg', 'dist_01File': 'hammer//hammer_08.jpg', 'dist_02File': 'berry//berry_03.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 12, 'dist_02Trig': 1, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_06.jpg', 'correctFile': 'hammer//hammer_08.jpg', 'dist_01File': 'phones//phones_39.jpg', 'dist_02File': 'berry//berry_30.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 18, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_36.jpg', 'correctFile': 'chair//chair_11.jpg', 'dist_01File': 'phones//phones_26.jpg', 'dist_02File': 'face//face_40.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 18, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_11.jpg', 'correctFile': 'hand//hand_03.jpg', 'dist_01File': 'bike//bike_30.jpg', 'dist_02File': 'bug//bug_02.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 2, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_03.jpg', 'correctFile': 'phones//phones_26.jpg', 'dist_01File': 'pizza//pizza_36.jpg', 'dist_02File': 'berry//berry_31.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 19, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_26.jpg', 'correctFile': 'guitar//guitar_03.jpg', 'dist_01File': 'hammer//hammer_36.jpg', 'dist_02File': 'pencil//pencil_34.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_03.jpg', 'correctFile': 'bike//bike_30.jpg', 'dist_01File': 'pizza//pizza_36.jpg', 'dist_02File': 'berry//berry_08.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 19, 'dist_02Trig': 1, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_30.jpg', 'correctFile': 'hammer//hammer_36.jpg', 'dist_01File': 'chair//chair_11.jpg', 'dist_02File': 'bug//bug_14.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'plane//plane_40.jpg', 'correctFile': 'car//car_10.jpg', 'dist_01File': 'bug//bug_21.jpg', 'dist_02File': 'guitar//guitar_14.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 5, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_10.jpg', 'correctFile': 'jacket//jacket_19.jpg', 'dist_01File': 'house//house_36.jpg', 'dist_02File': 'chair//chair_30.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_19.jpg', 'correctFile': 'bug//bug_21.jpg', 'dist_01File': 'milk//milk_30.jpg', 'dist_02File': 'pencil//pencil_16.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_21.jpg', 'correctFile': 'fish//fish_11.jpg', 'dist_01File': 'house//house_36.jpg', 'dist_02File': 'box//box_14.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_11.jpg', 'correctFile': 'house//house_36.jpg', 'dist_01File': 'jacket//jacket_19.jpg', 'dist_02File': 'hand//hand_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 13, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_36.jpg', 'correctFile': 'milk//milk_30.jpg', 'dist_01File': 'car//car_10.jpg', 'dist_02File': 'hand//hand_03.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 13, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_01.jpg', 'correctFile': 'car//car_20.jpg', 'dist_01File': 'house//house_27.jpg', 'dist_02File': 'pencil//pencil_13.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_20.jpg', 'correctFile': 'jacket//jacket_37.jpg', 'dist_01File': 'fish//fish_09.jpg', 'dist_02File': 'chair//chair_04.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 7, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_37.jpg', 'correctFile': 'bug//bug_01.jpg', 'dist_01File': 'plane//plane_01.jpg', 'dist_02File': 'pizza//pizza_27.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 19, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_01.jpg', 'correctFile': 'fish//fish_09.jpg', 'dist_01File': 'plane//plane_01.jpg', 'dist_02File': 'guitar//guitar_11.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 20, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_09.jpg', 'correctFile': 'house//house_27.jpg', 'dist_01File': 'jacket//jacket_37.jpg', 'dist_02File': 'dog//dog_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_27.jpg', 'correctFile': 'milk//milk_14.jpg', 'dist_01File': 'plane//plane_01.jpg', 'dist_02File': 'chair//chair_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 20, 'dist_02Trig': 7, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_16.jpg', 'correctFile': 'car//car_05.jpg', 'dist_01File': 'fish//fish_08.jpg', 'dist_02File': 'bird//bird_01.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 3, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_05.jpg', 'correctFile': 'jacket//jacket_26.jpg', 'dist_01File': 'milk//milk_05.jpg', 'dist_02File': 'box//box_35.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 16, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_26.jpg', 'correctFile': 'bug//bug_08.jpg', 'dist_01File': 'house//house_35.jpg', 'dist_02File': 'chair//chair_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 14, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'bug//bug_08.jpg', 'correctFile': 'fish//fish_08.jpg', 'dist_01File': 'car//car_05.jpg', 'dist_02File': 'pizza//pizza_22.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_08.jpg', 'correctFile': 'house//house_35.jpg', 'dist_01File': 'milk//milk_05.jpg', 'dist_02File': 'guitar//guitar_21.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 16, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_35.jpg', 'correctFile': 'milk//milk_05.jpg', 'dist_01File': 'bug//bug_08.jpg', 'dist_02File': 'dog//dog_16.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 8, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_10.jpg', 'correctFile': 'car//car_09.jpg', 'dist_01File': 'fish//fish_22.jpg', 'dist_02File': 'dog//dog_20.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_09.jpg', 'correctFile': 'jacket//jacket_39.jpg', 'dist_01File': 'fish//fish_22.jpg', 'dist_02File': 'pizza//pizza_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 19, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_39.jpg', 'correctFile': 'bug//bug_14.jpg', 'dist_01File': 'plane//plane_10.jpg', 'dist_02File': 'box//box_19.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_14.jpg', 'correctFile': 'fish//fish_22.jpg', 'dist_01File': 'milk//milk_23.jpg', 'dist_02File': 'pencil//pencil_30.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 16, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_22.jpg', 'correctFile': 'house//house_39.jpg', 'dist_01File': 'car//car_09.jpg', 'dist_02File': 'tree//tree_16.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 6, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_39.jpg', 'correctFile': 'milk//milk_23.jpg', 'dist_01File': 'jacket//jacket_39.jpg', 'dist_02File': 'pizza//pizza_37.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_21.jpg', 'correctFile': 'car//car_16.jpg', 'dist_01File': 'bug//bug_34.jpg', 'dist_02File': 'hand//hand_34.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 5, 'dist_02Trig': 13, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_16.jpg', 'correctFile': 'jacket//jacket_29.jpg', 'dist_01File': 'bug//bug_34.jpg', 'dist_02File': 'guitar//guitar_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 5, 'dist_02Trig': 11, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_29.jpg', 'correctFile': 'bug//bug_34.jpg', 'dist_01File': 'milk//milk_34.jpg', 'dist_02File': 'berry//berry_04.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_34.jpg', 'correctFile': 'fish//fish_31.jpg', 'dist_01File': 'milk//milk_34.jpg', 'dist_02File': 'dog//dog_01.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 16, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_31.jpg', 'correctFile': 'house//house_34.jpg', 'dist_01File': 'jacket//jacket_29.jpg', 'dist_02File': 'bike//bike_05.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_34.jpg', 'correctFile': 'milk//milk_34.jpg', 'dist_01File': 'jacket//jacket_29.jpg', 'dist_02File': 'face//face_12.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'plane//plane_03.jpg', 'correctFile': 'car//car_08.jpg', 'dist_01File': 'house//house_01.jpg', 'dist_02File': 'phones//phones_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 18, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_08.jpg', 'correctFile': 'jacket//jacket_14.jpg', 'dist_01File': 'bug//bug_04.jpg', 'dist_02File': 'chair//chair_35.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 5, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_14.jpg', 'correctFile': 'bug//bug_04.jpg', 'dist_01File': 'plane//plane_03.jpg', 'dist_02File': 'tree//tree_02.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_04.jpg', 'correctFile': 'fish//fish_16.jpg', 'dist_01File': 'car//car_08.jpg', 'dist_02File': 'pencil//pencil_30.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 17, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_16.jpg', 'correctFile': 'house//house_01.jpg', 'dist_01File': 'plane//plane_03.jpg', 'dist_02File': 'tree//tree_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_01.jpg', 'correctFile': 'milk//milk_16.jpg', 'dist_01File': 'plane//plane_03.jpg', 'dist_02File': 'guitar//guitar_03.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 20, 'dist_02Trig': 11, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_28.jpg', 'correctFile': 'car//car_11.jpg', 'dist_01File': 'house//house_03.jpg', 'dist_02File': 'phones//phones_15.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 18, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'car//car_11.jpg', 'correctFile': 'jacket//jacket_31.jpg', 'dist_01File': 'fish//fish_04.jpg', 'dist_02File': 'hammer//hammer_37.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 10, 'dist_02Trig': 12, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_31.jpg', 'correctFile': 'bug//bug_13.jpg', 'dist_01File': 'fish//fish_04.jpg', 'dist_02File': 'box//box_34.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 10, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_13.jpg', 'correctFile': 'fish//fish_04.jpg', 'dist_01File': 'car//car_11.jpg', 'dist_02File': 'box//box_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_04.jpg', 'correctFile': 'house//house_03.jpg', 'dist_01File': 'jacket//jacket_31.jpg', 'dist_02File': 'bike//bike_27.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'house//house_03.jpg', 'correctFile': 'milk//milk_19.jpg', 'dist_01File': 'bug//bug_13.jpg', 'dist_02File': 'chair//chair_15.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 7, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_33.jpg', 'correctFile': 'car//car_02.jpg', 'dist_01File': 'house//house_13.jpg', 'dist_02File': 'berry//berry_34.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 14, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_02.jpg', 'correctFile': 'jacket//jacket_20.jpg', 'dist_01File': 'house//house_13.jpg', 'dist_02File': 'bike//bike_06.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 2, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_20.jpg', 'correctFile': 'bug//bug_09.jpg', 'dist_01File': 'plane//plane_33.jpg', 'dist_02File': 'dog//dog_25.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_09.jpg', 'correctFile': 'fish//fish_05.jpg', 'dist_01File': 'car//car_02.jpg', 'dist_02File': 'phones//phones_14.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 18, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'fish//fish_05.jpg', 'correctFile': 'house//house_13.jpg', 'dist_01File': 'plane//plane_33.jpg', 'dist_02File': 'box//box_31.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_13.jpg', 'correctFile': 'milk//milk_02.jpg', 'dist_01File': 'jacket//jacket_20.jpg', 'dist_02File': 'hammer//hammer_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 15, 'dist_02Trig': 12, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_30.jpg', 'correctFile': 'car//car_18.jpg', 'dist_01File': 'fish//fish_30.jpg', 'dist_02File': 'berry//berry_32.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 10, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_18.jpg', 'correctFile': 'jacket//jacket_25.jpg', 'dist_01File': 'house//house_10.jpg', 'dist_02File': 'dog//dog_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 14, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'jacket//jacket_25.jpg', 'correctFile': 'bug//bug_37.jpg', 'dist_01File': 'plane//plane_30.jpg', 'dist_02File': 'dog//dog_36.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 20, 'dist_02Trig': 8, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_37.jpg', 'correctFile': 'fish//fish_30.jpg', 'dist_01File': 'car//car_18.jpg', 'dist_02File': 'dog//dog_15.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 6, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_30.jpg', 'correctFile': 'house//house_10.jpg', 'dist_01File': 'jacket//jacket_25.jpg', 'dist_02File': 'tree//tree_32.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 15, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_10.jpg', 'correctFile': 'milk//milk_17.jpg', 'dist_01File': 'car//car_18.jpg', 'dist_02File': 'chair//chair_35.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 6, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'plane//plane_08.jpg', 'correctFile': 'car//car_37.jpg', 'dist_01File': 'jacket//jacket_38.jpg', 'dist_02File': 'tree//tree_04.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 20, 'correctTrig': 6, 'dist_01Trig': 15, 'dist_02Trig': 21, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'car//car_37.jpg', 'correctFile': 'jacket//jacket_38.jpg', 'dist_01File': 'bug//bug_30.jpg', 'dist_02File': 'bike//bike_10.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 6, 'correctTrig': 15, 'dist_01Trig': 5, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'jacket//jacket_38.jpg', 'correctFile': 'bug//bug_30.jpg', 'dist_01File': 'milk//milk_13.jpg', 'dist_02File': 'box//box_32.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 15, 'correctTrig': 5, 'dist_01Trig': 16, 'dist_02Trig': 4, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'bug//bug_30.jpg', 'correctFile': 'fish//fish_19.jpg', 'dist_01File': 'house//house_28.jpg', 'dist_02File': 'berry//berry_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 5, 'correctTrig': 10, 'dist_01Trig': 14, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'fish//fish_19.jpg', 'correctFile': 'house//house_28.jpg', 'dist_01File': 'plane//plane_08.jpg', 'dist_02File': 'berry//berry_10.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 10, 'correctTrig': 14, 'dist_01Trig': 20, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'A', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'house//house_28.jpg', 'correctFile': 'milk//milk_13.jpg', 'dist_01File': 'bug//bug_30.jpg', 'dist_02File': 'bird//bird_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 14, 'correctTrig': 16, 'dist_01Trig': 5, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'A', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_09.jpg', 'correctFile': 'chair//chair_22.jpg', 'dist_01File': 'guitar//guitar_25.jpg', 'dist_02File': 'house//house_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 11, 'dist_02Trig': 14, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_22.jpg', 'correctFile': 'hand//hand_06.jpg', 'dist_01File': 'hammer//hammer_24.jpg', 'dist_02File': 'fish//fish_31.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 10, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_06.jpg', 'correctFile': 'phones//phones_38.jpg', 'dist_01File': 'hammer//hammer_24.jpg', 'dist_02File': 'house//house_22.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 14, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_38.jpg', 'correctFile': 'guitar//guitar_25.jpg', 'dist_01File': 'hammer//hammer_24.jpg', 'dist_02File': 'dog//dog_03.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 8, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_25.jpg', 'correctFile': 'bike//bike_12.jpg', 'dist_01File': 'pizza//pizza_09.jpg', 'dist_02File': 'pencil//pencil_38.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 19, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_12.jpg', 'correctFile': 'hammer//hammer_24.jpg', 'dist_01File': 'chair//chair_22.jpg', 'dist_02File': 'fish//fish_25.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 10, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_26.jpg', 'correctFile': 'chair//chair_03.jpg', 'dist_01File': 'hand//hand_27.jpg', 'dist_02File': 'fish//fish_23.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 13, 'dist_02Trig': 10, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_03.jpg', 'correctFile': 'hand//hand_27.jpg', 'dist_01File': 'bike//bike_33.jpg', 'dist_02File': 'berry//berry_40.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 2, 'dist_02Trig': 1, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_27.jpg', 'correctFile': 'phones//phones_05.jpg', 'dist_01File': 'hammer//hammer_25.jpg', 'dist_02File': 'bug//bug_15.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 5, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_05.jpg', 'correctFile': 'guitar//guitar_19.jpg', 'dist_01File': 'hammer//hammer_25.jpg', 'dist_02File': 'bird//bird_40.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_19.jpg', 'correctFile': 'bike//bike_33.jpg', 'dist_01File': 'chair//chair_03.jpg', 'dist_02File': 'bug//bug_10.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_33.jpg', 'correctFile': 'hammer//hammer_25.jpg', 'dist_01File': 'pizza//pizza_26.jpg', 'dist_02File': 'plane//plane_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 19, 'dist_02Trig': 20, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_24.jpg', 'correctFile': 'chair//chair_28.jpg', 'dist_01File': 'hand//hand_18.jpg', 'dist_02File': 'pencil//pencil_28.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 13, 'dist_02Trig': 17, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_28.jpg', 'correctFile': 'hand//hand_18.jpg', 'dist_01File': 'phones//phones_12.jpg', 'dist_02File': 'jacket//jacket_36.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 18, 'dist_02Trig': 15, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_18.jpg', 'correctFile': 'phones//phones_12.jpg', 'dist_01File': 'bike//bike_34.jpg', 'dist_02File': 'bug//bug_25.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 2, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_12.jpg', 'correctFile': 'guitar//guitar_10.jpg', 'dist_01File': 'hammer//hammer_32.jpg', 'dist_02File': 'car//car_09.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 6, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_10.jpg', 'correctFile': 'bike//bike_34.jpg', 'dist_01File': 'pizza//pizza_24.jpg', 'dist_02File': 'car//car_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 19, 'dist_02Trig': 6, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_34.jpg', 'correctFile': 'hammer//hammer_32.jpg', 'dist_01File': 'hand//hand_18.jpg', 'dist_02File': 'jacket//jacket_16.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 13, 'dist_02Trig': 15, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_15.jpg', 'correctFile': 'chair//chair_17.jpg', 'dist_01File': 'phones//phones_19.jpg', 'dist_02File': 'jacket//jacket_01.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 18, 'dist_02Trig': 15, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_17.jpg', 'correctFile': 'hand//hand_14.jpg', 'dist_01File': 'bike//bike_35.jpg', 'dist_02File': 'bug//bug_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 2, 'dist_02Trig': 5, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_14.jpg', 'correctFile': 'phones//phones_19.jpg', 'dist_01File': 'hammer//hammer_29.jpg', 'dist_02File': 'dog//dog_12.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_19.jpg', 'correctFile': 'guitar//guitar_08.jpg', 'dist_01File': 'chair//chair_17.jpg', 'dist_02File': 'jacket//jacket_25.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 7, 'dist_02Trig': 15, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_08.jpg', 'correctFile': 'bike//bike_35.jpg', 'dist_01File': 'chair//chair_17.jpg', 'dist_02File': 'house//house_36.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 14, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_35.jpg', 'correctFile': 'hammer//hammer_29.jpg', 'dist_01File': 'pizza//pizza_15.jpg', 'dist_02File': 'milk//milk_27.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 19, 'dist_02Trig': 16, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_14.jpg', 'correctFile': 'chair//chair_27.jpg', 'dist_01File': 'phones//phones_36.jpg', 'dist_02File': 'jacket//jacket_10.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 18, 'dist_02Trig': 15, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_27.jpg', 'correctFile': 'hand//hand_20.jpg', 'dist_01File': 'hammer//hammer_20.jpg', 'dist_02File': 'berry//berry_26.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_20.jpg', 'correctFile': 'phones//phones_36.jpg', 'dist_01File': 'bike//bike_01.jpg', 'dist_02File': 'box//box_35.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 2, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_36.jpg', 'correctFile': 'guitar//guitar_04.jpg', 'dist_01File': 'chair//chair_27.jpg', 'dist_02File': 'box//box_40.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 7, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_04.jpg', 'correctFile': 'bike//bike_01.jpg', 'dist_01File': 'pizza//pizza_14.jpg', 'dist_02File': 'bird//bird_07.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 19, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_01.jpg', 'correctFile': 'hammer//hammer_20.jpg', 'dist_01File': 'phones//phones_36.jpg', 'dist_02File': 'bug//bug_38.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 18, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_33.jpg', 'correctFile': 'chair//chair_33.jpg', 'dist_01File': 'bike//bike_13.jpg', 'dist_02File': 'plane//plane_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 2, 'dist_02Trig': 20, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_33.jpg', 'correctFile': 'hand//hand_09.jpg', 'dist_01File': 'bike//bike_13.jpg', 'dist_02File': 'dog//dog_22.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 2, 'dist_02Trig': 8, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_09.jpg', 'correctFile': 'phones//phones_06.jpg', 'dist_01File': 'pizza//pizza_33.jpg', 'dist_02File': 'bug//bug_29.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 19, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_06.jpg', 'correctFile': 'guitar//guitar_32.jpg', 'dist_01File': 'pizza//pizza_33.jpg', 'dist_02File': 'tree//tree_22.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 19, 'dist_02Trig': 21, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_32.jpg', 'correctFile': 'bike//bike_13.jpg', 'dist_01File': 'chair//chair_33.jpg', 'dist_02File': 'fish//fish_11.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 10, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_13.jpg', 'correctFile': 'hammer//hammer_23.jpg', 'dist_01File': 'phones//phones_06.jpg', 'dist_02File': 'box//box_12.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 18, 'dist_02Trig': 4, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_11.jpg', 'correctFile': 'chair//chair_12.jpg', 'dist_01File': 'bike//bike_20.jpg', 'dist_02File': 'berry//berry_28.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 2, 'dist_02Trig': 1, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_12.jpg', 'correctFile': 'hand//hand_23.jpg', 'dist_01File': 'phones//phones_07.jpg', 'dist_02File': 'fish//fish_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 18, 'dist_02Trig': 10, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_23.jpg', 'correctFile': 'phones//phones_07.jpg', 'dist_01File': 'hammer//hammer_15.jpg', 'dist_02File': 'bird//bird_17.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 12, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_07.jpg', 'correctFile': 'guitar//guitar_15.jpg', 'dist_01File': 'hammer//hammer_15.jpg', 'dist_02File': 'berry//berry_08.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_15.jpg', 'correctFile': 'bike//bike_20.jpg', 'dist_01File': 'hand//hand_23.jpg', 'dist_02File': 'fish//fish_38.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 13, 'dist_02Trig': 10, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_20.jpg', 'correctFile': 'hammer//hammer_15.jpg', 'dist_01File': 'hand//hand_23.jpg', 'dist_02File': 'bird//bird_12.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 13, 'dist_02Trig': 3, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_06.jpg', 'correctFile': 'chair//chair_30.jpg', 'dist_01File': 'hammer//hammer_37.jpg', 'dist_02File': 'face//face_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 12, 'dist_02Trig': 9, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_30.jpg', 'correctFile': 'hand//hand_32.jpg', 'dist_01File': 'hammer//hammer_37.jpg', 'dist_02File': 'jacket//jacket_09.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 15, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'hand//hand_32.jpg', 'correctFile': 'phones//phones_40.jpg', 'dist_01File': 'bike//bike_37.jpg', 'dist_02File': 'bird//bird_32.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 2, 'dist_02Trig': 3, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'C'}, {'promptFile': 'phones//phones_40.jpg', 'correctFile': 'guitar//guitar_20.jpg', 'dist_01File': 'hammer//hammer_37.jpg', 'dist_02File': 'house//house_32.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 14, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'guitar//guitar_20.jpg', 'correctFile': 'bike//bike_37.jpg', 'dist_01File': 'pizza//pizza_06.jpg', 'dist_02File': 'milk//milk_15.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 19, 'dist_02Trig': 16, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'bike//bike_37.jpg', 'correctFile': 'hammer//hammer_37.jpg', 'dist_01File': 'chair//chair_30.jpg', 'dist_02File': 'tree//tree_30.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 7, 'dist_02Trig': 21, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'C'}, {'promptFile': 'pizza//pizza_30.jpg', 'correctFile': 'chair//chair_02.jpg', 'dist_01File': 'guitar//guitar_21.jpg', 'dist_02File': 'milk//milk_35.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 11, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'chair//chair_02.jpg', 'correctFile': 'hand//hand_40.jpg', 'dist_01File': 'guitar//guitar_21.jpg', 'dist_02File': 'face//face_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 11, 'dist_02Trig': 9, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_40.jpg', 'correctFile': 'phones//phones_31.jpg', 'dist_01File': 'bike//bike_40.jpg', 'dist_02File': 'jacket//jacket_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 2, 'dist_02Trig': 15, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_31.jpg', 'correctFile': 'guitar//guitar_21.jpg', 'dist_01File': 'hammer//hammer_05.jpg', 'dist_02File': 'pencil//pencil_40.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_21.jpg', 'correctFile': 'bike//bike_40.jpg', 'dist_01File': 'hand//hand_40.jpg', 'dist_02File': 'berry//berry_35.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 13, 'dist_02Trig': 1, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_40.jpg', 'correctFile': 'hammer//hammer_05.jpg', 'dist_01File': 'pizza//pizza_30.jpg', 'dist_02File': 'car//car_27.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 19, 'dist_02Trig': 6, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'pizza//pizza_05.jpg', 'correctFile': 'chair//chair_23.jpg', 'dist_01File': 'phones//phones_09.jpg', 'dist_02File': 'pencil//pencil_21.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 19, 'correctTrig': 7, 'dist_01Trig': 18, 'dist_02Trig': 17, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 1, 'dist02SourceSeq': 'C'}, {'promptFile': 'chair//chair_23.jpg', 'correctFile': 'hand//hand_10.jpg', 'dist_01File': 'hammer//hammer_16.jpg', 'dist_02File': 'face//face_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 7, 'correctTrig': 13, 'dist_01Trig': 12, 'dist_02Trig': 9, 'correct_ans': 'r', 'learningSeq': 'B', 'currPosInSeq': 2, 'dist02SourceSeq': 'C'}, {'promptFile': 'hand//hand_10.jpg', 'correctFile': 'phones//phones_09.jpg', 'dist_01File': 'bike//bike_10.jpg', 'dist_02File': 'bug//bug_32.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 13, 'correctTrig': 18, 'dist_01Trig': 2, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'phones//phones_09.jpg', 'correctFile': 'guitar//guitar_37.jpg', 'dist_01File': 'hammer//hammer_16.jpg', 'dist_02File': 'box//box_23.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 18, 'correctTrig': 11, 'dist_01Trig': 12, 'dist_02Trig': 4, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 4, 'dist02SourceSeq': 'C'}, {'promptFile': 'guitar//guitar_37.jpg', 'correctFile': 'bike//bike_10.jpg', 'dist_01File': 'chair//chair_23.jpg', 'dist_02File': 'face//face_18.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 11, 'correctTrig': 2, 'dist_01Trig': 7, 'dist_02Trig': 9, 'correct_ans': 'g', 'learningSeq': 'B', 'currPosInSeq': 5, 'dist02SourceSeq': 'C'}, {'promptFile': 'bike//bike_10.jpg', 'correctFile': 'hammer//hammer_16.jpg', 'dist_01File': 'phones//phones_09.jpg', 'dist_02File': 'milk//milk_22.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 2, 'correctTrig': 12, 'dist_01Trig': 18, 'dist_02Trig': 16, 'correct_ans': 'b', 'learningSeq': 'B', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'bird//bird_19.jpg', 'correctFile': 'pencil//pencil_39.jpg', 'dist_01File': 'dog//dog_14.jpg', 'dist_02File': 'plane//plane_11.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 8, 'dist_02Trig': 20, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_39.jpg', 'correctFile': 'dog//dog_14.jpg', 'dist_01File': 'berry//berry_14.jpg', 'dist_02File': 'bike//bike_20.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 1, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'dog//dog_14.jpg', 'correctFile': 'face//face_22.jpg', 'dist_01File': 'box//box_17.jpg', 'dist_02File': 'plane//plane_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 4, 'dist_02Trig': 20, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'face//face_22.jpg', 'correctFile': 'berry//berry_14.jpg', 'dist_01File': 'pencil//pencil_39.jpg', 'dist_02File': 'phones//phones_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 17, 'dist_02Trig': 18, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'berry//berry_14.jpg', 'correctFile': 'box//box_17.jpg', 'dist_01File': 'bird//bird_19.jpg', 'dist_02File': 'chair//chair_38.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 3, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'box//box_17.jpg', 'correctFile': 'tree//tree_33.jpg', 'dist_01File': 'dog//dog_14.jpg', 'dist_02File': 'milk//milk_08.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 8, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'bird//bird_33.jpg', 'correctFile': 'pencil//pencil_17.jpg', 'dist_01File': 'box//box_19.jpg', 'dist_02File': 'plane//plane_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 4, 'dist_02Trig': 20, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_17.jpg', 'correctFile': 'dog//dog_04.jpg', 'dist_01File': 'tree//tree_03.jpg', 'dist_02File': 'milk//milk_09.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 21, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'dog//dog_04.jpg', 'correctFile': 'face//face_06.jpg', 'dist_01File': 'berry//berry_29.jpg', 'dist_02File': 'phones//phones_23.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 1, 'dist_02Trig': 18, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'face//face_06.jpg', 'correctFile': 'berry//berry_29.jpg', 'dist_01File': 'pencil//pencil_17.jpg', 'dist_02File': 'plane//plane_07.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 17, 'dist_02Trig': 20, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'berry//berry_29.jpg', 'correctFile': 'box//box_19.jpg', 'dist_01File': 'dog//dog_04.jpg', 'dist_02File': 'hammer//hammer_09.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 8, 'dist_02Trig': 12, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'box//box_19.jpg', 'correctFile': 'tree//tree_03.jpg', 'dist_01File': 'bird//bird_33.jpg', 'dist_02File': 'milk//milk_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 3, 'dist_02Trig': 16, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'bird//bird_01.jpg', 'correctFile': 'pencil//pencil_23.jpg', 'dist_01File': 'berry//berry_11.jpg', 'dist_02File': 'bike//bike_04.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 1, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'pencil//pencil_23.jpg', 'correctFile': 'dog//dog_10.jpg', 'dist_01File': 'tree//tree_38.jpg', 'dist_02File': 'house//house_39.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 21, 'dist_02Trig': 14, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'dog//dog_10.jpg', 'correctFile': 'face//face_18.jpg', 'dist_01File': 'berry//berry_11.jpg', 'dist_02File': 'phones//phones_37.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 1, 'dist_02Trig': 18, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'face//face_18.jpg', 'correctFile': 'berry//berry_11.jpg', 'dist_01File': 'bird//bird_01.jpg', 'dist_02File': 'guitar//guitar_05.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 3, 'dist_02Trig': 11, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'berry//berry_11.jpg', 'correctFile': 'box//box_31.jpg', 'dist_01File': 'tree//tree_38.jpg', 'dist_02File': 'fish//fish_19.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 21, 'dist_02Trig': 10, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'box//box_31.jpg', 'correctFile': 'tree//tree_38.jpg', 'dist_01File': 'bird//bird_01.jpg', 'dist_02File': 'bike//bike_35.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 3, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'bird//bird_30.jpg', 'correctFile': 'pencil//pencil_38.jpg', 'dist_01File': 'berry//berry_05.jpg', 'dist_02File': 'pizza//pizza_33.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 1, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'pencil//pencil_38.jpg', 'correctFile': 'dog//dog_01.jpg', 'dist_01File': 'box//box_10.jpg', 'dist_02File': 'bike//bike_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 4, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'dog//dog_01.jpg', 'correctFile': 'face//face_09.jpg', 'dist_01File': 'tree//tree_37.jpg', 'dist_02File': 'pizza//pizza_30.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 21, 'dist_02Trig': 19, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'face//face_09.jpg', 'correctFile': 'berry//berry_05.jpg', 'dist_01File': 'bird//bird_30.jpg', 'dist_02File': 'pizza//pizza_09.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 3, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'berry//berry_05.jpg', 'correctFile': 'box//box_10.jpg', 'dist_01File': 'dog//dog_01.jpg', 'dist_02File': 'chair//chair_24.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 8, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'box//box_10.jpg', 'correctFile': 'tree//tree_37.jpg', 'dist_01File': 'face//face_09.jpg', 'dist_02File': 'hand//hand_34.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 9, 'dist_02Trig': 13, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'bird//bird_04.jpg', 'correctFile': 'pencil//pencil_26.jpg', 'dist_01File': 'tree//tree_04.jpg', 'dist_02File': 'jacket//jacket_04.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 21, 'dist_02Trig': 15, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_26.jpg', 'correctFile': 'dog//dog_40.jpg', 'dist_01File': 'box//box_09.jpg', 'dist_02File': 'milk//milk_07.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 4, 'dist_02Trig': 16, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'dog//dog_40.jpg', 'correctFile': 'face//face_12.jpg', 'dist_01File': 'bird//bird_04.jpg', 'dist_02File': 'milk//milk_01.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 3, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'face//face_12.jpg', 'correctFile': 'berry//berry_32.jpg', 'dist_01File': 'pencil//pencil_26.jpg', 'dist_02File': 'chair//chair_03.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 17, 'dist_02Trig': 7, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'berry//berry_32.jpg', 'correctFile': 'box//box_09.jpg', 'dist_01File': 'tree//tree_04.jpg', 'dist_02File': 'house//house_21.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 21, 'dist_02Trig': 14, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'box//box_09.jpg', 'correctFile': 'tree//tree_04.jpg', 'dist_01File': 'pencil//pencil_26.jpg', 'dist_02File': 'car//car_34.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 17, 'dist_02Trig': 6, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'bird//bird_23.jpg', 'correctFile': 'pencil//pencil_27.jpg', 'dist_01File': 'berry//berry_17.jpg', 'dist_02File': 'jacket//jacket_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 1, 'dist_02Trig': 15, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_27.jpg', 'correctFile': 'dog//dog_05.jpg', 'dist_01File': 'box//box_20.jpg', 'dist_02File': 'fish//fish_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 4, 'dist_02Trig': 10, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'dog//dog_05.jpg', 'correctFile': 'face//face_28.jpg', 'dist_01File': 'tree//tree_09.jpg', 'dist_02File': 'milk//milk_13.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 21, 'dist_02Trig': 16, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'face//face_28.jpg', 'correctFile': 'berry//berry_17.jpg', 'dist_01File': 'tree//tree_09.jpg', 'dist_02File': 'plane//plane_15.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 21, 'dist_02Trig': 20, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'berry//berry_17.jpg', 'correctFile': 'box//box_20.jpg', 'dist_01File': 'tree//tree_09.jpg', 'dist_02File': 'milk//milk_20.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 21, 'dist_02Trig': 16, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'box//box_20.jpg', 'correctFile': 'tree//tree_09.jpg', 'dist_01File': 'bird//bird_23.jpg', 'dist_02File': 'car//car_18.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 3, 'dist_02Trig': 6, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'bird//bird_27.jpg', 'correctFile': 'pencil//pencil_31.jpg', 'dist_01File': 'berry//berry_13.jpg', 'dist_02File': 'bug//bug_06.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 1, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_31.jpg', 'correctFile': 'dog//dog_15.jpg', 'dist_01File': 'face//face_20.jpg', 'dist_02File': 'guitar//guitar_37.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 9, 'dist_02Trig': 11, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'dog//dog_15.jpg', 'correctFile': 'face//face_20.jpg', 'dist_01File': 'box//box_14.jpg', 'dist_02File': 'hammer//hammer_21.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 4, 'dist_02Trig': 12, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'face//face_20.jpg', 'correctFile': 'berry//berry_13.jpg', 'dist_01File': 'pencil//pencil_31.jpg', 'dist_02File': 'pizza//pizza_13.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 17, 'dist_02Trig': 19, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'berry//berry_13.jpg', 'correctFile': 'box//box_14.jpg', 'dist_01File': 'pencil//pencil_31.jpg', 'dist_02File': 'phones//phones_30.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 17, 'dist_02Trig': 18, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'box//box_14.jpg', 'correctFile': 'tree//tree_30.jpg', 'dist_01File': 'pencil//pencil_31.jpg', 'dist_02File': 'bug//bug_20.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 17, 'dist_02Trig': 5, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'A'}, {'promptFile': 'bird//bird_03.jpg', 'correctFile': 'pencil//pencil_12.jpg', 'dist_01File': 'berry//berry_21.jpg', 'dist_02File': 'hammer//hammer_39.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 1, 'dist_02Trig': 12, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'B'}, {'promptFile': 'pencil//pencil_12.jpg', 'correctFile': 'dog//dog_28.jpg', 'dist_01File': 'berry//berry_21.jpg', 'dist_02File': 'hand//hand_26.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 1, 'dist_02Trig': 13, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'dog//dog_28.jpg', 'correctFile': 'face//face_34.jpg', 'dist_01File': 'bird//bird_03.jpg', 'dist_02File': 'bug//bug_29.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 3, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'A'}, {'promptFile': 'face//face_34.jpg', 'correctFile': 'berry//berry_21.jpg', 'dist_01File': 'bird//bird_03.jpg', 'dist_02File': 'hammer//hammer_09.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 3, 'dist_02Trig': 12, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'B'}, {'promptFile': 'berry//berry_21.jpg', 'correctFile': 'box//box_24.jpg', 'dist_01File': 'pencil//pencil_12.jpg', 'dist_02File': 'milk//milk_26.jpg', 'correct_pos': 'left', 'dist01_pos': 'right', 'dist02_pos': 'center', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 17, 'dist_02Trig': 16, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'box//box_24.jpg', 'correctFile': 'tree//tree_14.jpg', 'dist_01File': 'bird//bird_03.jpg', 'dist_02File': 'chair//chair_29.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 3, 'dist_02Trig': 7, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'bird//bird_10.jpg', 'correctFile': 'pencil//pencil_30.jpg', 'dist_01File': 'box//box_16.jpg', 'dist_02File': 'plane//plane_11.jpg', 'correct_pos': 'center', 'dist01_pos': 'left', 'dist02_pos': 'right', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 4, 'dist_02Trig': 20, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_30.jpg', 'correctFile': 'dog//dog_06.jpg', 'dist_01File': 'tree//tree_36.jpg', 'dist_02File': 'house//house_28.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 21, 'dist_02Trig': 14, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'A'}, {'promptFile': 'dog//dog_06.jpg', 'correctFile': 'face//face_39.jpg', 'dist_01File': 'box//box_16.jpg', 'dist_02File': 'phones//phones_10.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 4, 'dist_02Trig': 18, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'face//face_39.jpg', 'correctFile': 'berry//berry_20.jpg', 'dist_01File': 'tree//tree_36.jpg', 'dist_02File': 'bug//bug_36.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 21, 'dist_02Trig': 5, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'berry//berry_20.jpg', 'correctFile': 'box//box_16.jpg', 'dist_01File': 'pencil//pencil_30.jpg', 'dist_02File': 'bug//bug_13.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 17, 'dist_02Trig': 5, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'A'}, {'promptFile': 'box//box_16.jpg', 'correctFile': 'tree//tree_36.jpg', 'dist_01File': 'face//face_39.jpg', 'dist_02File': 'hammer//hammer_23.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 9, 'dist_02Trig': 12, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}, {'promptFile': 'bird//bird_16.jpg', 'correctFile': 'pencil//pencil_10.jpg', 'dist_01File': 'box//box_08.jpg', 'dist_02File': 'jacket//jacket_12.jpg', 'correct_pos': 'right', 'dist01_pos': 'left', 'dist02_pos': 'center', 'promptTrig': 3, 'correctTrig': 17, 'dist_01Trig': 4, 'dist_02Trig': 15, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 1, 'dist02SourceSeq': 'A'}, {'promptFile': 'pencil//pencil_10.jpg', 'correctFile': 'dog//dog_35.jpg', 'dist_01File': 'face//face_33.jpg', 'dist_02File': 'hammer//hammer_31.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 17, 'correctTrig': 8, 'dist_01Trig': 9, 'dist_02Trig': 12, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 2, 'dist02SourceSeq': 'B'}, {'promptFile': 'dog//dog_35.jpg', 'correctFile': 'face//face_33.jpg', 'dist_01File': 'berry//berry_37.jpg', 'dist_02File': 'bike//bike_16.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 8, 'correctTrig': 9, 'dist_01Trig': 1, 'dist_02Trig': 2, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 3, 'dist02SourceSeq': 'B'}, {'promptFile': 'face//face_33.jpg', 'correctFile': 'berry//berry_37.jpg', 'dist_01File': 'box//box_08.jpg', 'dist_02File': 'milk//milk_12.jpg', 'correct_pos': 'left', 'dist01_pos': 'center', 'dist02_pos': 'right', 'promptTrig': 9, 'correctTrig': 1, 'dist_01Trig': 4, 'dist_02Trig': 16, 'correct_ans': 'g', 'learningSeq': 'C', 'currPosInSeq': 4, 'dist02SourceSeq': 'A'}, {'promptFile': 'berry//berry_37.jpg', 'correctFile': 'box//box_08.jpg', 'dist_01File': 'bird//bird_16.jpg', 'dist_02File': 'bike//bike_23.jpg', 'correct_pos': 'center', 'dist01_pos': 'right', 'dist02_pos': 'left', 'promptTrig': 1, 'correctTrig': 4, 'dist_01Trig': 3, 'dist_02Trig': 2, 'correct_ans': 'b', 'learningSeq': 'C', 'currPosInSeq': 5, 'dist02SourceSeq': 'B'}, {'promptFile': 'box//box_08.jpg', 'correctFile': 'tree//tree_11.jpg', 'dist_01File': 'face//face_33.jpg', 'dist_02File': 'guitar//guitar_20.jpg', 'correct_pos': 'right', 'dist01_pos': 'center', 'dist02_pos': 'left', 'promptTrig': 4, 'correctTrig': 21, 'dist_01Trig': 9, 'dist_02Trig': 11, 'correct_ans': 'r', 'learningSeq': 'C', 'currPosInSeq': 6, 'dist02SourceSeq': 'B'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$&quot;sequences\\&quot; + &quot;main_conditions_&quot; + str(expInfo['participant']).zfill(2) + &quot;.xlsx&quot;&amp;#10;" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="choice_display"/>
    <Routine name="feedback"/>
    <Routine name="task_break"/>
    <LoopTerminator name="trials"/>
    <Routine name="instructions_end"/>
    <Routine name="bids_export"/>
  </Flow>
</PsychoPy2experiment>
