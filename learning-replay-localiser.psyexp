<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="comma" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '0'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="True" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="2" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2024.2.4" valType="str" updates="None" name="Use version"/>
    <Param val="[1680, 1050]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="iso" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="-0.7098, -0.7255, -0.7098" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="exp" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="localiser_pilot" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="image_pres">
      <RoutineSettingsComponent name="image_pres" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="image_pres" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="compute_block_trial_num" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="current_trial_number = (trials.thisN + 1);&amp;#10;if ((current_trial_number === 1)) {&amp;#10;    block_num = 1;&amp;#10;} else {&amp;#10;    if ((((current_trial_number - 1) % break_interval) === 0)) {&amp;#10;        block_num = (Number.parseInt(((current_trial_number - 1) / break_interval)) + 1);&amp;#10;    } else {&amp;#10;        block_num = block_num;&amp;#10;    }&amp;#10;}&amp;#10;trial_num = current_trial_number;&amp;#10;Math.log(&quot;Block number: &quot;, block_num);&amp;#10;Math.log(&quot;Trial number: &quot;, trial_num);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;current_trial_number = trials.thisN + 1 # make it start at 1&amp;#10;# block number should increase one trial AFTER a break_interval trial&amp;#10;if current_trial_number == 1:&amp;#10;    block_num = 1&amp;#10;elif (current_trial_number - 1) % break_interval == 0:&amp;#10;    block_num = int((current_trial_number - 1) / break_interval) + 1&amp;#10;else:&amp;#10;    # otherwise keep previous value&amp;#10;    block_num = block_num&amp;#10;    &amp;#10;trial_num = current_trial_number&amp;#10;&amp;#10;log(&quot;Block number: &quot;, block_num)&amp;#10;log(&quot;Trial number: &quot;, trial_num)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="compute_block_trial_num" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_image" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;concept_label_img = image_shown.split(&quot;\\&quot;)[0]&amp;#10;concept_examplar_img =  image_shown.split(&quot;\\&quot;)[1]&amp;#10;bids.schedule_onset(image,&amp;#10;                        block_num=block_num,&amp;#10;                        trial_num=trial_num, &amp;#10;                        type_of_stimulus=&quot;image&quot;,&amp;#10;                        component_label=&quot;image&quot;,&amp;#10;                        concept_label = concept_label_img,&amp;#10;                        concept_examplar = concept_examplar_img)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="concept_label_img = image_shown.split(&quot;\\&quot;)[0];&amp;#10;concept_examplar_img = image_shown.split(&quot;\\&quot;)[1];&amp;#10;bids.schedule_onset(image, {&quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;type_of_stimulus&quot;: &quot;image&quot;, &quot;component_label&quot;: &quot;image&quot;, &quot;concept_label&quot;: concept_label_img, &quot;concept_examplar&quot;: concept_examplar_img});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(image);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;    &amp;#10;bids.mark_offset(image)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_image" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ &quot;stimuli\\&quot; + image_shown" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="image_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="image_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="stim = &quot;image_presentation&quot;;&amp;#10;number = concept_num;&amp;#10;psychoJS.window.callOnFlip(meg_triggers.send_trigger, number, 0.005);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# send trigger &amp;#10;stim = &quot;image_presentation&quot;&amp;#10;&amp;#10;number = concept_num&amp;#10;&amp;#10;win.callOnFlip(meg_triggers.send_trigger, number, 0.005)&amp;#10;#meg_triggers.send_trigger(number, 0.005)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="image_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="start_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="stim = &quot;start/end&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;meg_triggers.send_trigger(number, 0.005);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# send trigger for start exp&amp;#10;stim = &quot;start/end&quot;&amp;#10;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;meg_triggers.send_trigger(number, 0.005)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_instruc_01" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="## schedule bids trigger setting&amp;#10;# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(instruction_part1,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;instruction_01&quot;)&amp;#10;&amp;#10;bids.schedule_onset(instruction_part1,&amp;#10;                        type_of_stimulus=&quot;instructions&quot;,&amp;#10;                        component_label=&quot;instruction_part1&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(instruction_part1, {&quot;type_of_stimulus&quot;: &quot;instructions&quot;, &quot;component_label&quot;: &quot;instruction_part1&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(instruction_part1);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(instruction_part1)&amp;#10;bids.mark_offset(instruction_part1)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_01" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part1" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_part1_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part1.text = &quot;Welcome to the first part of the experiment. In this part, you will see different images and words. You task is to decide if the words describe what you see in the images.\n[Press any button to continue.]&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part1.text = &quot;Willkommen zum ersten Teil des Experiments. In diesem Teil sehen Sie verschiedene Bilder und W\u00f6rter. Ihre Aufgabe ist es zu entscheiden, ob die W\u00f6rter die Dinge beschreiben, die Sie auf den Bildern sehen.\n[Dr\u00fccken Sie eine beliebige Taste, um fortzufahren.]&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part1.text = (&amp;#10;   &quot;Welcome to the first part of the experiment. &quot;&amp;#10;    &quot;In this part, you will see different images and words. You task is to decide &quot;&amp;#10;    &quot;if the words describe what you see in the images.\n&quot;&amp;#10;    &quot;[Press any button to continue.]&quot;&amp;#10;)&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part1.text = (&amp;#10;    &quot;Willkommen zum ersten Teil des Experiments. &quot;&amp;#10;    &quot;In diesem Teil sehen Sie verschiedene Bilder und Wörter. &quot;&amp;#10;    &quot;Ihre Aufgabe ist es zu entscheiden, ob die Wörter die Dinge beschreiben, die &quot;&amp;#10;    &quot;Sie auf den Bildern sehen.\n&quot;&amp;#10;    &quot;[Drücken Sie eine beliebige Taste, um fortzufahren.]&quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_part1_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button" plugin="None">
        <Param val="'y','b','r','g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="feedback">
      <RoutineSettingsComponent name="feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_feedback_logging" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log onset at first frame&amp;#10;bids.schedule_onset(word_feedback,&amp;#10;                        block_num = block_num,&amp;#10;                        trial_num = trial_num,&amp;#10;                        type_of_stimulus=&quot;feedback&quot;,&amp;#10;                        component_label=&quot;word_color_change&quot;,&amp;#10;                        wrd_img_match = match_idx,&amp;#10;                        concept_label = word_shown)&amp;#10;                        &amp;#10;&amp;#10;                                                &amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(word_feedback, {&quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;type_of_stimulus&quot;: &quot;feedback&quot;, &quot;component_label&quot;: &quot;word_color_change&quot;, &quot;wrd_img_match&quot;: match_idx, &quot;concept_label&quot;: word_shown});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(word_feedback);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# add feedback&amp;#10;   &amp;#10;bids.mark_offset(word_feedback)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_feedback_logging" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="word_feedback" plugin="None">
        <Param val="" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="word_feedback" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="fdback_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$word_shown" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="feedback_control" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="feedback_given = false;&amp;#10;if ((fdback === 1)) {&amp;#10;    if ((key_resp.corr === 1)) {&amp;#10;        word_feedback.setColor(&quot;green&quot;, {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;        word_feedback.setOpacity(1);&amp;#10;        too_slow_msg.setOpacity(0);&amp;#10;        feedback_given = true;&amp;#10;    } else {&amp;#10;        if ((key_resp.corr === 0)) {&amp;#10;            word_feedback.setColor(&quot;red&quot;, {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            word_feedback.setOpacity(1);&amp;#10;            too_slow_msg.setOpacity(0);&amp;#10;            feedback_given = true;&amp;#10;        } else {&amp;#10;            word_feedback.setOpacity(0);&amp;#10;            too_slow_msg.setOpacity(1);&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    word_feedback.setOpacity(0);&amp;#10;    too_slow_msg.setOpacity(0);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# prepare feedback in form of word color change or too slow message&amp;#10;feedback_given = False&amp;#10;&amp;#10;&amp;#10;if fdback == 1: &amp;#10;   &amp;#10;    if key_resp.corr == 1: &amp;#10;        # Green feedback&amp;#10;        word_feedback.setColor('green', colorSpace='rgb')&amp;#10;        word_feedback.setOpacity(1)&amp;#10;        too_slow_msg.setOpacity(0)&amp;#10;        feedback_given = True&amp;#10;&amp;#10;      &amp;#10;    elif key_resp.corr == 0:&amp;#10;        # Red feedback&amp;#10;        word_feedback.setColor('red', colorSpace='rgb')&amp;#10;        word_feedback.setOpacity(1)&amp;#10;        too_slow_msg.setOpacity(0)&amp;#10;        feedback_given = True&amp;#10;&amp;#10;        &amp;#10;    else:&amp;#10;        # No correct/incorrect feedback → hide&amp;#10;        word_feedback.setOpacity(0)&amp;#10;        too_slow_msg.setOpacity(1)&amp;#10;&amp;#10;else:  # if no feedback is desired&amp;#10;    word_feedback.setOpacity(0)&amp;#10;    too_slow_msg.setOpacity(0)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="feedback_control" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="too_slow_msg" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="too_slow_msg" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="fdback_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="set_too_slow_msg_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    too_slow_msg.text = &quot;too slow&quot;;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        too_slow_msg.text = &quot;zu langsam&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    too_slow_msg.text = &quot;too slow&quot;&amp;#10;elif language == &quot;german&quot;: &amp;#10;    too_slow_msg.text = &quot;zu langsam&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_too_slow_msg_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="feedback_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="word_feedback._trig_sent = false;&amp;#10;too_slow_msg._trig_sent = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# initialise&amp;#10;word_feedback._trig_sent = False&amp;#10;too_slow_msg._trig_sent = False&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;stimuli = [&quot;feedback&quot;, &quot;too slow msg&quot;]&amp;#10;stim_objs = [word_feedback, too_slow_msg]&amp;#10;&amp;#10;for name, obj in zip(stimuli, stim_objs):&amp;#10;    if (&amp;#10;        obj.status == STARTED&amp;#10;        and getattr(obj, &quot;frameNStart&quot;, None) == frameN&amp;#10;        and (getattr(obj, &quot;opacity&quot;, 1) or 0) &gt; 0&amp;#10;        and not getattr(obj, &quot;_trig_sent&quot;, False)&amp;#10;    ):&amp;#10;        # schedule to record onset at the next flip&amp;#10;        win.timeOnFlip(obj, &quot;tStartRefresh&quot;)&amp;#10;        #thisExp.timestampOnFlip(obj, f&quot;{obj.name}.started&quot;)&amp;#10;&amp;#10;        # send trigger on that flip&amp;#10;        trig_num = trigger_numbers_dict[name]&amp;#10;        win.callOnFlip(meg_triggers.send_trigger, trig_num, 0.005)&amp;#10;&amp;#10;        # prevent retriggering&amp;#10;        obj._trig_sent = True&amp;#10;        core.wait(0.2)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="feedback_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions_meg">
      <RoutineSettingsComponent name="instructions_meg" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_meg" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(instruction_meg,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;instruction_meg&quot;)&amp;#10;&amp;#10;bids.schedule_onset(instruction_meg,&amp;#10;                        type_of_stimulus=&quot;instructions&quot;,&amp;#10;                        component_label=&quot;instruction_meg&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(instruction_meg, {&quot;type_of_stimulus&quot;: &quot;instructions&quot;, &quot;component_label&quot;: &quot;instruction_meg&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(instruction_meg);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(instruction_meg)&amp;#10;bids.mark_offset(instruction_meg)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_meg" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_meg" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_meg_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_meg.text = &quot;The MEG signal is very sensitive to body and eye movements. Please try to keep still during the task and save any movements for the breaks. Also, try to blink as little as possible while the task is running. Thank you!\n[Press any button to start the practice trials.]&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_meg.text = &quot;Das MEG-Signal ist sehr empfindlich gegen\u00fcber K\u00f6rper- und Augenbewegungen. Bitte versuchen Sie, w\u00e4hrend der Aufgabe so still wie m\u00f6glich zu bleiben und Bewegungen auf die Pausen zu beschr\u00e4nken. Versuchen Sie au\u00dferdem, w\u00e4hrend der Aufgabe so wenig wie m\u00f6glich zu blinzeln. Vielen Dank!\n[Dr\u00fccken Sie eine beliebige Taste, um mit den \u00dcbungsdurchg\u00e4ngen zu beginnen.]&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_meg.text = (&amp;#10;    &quot;The MEG signal is very sensitive to body and eye movements. &quot;&amp;#10;    &quot;Please try to keep still during the task and save any movements for the breaks. &quot;&amp;#10;    &quot;Also, try to blink as little as possible while the task is running. &quot;&amp;#10;    &quot;Thank you!\n&quot;&amp;#10;    &quot;[Press any button to start the practice trials.]&quot;&amp;#10;)&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_meg.text = (&amp;#10;&quot;Das MEG-Signal ist sehr empfindlich gegenüber Körper- und Augenbewegungen. &quot;&amp;#10;&quot;Bitte versuchen Sie, während der Aufgabe so still wie möglich zu bleiben und Bewegungen auf die Pausen zu beschränken. &quot;&amp;#10;&quot;Versuchen Sie außerdem, während der Aufgabe so wenig wie möglich zu blinzeln. &quot;&amp;#10;&quot;Vielen Dank!\n&quot;&amp;#10;&quot;[Drücken Sie eine beliebige Taste, um mit den Übungsdurchgängen zu beginnen.]&quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_meg_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_5" plugin="None">
        <Param val="'y','b','r', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_5" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_02">
      <RoutineSettingsComponent name="instructions_02" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_02" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_02" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(instruction_part2,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;instruction_02&quot;)&amp;#10;&amp;#10;bids.schedule_onset(instruction_part2,&amp;#10;                        type_of_stimulus=&quot;instructions&quot;,&amp;#10;                        component_label=&quot;instruction_part2&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(instruction_part2, {&quot;type_of_stimulus&quot;: &quot;instructions&quot;, &quot;component_label&quot;: &quot;instruction_part2&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(instruction_part2);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(instruction_part2)&amp;#10;    &amp;#10;bids.mark_offset(instruction_part2)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_02" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_part2_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part2.text = &quot;After each image, a word will be presented. When the word appears, you are asked to indicate if the word matches the object you saw in the previous image or not. \n[Press any button to continue.] &quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part2.text = &quot;Zuerst sehen Sie ein Bild, gefolgt von einem Wort. Entscheiden Sie, ob das Wort zu dem Bild passt, das Sie gerade gesehen haben oder nicht.\n[Dr\u00fccken Sie eine beliebige Taste, um fortzufahren.] &quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part2.text = (&amp;#10;    &quot;After each image, a word will be presented. When the word appears, you are &quot;&amp;#10;    &quot;asked to indicate if the word matches the object you saw in the previous image &quot;&amp;#10;    &quot;or not. \n&quot;&amp;#10;    &quot;[Press any button to continue.] &quot;&amp;#10;)&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part2.text = (&amp;#10;   &quot;Zuerst sehen Sie ein Bild, gefolgt von einem Wort. &quot;&amp;#10;    &quot;Entscheiden Sie, ob das Wort zu dem Bild passt, das Sie gerade gesehen haben oder nicht.\n&quot;&amp;#10;    &quot;[Drücken Sie eine beliebige Taste, um fortzufahren.] &quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_part2_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_3" plugin="None">
        <Param val="'y','b','r', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_3" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ITI">
      <RoutineSettingsComponent name="ITI" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ITI" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="fix_cross_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="stim = &quot;fixation cross ITI&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;psychoJS.window.callOnFlip(meg_triggers.send_trigger, number, 0.005);&amp;#10;core.wait(0.2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# send trigger &amp;#10;stim = &quot;fixation cross ITI&quot;&amp;#10;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;&amp;#10;win.callOnFlip(meg_triggers.send_trigger, number, 0.005)&amp;#10;core.wait(0.2)&amp;#10;&amp;#10;#meg_triggers.send_trigger(number, 0.005)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="fix_cross_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_ITI_logging" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(fix_cross_2,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;fix_cross_after_trial&quot;)&amp;#10;&amp;#10;bids.schedule_onset(fix_cross_2,&amp;#10;                        block_num = block_num,&amp;#10;                        trial_num = trial_num,&amp;#10;                        type_of_stimulus=&quot;fixation cross&quot;,&amp;#10;                        component_label=&quot;fix_cross_after_trial&quot;,&amp;#10;                        wrd_img_match = match_idx,&amp;#10;                        concept_label = word_shown)&amp;#10;                       &amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(fix_cross_2, {&quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;type_of_stimulus&quot;: &quot;fixation cross&quot;, &quot;component_label&quot;: &quot;fix_cross_after_trial&quot;, &quot;wrd_img_match&quot;: match_idx, &quot;concept_label&quot;: word_shown});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(fix_cross_2);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(fix_cross_2)&amp;#10;    &amp;#10;bids.mark_offset(fix_cross_2)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_ITI_logging" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fix_cross_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fix_cross_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$ITI_length" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="word_pres">
      <RoutineSettingsComponent name="word_pres" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="word_pres" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="word_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="stim = &quot;word presentation&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;psychoJS.window.callOnFlip(meg_triggers.send_trigger, number, 0.005);&amp;#10;core.wait(0.2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# send trigger &amp;#10;stim = &quot;word presentation&quot;&amp;#10;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;&amp;#10;win.callOnFlip(meg_triggers.send_trigger, number, 0.005)&amp;#10;core.wait(0.2)&amp;#10;&amp;#10;#meg_triggers.send_trigger(number, 0.005)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="word_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="set_word" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="word.setColor(&quot;white&quot;, {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;if ((language === &quot;english&quot;)) {&amp;#10;    word_shown = word_shown_english;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        word_shown = word_shown_german;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# set text and color of word&amp;#10;word.setColor('white', colorSpace='rgb')&amp;#10;&amp;#10;if language == 'english':&amp;#10;    word_shown = (word_shown_english)&amp;#10;    &amp;#10;elif language == 'german':   &amp;#10;    word_shown = (word_shown_german)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_word" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="word" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="word" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="word_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$word_shown" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="set_matchside_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    match_side.text = &quot;match&quot;;&amp;#10;    nonmatch_side.text = &quot;non-match&quot;;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        match_side.text = &quot;richtig&quot;;&amp;#10;        nonmatch_side.text = &quot;falsch&quot;;&amp;#10;    }&amp;#10;}&amp;#10;prompt_positions_dir = [&quot;left&quot;, &quot;right&quot;];&amp;#10;if ((switch_sides === 0)) {&amp;#10;    nonmatch_idx = 1;&amp;#10;}&amp;#10;if ((switch_sides === 1)) {&amp;#10;    nonmatch_idx = util.index(prompt_positions_dir, nonmatch_pres_side);&amp;#10;}&amp;#10;nonmatch_prpt_position = possible_prompt_positions[nonmatch_idx];&amp;#10;nonmatch_key = possible_keys[nonmatch_idx];&amp;#10;match_prpt_position = possible_prompt_positions[(~ nonmatch_idx)];&amp;#10;match_key = possible_keys[(~ nonmatch_idx)];&amp;#10;match_side.setPos([match_prpt_position, (- 0.1)]);&amp;#10;nonmatch_side.setPos([nonmatch_prpt_position, (- 0.1)]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# labels &amp;#10;if language == &quot;english&quot;: &amp;#10;    match_side.text = &quot;match&quot;&amp;#10;    nonmatch_side.text = &quot;non-match&quot;&amp;#10;elif language == &quot;german&quot;: &amp;#10;    match_side.text = &quot;richtig&quot;&amp;#10;    nonmatch_side.text = &quot;falsch&quot;&amp;#10;    &amp;#10;# positions&amp;#10;prompt_positions_dir = [&quot;left&quot;, &quot;right&quot;]&amp;#10;&amp;#10;if switch_sides == 0: &amp;#10;    nonmatch_idx = 1 # match is always right&amp;#10;    &amp;#10;if switch_sides == 1: &amp;#10;    nonmatch_idx = prompt_positions_dir.index(nonmatch_pres_side)&amp;#10;&amp;#10;nonmatch_prpt_position = possible_prompt_positions[nonmatch_idx]&amp;#10;nonmatch_key = possible_keys[nonmatch_idx]&amp;#10;&amp;#10;match_prpt_position = possible_prompt_positions[~nonmatch_idx] &amp;#10;match_key = possible_keys[~nonmatch_idx]&amp;#10;&amp;#10;match_side.setPos((match_prpt_position, -0.1))&amp;#10;nonmatch_side.setPos((nonmatch_prpt_position,-0.1))&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_matchside_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="match_side" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="match_side" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="wrd_resp_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="side_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="nonmatch_side" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="nonmatch_side" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="wrd_resp_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="side_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="allowed_keys" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((match_responses === 0)) {&amp;#10;    allowed_key_list = [nonmatch_key];&amp;#10;} else {&amp;#10;    allowed_key_list = [match_key, nonmatch_key];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if match_responses == 0:&amp;#10;    allowed_key_list = [nonmatch_key]  # list of allowed keys&amp;#10;else:&amp;#10;    # default: allow both match and nonmatch responses&amp;#10;    allowed_key_list = [match_key, nonmatch_key]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="allowed_keys" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="allowed_key_list" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="wrd_resp_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="response_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_key_resp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="key_resp.keys = null;&amp;#10;key_resp.corr = null;&amp;#10;if ((match_responses === 0)) {&amp;#10;    match_side.setOpacity(0);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# reset key resp and correct answer&amp;#10;key_resp.keys = None&amp;#10;key_resp.corr = None &amp;#10;&amp;#10;# special case: participants only respond to mismatches&amp;#10;&amp;#10;if match_responses == 0:&amp;#10;    match_side.setOpacity(0)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((match_responses === 1)) {&amp;#10;    if ((match_idx === 1)) {&amp;#10;        answer_correct = match_key;&amp;#10;    } else {&amp;#10;        answer_correct = nonmatch_key;&amp;#10;    }&amp;#10;    if ((key_resp.keys === null)) {&amp;#10;        key_resp.corr = &quot;m&quot;;&amp;#10;    } else {&amp;#10;        if ((key_resp.keys === answer_correct)) {&amp;#10;            key_resp.corr = 1;&amp;#10;        } else {&amp;#10;            key_resp.corr = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((match_responses === 0)) {&amp;#10;    if ((match_idx === 1)) {&amp;#10;        answer_correct = null;&amp;#10;    } else {&amp;#10;        answer_correct = nonmatch_key;&amp;#10;    }&amp;#10;    if ((key_resp.keys === answer_correct)) {&amp;#10;        key_resp.corr = 1;&amp;#10;    } else {&amp;#10;        key_resp.corr = 0;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if match_responses == 1: &amp;#10;&amp;#10;    if match_idx == 1:&amp;#10;        answer_correct = match_key&amp;#10;    else:  # match_idx == 0&amp;#10;        answer_correct = nonmatch_key&amp;#10;&amp;#10;    # Evaluate participant response&amp;#10;    if key_resp.keys is None:&amp;#10;        key_resp.corr = &quot;m&quot;   # no response&amp;#10;    elif key_resp.keys == answer_correct:&amp;#10;        key_resp.corr = 1      # correct response&amp;#10;    else:&amp;#10;        key_resp.corr = 0      # wrong key&amp;#10;        &amp;#10;    &amp;#10;if match_responses == 0: &amp;#10;    &amp;#10;    if match_idx == 1:&amp;#10;        answer_correct = None&amp;#10;    else:  # match_idx == 0&amp;#10;        answer_correct = nonmatch_key&amp;#10;&amp;#10;    # Evaluate participant response  &amp;#10;    if key_resp.keys == answer_correct:&amp;#10;        key_resp.corr = 1      # correct response&amp;#10;    else:&amp;#10;        key_resp.corr = 0      # wrong key&amp;#10;        &amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_key_resp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_resp_logging" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log onset at first frame&amp;#10;&amp;#10;bids.schedule_onset(word,&amp;#10;                        block_num = block_num,&amp;#10;                        trial_num = trial_num,&amp;#10;                        type_of_stimulus=&quot;word&quot;,&amp;#10;                        component_label=&quot;word&quot;,&amp;#10;                        wrd_img_match = match_idx,&amp;#10;                        concept_label = word_shown)&amp;#10;&amp;#10;&amp;#10;bids.schedule_onset(nonmatch_side,&amp;#10;                        block_num = block_num,&amp;#10;                        trial_num = trial_num,&amp;#10;                        type_of_stimulus=&quot;prompt to respond&quot;,&amp;#10;                        component_label=&quot;nonmatch_side&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(word, {&quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;type_of_stimulus&quot;: &quot;word&quot;, &quot;component_label&quot;: &quot;word&quot;, &quot;wrd_img_match&quot;: match_idx, &quot;concept_label&quot;: word_shown});&amp;#10;bids.schedule_onset(nonmatch_side, {&quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;type_of_stimulus&quot;: &quot;prompt to respond&quot;, &quot;component_label&quot;: &quot;nonmatch_side&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.add_instant(&quot;response&quot;, {&quot;response&quot;: (key_resp.keys ? key_resp.keys : null), &quot;response_time&quot;: ((&quot;rt&quot; in key_resp) ? key_resp.rt : null), &quot;correct&quot;: ((&quot;corr&quot; in key_resp) ? key_resp.corr : &quot;m&quot;), &quot;expected_response&quot;: answer_correct, &quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;component_label&quot;: &quot;button_pressed&quot;});&amp;#10;bids.mark_offset(word);&amp;#10;bids.mark_offset(nonmatch_side);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# response neeeds to be saved at end of trial&amp;#10;bids.add_instant(&amp;#10;    &quot;response&quot;,&amp;#10;    response=(key_resp.keys if key_resp.keys else None),&amp;#10;    response_time=(key_resp.rt if hasattr(key_resp, &quot;rt&quot;) else None),&amp;#10;    correct=(key_resp.corr if hasattr(key_resp, &quot;corr&quot;) else &quot;m&quot;),&amp;#10;    expected_response = answer_correct,&amp;#10;    block_num = block_num,&amp;#10;    trial_num = trial_num,&amp;#10;    component_label = &quot;button_pressed&quot;&amp;#10;)&amp;#10;&amp;#10;bids.mark_offset(word)&amp;#10;bids.mark_offset(nonmatch_side)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_resp_logging" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="resp_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((&quot;_trig_sent&quot; in key_resp)) {&amp;#10;    delattr(key_resp, &quot;_trig_sent&quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if hasattr(key_resp, '_trig_sent'):&amp;#10;    delattr(key_resp, '_trig_sent')" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="stim = &quot;response (button press)&quot;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;&amp;#10;&amp;#10;if (key_resp.keys is not None&amp;#10;    and not getattr(key_resp, '_trig_sent', False)):&amp;#10;    log(&quot;response given&quot;) # also add to log file&amp;#10;    meg_triggers.send_trigger(number)# send trigger on the same flip&amp;#10;    core.wait(0.2)&amp;#10;    key_resp._trig_sent = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="stim = &quot;response (button press)&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;if (((key_resp.keys !== null) &amp;&amp; (! (key_resp[&quot;_trig_sent&quot;] || false)))) {&amp;#10;    Math.log(&quot;response given&quot;);&amp;#10;    meg_triggers.send_trigger(number);&amp;#10;    core.wait(0.2);&amp;#10;    key_resp._trig_sent = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="resp_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="settings">
      <RoutineSettingsComponent name="settings" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="settings" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="functions_imports" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;# log function that saves variables to log file&amp;#10;def log(*msgs, sep=' ', end='\n'):&amp;#10;    log_file = u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'] + '_print.log')&amp;#10;    print(*msgs, sep=sep, end=end, flush=True)&amp;#10;&amp;#10;    # Append to log file&amp;#10;    with open(log_file, 'a') as f:&amp;#10;        f.write(sep.join(str(msg) for msg in msgs) + end)&amp;#10;        &amp;#10; # import meg_trigger package&amp;#10;import meg_triggers&amp;#10;from meg_triggers import send_trigger&amp;#10;meg_triggers.enable_printing()&amp;#10;meg_triggers.set_default_duration(0.005)&amp;#10;&amp;#10;# function for setting triggers when comps appear&amp;#10;def send_onset_trigger(stim, trig_number):&amp;#10;    # record exact onset on the global clock &amp;#10;    win.timeOnFlip(stim, 'tStartRefresh')&amp;#10;    log(f'{stim}.started')&amp;#10;    send_trigger(trig_number)&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="functions_imports" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="exp_settings" plugin="None">
        <Param val="&amp;#10;## all important task parameters to set ##&amp;#10;&amp;#10;# response prompt positions&amp;#10;possible_prompt_positions = [-0.2, 0.2] # x coordinates&amp;#10;&amp;#10;# duration of image presentation  [s]&amp;#10;image_dur = 1&amp;#10;&amp;#10;# image - word ISI: interval between image and word [s]&amp;#10;img_wrd_isi = 0&amp;#10;&amp;#10;# word presentation duration [s]&amp;#10;word_dur = 2&amp;#10;&amp;#10;# word - response prompt ISI [s]&amp;#10;wrd_resp_isi = 0&amp;#10;&amp;#10;# time to make response [s] &amp;#10;response_time = 2&amp;#10;&amp;#10;# left &amp; right response button presentation duration [s]&amp;#10;side_dur = 2&amp;#10;&amp;#10;# is there feedback or not&amp;#10;fdback = 1 # [0 = no, 1 = yes]&amp;#10;&amp;#10;# feedback duration [s]&amp;#10;fdback_dur = 0.2&amp;#10; &amp;#10;# duration of rest breaks [s]&amp;#10;break_dur = 30&amp;#10;&amp;#10;# interval of the breaks (every x trials)&amp;#10;break_interval = 70&amp;#10;total_block_number = 12&amp;#10;&amp;#10;# response - key mapping&amp;#10;left_key = 'g'&amp;#10;right_key = 'b'&amp;#10;possible_keys = [left_key, right_key]&amp;#10;&amp;#10;# language for instruction&amp;#10;language = 'german' # 'english' or 'german' &amp;#10;&amp;#10;# match /non-match responses or just non-match&amp;#10;match_responses = 1 # [no &quot;match&quot; responses = 0, &quot;match responses&quot; = 1]&amp;#10;&amp;#10;# switch sides for match / non match mapping&amp;#10;switch_sides = 1 # [no = 0, yes = 1]" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="possible_prompt_positions = [(- 0.2), 0.2];&amp;#10;image_dur = 1;&amp;#10;img_wrd_isi = 0;&amp;#10;word_dur = 2;&amp;#10;wrd_resp_isi = 0;&amp;#10;response_time = 2;&amp;#10;side_dur = 2;&amp;#10;fdback = 1;&amp;#10;fdback_dur = 0.2;&amp;#10;break_dur = 30;&amp;#10;break_interval = 70;&amp;#10;total_block_number = 12;&amp;#10;left_key = &quot;g&quot;;&amp;#10;right_key = &quot;b&quot;;&amp;#10;possible_keys = [left_key, right_key];&amp;#10;language = &quot;german&quot;;&amp;#10;match_responses = 1;&amp;#10;switch_sides = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="exp_settings" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_logging_functions" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# --- BIDS event logger (no Builder BIDS components needed) ---&amp;#10;from pathlib import Path&amp;#10;import csv&amp;#10;import numpy as np&amp;#10;import atexit&amp;#10;&amp;#10;class BIDSLogger:&amp;#10;    def __init__(self, win, clock, default_cols=None):&amp;#10;        self.win = win&amp;#10;        self.clock = clock&amp;#10;        self.rows = []          # list of dicts -&gt; will become events.tsv&amp;#10;        self.active = {}        # stim -&gt; row index (for duration)&amp;#10;        self.defaults = default_cols or {}&amp;#10;&amp;#10;        # fixed column order (add any you want to see in the TSV)&amp;#10;        self.col_order = [&amp;#10;            &quot;subject&quot;, &quot;block_num&quot;, &quot;trial_num&quot;,&amp;#10;            &quot;component_label&quot;, &quot;onset&quot;, &quot;duration&quot;,&amp;#10;            &quot;type_of_stimulus&quot;, &quot;concept_label&quot;,&amp;#10;            &quot;concept_examplar&quot;,&amp;#10;            &quot;response_time&quot;, &quot;response&quot;,&amp;#10;            &quot;expected_response&quot;, &quot;wrd_img_match&quot;,&amp;#10;            &quot;correct&quot;&amp;#10;        ]&amp;#10;&amp;#10;    # schedule logging of onset on the *next* flip (exactly when the stim appears)&amp;#10;    def schedule_onset(self, stim, **extra_cols):&amp;#10;         # Onset: first frame it is STARTED&amp;#10;        if getattr(stim, &quot;status&quot;, None) == STARTED and stim not in self.active:&amp;#10;            # Builder already records exact onset on flip into tStartRefresh;&amp;#10;            # fall back to current clock if that isn't available.&amp;#10;            t_on = getattr(stim, &quot;tStartRefresh&quot;, None)&amp;#10;            if t_on is None:&amp;#10;                t_on = self.clock.getTime()&amp;#10;            row = {&amp;#10;                &quot;onset&quot;: float(t_on),&amp;#10;                &quot;duration&quot;: np.nan,&amp;#10;            }&amp;#10;            row.update(self.defaults)&amp;#10;            row.update(extra_cols)&amp;#10;            self.rows.append(row)&amp;#10;            self.active[stim] = len(self.rows) - 1&amp;#10;    &amp;#10;    # to log the offset and therefore compute durations of components&amp;#10;    def mark_offset(self, stim):&amp;#10;        if getattr(stim, &quot;status&quot;, None) == FINISHED and stim in self.active:&amp;#10;            idx = self.active.pop(stim)&amp;#10;            t_off = getattr(stim, &quot;tStopRefresh&quot;, None)&amp;#10;            if t_off is None:&amp;#10;                t_off = self.clock.getTime()&amp;#10;            self.rows[idx][&quot;duration&quot;] = float(t_off - self.rows[idx][&quot;onset&quot;])&amp;#10;            &amp;#10;    # log a one-shot event right now (no duration), e.g., button press&amp;#10;    def add_instant(self, trial_type, **extra_cols):&amp;#10;        row = {&quot;onset&quot;: float(self.clock.getTime()), &quot;duration&quot;: 0.0,&amp;#10;               &quot;type_of_stimulus&quot;: trial_type}&amp;#10;        row.update(self.defaults)&amp;#10;        row.update(extra_cols)&amp;#10;        self.rows.append(row)&amp;#10;&amp;#10;    # write out a BIDS-like events.tsv&amp;#10;    def save(self, filename_base):&amp;#10;        out = Path(filename_base).with_suffix(&quot;&quot;)  # strip .csv/.log if present&amp;#10;        out = out.parent / (out.name + &quot;_events.tsv&quot;)&amp;#10;&amp;#10;        # union of all keys, but keep preferred order first&amp;#10;        all_keys = list(self.col_order)&amp;#10;        for r in self.rows:&amp;#10;            for k in r.keys():&amp;#10;                if k not in all_keys:&amp;#10;                    all_keys.append(k)&amp;#10;&amp;#10;        with open(out, &quot;w&quot;, newline=&quot;&quot;, encoding=&quot;utf-8&quot;) as f:&amp;#10;            w = csv.DictWriter(f, fieldnames=all_keys, delimiter=&quot;\t&quot;, extrasaction=&quot;ignore&quot;)&amp;#10;            w.writeheader()&amp;#10;            for r in self.rows:&amp;#10;                # convert Nones to &quot;n/a&quot; for BIDS friendliness&amp;#10;                out_row = {k: (&quot;n/a&quot; if (r.get(k) is None or (isinstance(r.get(k), float) and np.isnan(r.get(k)))) else r.get(k))&amp;#10;                           for k in all_keys}&amp;#10;                w.writerow(out_row)&amp;#10;&amp;#10;        return str(out)&amp;#10;# set global clock as default because we need it for timing&amp;#10;bids = None&amp;#10;&amp;#10;# atexit autosave: runs on normal finish AND on ESC (core.quit)&amp;#10;def _bids_autosave():&amp;#10;    try:&amp;#10;        if bids and hasattr(bids, &quot;rows&quot;):&amp;#10;            out = bids.save(thisExp.dataFileName)&amp;#10;            print(f&quot;[autosave] BIDS events written to: {out}&quot;)&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;[autosave] Failed to save BIDS events: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="bids = new BIDSLogger({&quot;win&quot;: psychoJS.window, &quot;clock&quot;: globalClock, &quot;default_cols&quot;: dict({&quot;subject&quot;: expInfo.get(&quot;participant&quot;)})});&amp;#10;_ = bids.save(psychoJS.experiment.dataFileName);&amp;#10;atexit.register(_bids_autosave);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# ---- Create the logger once ----&amp;#10;bids = BIDSLogger(&amp;#10;    win=win,&amp;#10;    clock=globalClock,&amp;#10;    default_cols=dict(&amp;#10;        subject=expInfo.get(&quot;participant&quot;)&amp;#10;    )&amp;#10;)&amp;#10;&amp;#10;# write a header-only file immediately so each start creates a file&amp;#10;_ = bids.save(thisExp.dataFileName)&amp;#10;&amp;#10;# atexit autosave: runs on normal finish AND on ESC (core.quit)&amp;#10;atexit.register(_bids_autosave)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_logging_functions" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="meg_trigger_numbers" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;# define which trigger numbers to send&amp;#10;trigger_numbers_dict = {&amp;#10;&quot;start/end&quot;: 255,&amp;#10;&quot;image presentation&quot;: range(1,22), &amp;#10;&quot;word presentation&quot;: 99,&amp;#10;&quot;response (button press)&quot;: 127,&amp;#10;&quot;feedback&quot;: 96,&amp;#10;&quot;too slow msg&quot;: 95,&amp;#10;&quot;fixation cross ITI&quot;: 94,&amp;#10;&quot;break start&quot;: 81, &amp;#10;&quot;break end&quot;: 82&amp;#10;}" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="trigger_numbers_dict = {&quot;start/end&quot;: 255, &quot;image presentation&quot;: util.range(1, 22), &quot;word presentation&quot;: 99, &quot;response (button press)&quot;: 127, &quot;feedback&quot;: 96, &quot;too slow msg&quot;: 95, &quot;fixation cross ITI&quot;: 94, &quot;break start&quot;: 81, &quot;break end&quot;: 82};&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="meg_trigger_numbers" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="bids_export">
      <RoutineSettingsComponent name="bids_export" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="bids_export" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="save_tsv" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="try:&amp;#10;    events_path = bids.save(thisExp.dataFileName)&amp;#10;    print(f&quot;BIDS events written to: {events_path}&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;Manual save failed: {e}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="try {&amp;#10;    events_path = bids.save(psychoJS.experiment.dataFileName);&amp;#10;    console.log(`BIDS events written to: ${events_path}`);&amp;#10;} catch(e) {&amp;#10;    console.log(`Manual save failed: ${e}`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="save_tsv" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions_03">
      <RoutineSettingsComponent name="instructions_03" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_03" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_03" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="## schedule bids trigger setting&amp;#10;# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(instruction_part3,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;instruction_03&quot;)&amp;#10;&amp;#10;&amp;#10;bids.schedule_onset(instruction_part3,&amp;#10;                        type_of_stimulus=&quot;instructions&quot;,&amp;#10;                        component_label=&quot;instruction_part3&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(instruction_part3, {&quot;type_of_stimulus&quot;: &quot;instructions&quot;, &quot;component_label&quot;: &quot;instruction_part3&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(instruction_part3);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(instruction_part3)&amp;#10;bids.mark_offset(instruction_part3)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_03" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_part3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_part3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_part3_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_part3.text = &quot;On each trial, decide whether the word on the screen matches the image that was shown just before. Press the left or right button depending on whether it is a match or not. The correct button assignments will be shown on the screen throughout the task. We\u2019ll start with some practice trials.\n[Press any button to continue.] &quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_part3.text = &quot;Sie sollen die linke oder rechte Taste dr\u00fccken, je nachdem, ob der Text zu dem davor pr\u00e4sentierten Bild passt oder nicht. Die richtige Tastenbelegung wird Ihnen w\u00e4hrend der Aufgabe auf dem Bildschirm angezeigt. Wir beginnen nun mit einigen \u00dcbungsdurchg\u00e4ngen.\n[Dr\u00fccken Sie eine beliebige Taste, um fortzufahren.]&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_part3.text = (&amp;#10;&quot;On each trial, decide whether the word on the screen matches &quot;&amp;#10;&quot;the image that was shown just before. Press the left or right &quot;&amp;#10;&quot;button depending on whether it is a match or not. The correct &quot;&amp;#10;&quot;button assignments will be shown on the screen throughout the task. &quot;&amp;#10;&quot;We’ll start with some practice trials.\n&quot;&amp;#10;&quot;[Press any button to continue.] &quot;&amp;#10;)&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_part3.text = (&amp;#10;&quot;Sie sollen die linke oder rechte Taste drücken, &quot;&amp;#10;&quot;je nachdem, ob der Text zu dem davor präsentierten Bild passt oder nicht. &quot;&amp;#10;&quot;Die richtige Tastenbelegung wird Ihnen während der Aufgabe auf dem Bildschirm angezeigt. &quot;&amp;#10;&quot;Wir beginnen nun mit einigen Übungsdurchgängen.\n&quot;&amp;#10;&quot;[Drücken Sie eine beliebige Taste, um fortzufahren.]&quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_part3_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_4" plugin="None">
        <Param val="'y','b','r', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_4" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_end">
      <RoutineSettingsComponent name="instructions_end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_end" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="## schedule bids trigger setting&amp;#10;# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(instruction_end,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;instruction_end&quot;)&amp;#10;                        &amp;#10;bids.schedule_onset(instruction_end,&amp;#10;                        type_of_stimulus=&quot;instructions&quot;,&amp;#10;                        component_label=&quot;instruction_end&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(instruction_end, {&quot;type_of_stimulus&quot;: &quot;instructions&quot;, &quot;component_label&quot;: &quot;instruction_end&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(instruction_end);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(instruction_end)&amp;#10;bids.mark_offset(instruction_end)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_end" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_end" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_end" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_end_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_end.text = &quot;You have finished the task. Press any button to exit. Thank you for participating. &quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_end.text = &quot;Sie haben die Aufgabe beendet. Dr\u00fccken Sie eine beliebige Taste, um zu beenden. Vielen Dank f\u00fcr Ihre Teilnahme.&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_end.text = (&amp;#10;    &quot;You have finished the task. Press any button to exit. &quot;&amp;#10;    &quot;Thank you for participating. &quot;&amp;#10;)&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_end.text = (&amp;#10;    &quot;Sie haben die Aufgabe beendet. Drücken Sie eine beliebige Taste, um zu beenden. &quot;&amp;#10;    &quot;Vielen Dank für Ihre Teilnahme.&quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_end_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_7" plugin="None">
        <Param val="'y','b','r', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_7" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="end_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="stim = &quot;start/end&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;meg_triggers.send_trigger(number, 0.005);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# send trigger for start exp&amp;#10;stim = &quot;start/end&quot;&amp;#10;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;meg_triggers.send_trigger(number, 0.005)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions_startexp">
      <RoutineSettingsComponent name="instructions_startexp" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instructions_startexp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="bids_instruc_startexp" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="## schedule bids trigger setting&amp;#10;# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(instruction_startexp,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;instruction_startexp&quot;)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(instruction_startexp)&amp;#10;&amp;#10;bids.schedule_onset(instruction_startexp,&amp;#10;                    type_of_stimulus=&quot;instructions&quot;,&amp;#10;                    component_label=&quot;instruction_start&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(instruction_startexp, {&quot;type_of_stimulus&quot;: &quot;instructions&quot;, &quot;component_label&quot;: &quot;instruction_start&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(instruction_startexp);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="bids.mark_offset(instruction_startexp)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_instruc_startexp" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instruction_startexp" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_startexp" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="instruction_startexp_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    instruction_startexp.text = &quot;You have completed all practice trials. Now the main task will begin. Always indicate whether the object in the image matches the word. There will be regular breaks where you can rest for a moment.\n[Press any key to start the main task.]&quot;;&amp;#10;}&amp;#10;if ((language === &quot;german&quot;)) {&amp;#10;    instruction_startexp.text = &quot;Sie haben alle \u00dcbungsdurchg\u00e4nge abgeschlossen. Jetzt beginnt die Hauptaufgabe. Geben Sie immer an, ob das Objekt im Bild zum Wort passt. Es wird regelm\u00e4\u00dfige Pausen geben, in denen Sie sich kurz ausruhen k\u00f6nnen.\n[Dr\u00fccken Sie eine beliebige Taste, um die Hauptaufgabe zu starten.]&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    instruction_startexp.text = (&amp;#10;    &quot;You have completed all practice trials. Now the main task will begin. &quot;&amp;#10;    &quot;Always indicate whether the object in the image matches the word. &quot;&amp;#10;    &quot;There will be regular breaks where you can rest for a moment.\n&quot;&amp;#10;    &quot;[Press any key to start the main task.]&quot;&amp;#10;)&amp;#10;   &amp;#10;if language == &quot;german&quot;: &amp;#10;    instruction_startexp.text = (&amp;#10;&quot;Sie haben alle Übungsdurchgänge abgeschlossen. Jetzt beginnt die Hauptaufgabe. &quot;&amp;#10;&quot;Geben Sie immer an, ob das Objekt im Bild zum Wort passt. &quot;&amp;#10;&quot;Es wird regelmäßige Pausen geben, in denen Sie sich kurz ausruhen können.\n&quot;&amp;#10;&quot;[Drücken Sie eine beliebige Taste, um die Hauptaufgabe zu starten.]&quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instruction_startexp_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_6" plugin="None">
        <Param val="'y','b','r', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_6" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="image_pres_prc">
      <RoutineSettingsComponent name="image_pres_prc" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="image_pres_prc" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image_prc" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ &quot;stimuli\\practice_images\\&quot; + image_shown" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="image_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="word_pres_prc">
      <RoutineSettingsComponent name="word_pres_prc" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="word_pres_prc" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="set_word_prc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="word_prc.setColor(&quot;white&quot;, {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;if ((language === &quot;english&quot;)) {&amp;#10;    word_shown = word_shown_english;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        word_shown = word_shown_german;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# set text and color of word&amp;#10;word_prc.setColor('white', colorSpace='rgb')&amp;#10;&amp;#10;if language == 'english':&amp;#10;    word_shown = (word_shown_english)&amp;#10;    &amp;#10;elif language == 'german':   &amp;#10;    word_shown = (word_shown_german)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_word_prc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="word_prc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="word_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="word_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$word_shown" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="set_matchside" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    match_side_prc.text = &quot;match&quot;;&amp;#10;    nonmatch_side_prc.text = &quot;non-match&quot;;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        match_side_prc.text = &quot;richtig&quot;;&amp;#10;        nonmatch_side_prc.text = &quot;falsch&quot;;&amp;#10;    }&amp;#10;}&amp;#10;prompt_positions_dir = [&quot;left&quot;, &quot;right&quot;];&amp;#10;if ((switch_sides === 0)) {&amp;#10;    nonmatch_idx = 1;&amp;#10;}&amp;#10;if ((switch_sides === 1)) {&amp;#10;    nonmatch_idx = util.index(prompt_positions_dir, nonmatch_pres_side);&amp;#10;}&amp;#10;nonmatch_prpt_position = possible_prompt_positions[nonmatch_idx];&amp;#10;nonmatch_key = possible_keys[nonmatch_idx];&amp;#10;match_prpt_position = possible_prompt_positions[(~ nonmatch_idx)];&amp;#10;match_key = possible_keys[(~ nonmatch_idx)];&amp;#10;match_side_prc.setPos([match_prpt_position, (- 0.1)]);&amp;#10;nonmatch_side_prc.setPos([nonmatch_prpt_position, (- 0.1)]);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# labels &amp;#10;if language == &quot;english&quot;: &amp;#10;    match_side_prc.text = &quot;match&quot;&amp;#10;    nonmatch_side_prc.text = &quot;non-match&quot;&amp;#10;elif language == &quot;german&quot;: &amp;#10;    match_side_prc.text = &quot;richtig&quot;&amp;#10;    nonmatch_side_prc.text = &quot;falsch&quot;&amp;#10;    &amp;#10;# positions&amp;#10;prompt_positions_dir = [&quot;left&quot;, &quot;right&quot;]&amp;#10;&amp;#10;if switch_sides == 0: &amp;#10;    nonmatch_idx = 1 # match is always on the right&amp;#10;    &amp;#10;if switch_sides == 1: &amp;#10;    nonmatch_idx = prompt_positions_dir.index(nonmatch_pres_side)&amp;#10;&amp;#10;nonmatch_prpt_position = possible_prompt_positions[nonmatch_idx]  &amp;#10;nonmatch_key = possible_keys[nonmatch_idx]&amp;#10;&amp;#10;match_prpt_position = possible_prompt_positions[~nonmatch_idx] &amp;#10;match_key = possible_keys[~nonmatch_idx]&amp;#10;&amp;#10;match_side_prc.setPos((match_prpt_position, -0.1))&amp;#10;nonmatch_side_prc.setPos((nonmatch_prpt_position,-0.1))&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_matchside" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="match_side_prc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="match_side_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="wrd_resp_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="side_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="nonmatch_side_prc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="nonmatch_side_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="wrd_resp_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="side_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_allowedkeys" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((match_responses === 0)) {&amp;#10;    allowed_key_list = nonmatch_key;&amp;#10;} else {&amp;#10;    allowed_key_list = possible_keys;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if match_responses == 0:&amp;#10;    allowed_key_list = nonmatch_key&amp;#10;else:&amp;#10;    # default: allow both match and nonmatch responses&amp;#10;    allowed_key_list = possible_keys&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_allowedkeys" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_prc" plugin="None">
        <Param val="allowed_key_list" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_prc" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="wrd_resp_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="response_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_resp_prc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="key_resp_prc.keys = null;&amp;#10;key_resp_prc.corr = null;&amp;#10;if ((match_responses === 0)) {&amp;#10;    match_side_prc.setOpacity(0);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# reset key resp and correct answer&amp;#10;key_resp_prc.keys = None&amp;#10;key_resp_prc.corr = None &amp;#10;&amp;#10;# special case: participants only respond to mismatches&amp;#10;&amp;#10;if match_responses == 0:&amp;#10;    match_side_prc.setOpacity(0)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((match_responses === 1)) {&amp;#10;    if ((match_idx === 1)) {&amp;#10;        correct_response = match_key;&amp;#10;    } else {&amp;#10;        correct_response = nonmatch_key;&amp;#10;    }&amp;#10;    if ((key_resp_prc.keys === null)) {&amp;#10;        key_resp_prc.corr = null;&amp;#10;    } else {&amp;#10;        if ((key_resp_prc.keys === correct_response)) {&amp;#10;            key_resp_prc.corr = 1;&amp;#10;        } else {&amp;#10;            key_resp_prc.corr = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((match_responses === 0)) {&amp;#10;    if ((match_idx === 1)) {&amp;#10;        correct_response = null;&amp;#10;    } else {&amp;#10;        correct_response = nonmatch_key;&amp;#10;    }&amp;#10;    if ((key_resp_prc.keys === correct_response)) {&amp;#10;        key_resp_prc.corr = 1;&amp;#10;    } else {&amp;#10;        key_resp_prc.corr = 0;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if match_responses == 1: &amp;#10;&amp;#10;    if match_idx == 1:&amp;#10;        correct_response = match_key&amp;#10;    else:  # match_idx == 0&amp;#10;        correct_response = nonmatch_key&amp;#10;&amp;#10;    # Evaluate participant response&amp;#10;    if key_resp_prc.keys is None:&amp;#10;        key_resp_prc.corr = None   # no response&amp;#10;    elif key_resp_prc.keys == correct_response:&amp;#10;        key_resp_prc.corr = 1      # correct response&amp;#10;    else:&amp;#10;        key_resp_prc.corr = 0      # wrong key&amp;#10;        &amp;#10;    &amp;#10;if match_responses == 0: &amp;#10;    &amp;#10;    if match_idx == 1:&amp;#10;        correct_response = None&amp;#10;    else:  # match_idx == 0&amp;#10;        correct_response = nonmatch_key&amp;#10;&amp;#10;    # Evaluate participant response  &amp;#10;    if key_resp_prc.keys == correct_response:&amp;#10;        key_resp_prc.corr = 1      # correct response&amp;#10;    else:&amp;#10;        key_resp_prc.corr = 0      # wrong key&amp;#10;        &amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_resp_prc" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback_prc">
      <RoutineSettingsComponent name="feedback_prc" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="feedback_prc" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_3_prc" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((fdback === 1)) {&amp;#10;    if ((key_resp_prc.corr === 1)) {&amp;#10;        word_feedback_prc.setColor(&quot;green&quot;, {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;        word_feedback_prc.setOpacity(1);&amp;#10;        too_slow_msg_prc.setOpacity(0);&amp;#10;    } else {&amp;#10;        if ((key_resp_prc.corr === 0)) {&amp;#10;            word_feedback_prc.setColor(&quot;red&quot;, {&quot;colorSpace&quot;: &quot;rgb&quot;});&amp;#10;            word_feedback_prc.setOpacity(1);&amp;#10;            too_slow_msg_prc.setOpacity(0);&amp;#10;        } else {&amp;#10;            word_feedback_prc.setOpacity(0);&amp;#10;            too_slow_msg_prc.setOpacity(1);&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    word_feedback_prc.setOpacity(0);&amp;#10;    too_slow_msg_prc.setOpacity(0);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;# prepare feedback in form of word color change or too slow message&amp;#10;&amp;#10;if fdback == 1: &amp;#10;   &amp;#10;    if key_resp_prc.corr == 1: &amp;#10;        # Green feedback&amp;#10;        word_feedback_prc.setColor('green', colorSpace='rgb')&amp;#10;        word_feedback_prc.setOpacity(1)&amp;#10;        too_slow_msg_prc.setOpacity(0)&amp;#10;&amp;#10;      &amp;#10;    elif key_resp_prc.corr == 0:&amp;#10;        # Red feedback&amp;#10;        word_feedback_prc.setColor('red', colorSpace='rgb')&amp;#10;        word_feedback_prc.setOpacity(1)&amp;#10;        too_slow_msg_prc.setOpacity(0)&amp;#10;&amp;#10;        &amp;#10;    else:&amp;#10;        # No correct/incorrect feedback → hide&amp;#10;        word_feedback_prc.setOpacity(0)&amp;#10;        too_slow_msg_prc.setOpacity(1)&amp;#10;&amp;#10;else:  # if no feedback is desired&amp;#10;    word_feedback_prc.setOpacity(0)&amp;#10;    too_slow_msg_prc.setOpacity(0)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3_prc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="word_feedback_prc" plugin="None">
        <Param val="" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="word_feedback_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="fdback_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$word_shown" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="too_slow_msg_prc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="too_slow_msg_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="fdback_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="set_too_slow_msg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    too_slow_msg_prc.text = &quot;too slow&quot;;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        too_slow_msg_prc.text = &quot;zu langsam&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if language == &quot;english&quot;: &amp;#10;    too_slow_msg_prc.text = &quot;too slow&quot;&amp;#10;elif language == &quot;german&quot;: &amp;#10;    too_slow_msg_prc.text = &quot;zu langsam&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_too_slow_msg" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="ITI_prc">
      <RoutineSettingsComponent name="ITI_prc" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ITI_prc" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="fix_cross_2_prc" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fix_cross_2_prc" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$ITI_length" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="break_3">
      <RoutineSettingsComponent name="break_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="break_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="definition_breaks" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials.thisN === 0)) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    if (((current_trial_number % break_interval) !== 0)) {&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if ((block_num === total_block_number)) {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials.thisN == 0:&amp;#10;   continueRoutine = False&amp;#10;elif current_trial_number % break_interval!= 0:&amp;#10;    continueRoutine = False&amp;#10;elif block_num == total_block_number:&amp;#10;     continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="definition_breaks" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="break_trigger_meg" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="stim = &quot;break start&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;if ((continueRoutine === true)) {&amp;#10;    meg_triggers.send_trigger(number, 0.005);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# send trigger for begin break&amp;#10;stim = &quot;break start&quot;&amp;#10;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;&amp;#10;if continueRoutine == True: &amp;#10;    meg_triggers.send_trigger(number, 0.005)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="stim = &quot;break end&quot;;&amp;#10;number = trigger_numbers_dict[stim];&amp;#10;if ((continueRoutine === true)) {&amp;#10;    meg_triggers.send_trigger(number, 0.005);&amp;#10;    core.wait(0.2);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# send trigger for end break&amp;#10;stim = &quot;break end&quot;&amp;#10;&amp;#10;number = trigger_numbers_dict[stim]&amp;#10;&amp;#10;if continueRoutine == True: &amp;#10;    meg_triggers.send_trigger(number, 0.005)&amp;#10;    core.wait(0.2)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="break_trigger_meg" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="bids_break_logging" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# log onset at first frame&amp;#10;#if frameN == 0:&amp;#10;    #bids.schedule_onset(breaks_instruction,&amp;#10;                        #trial_type=&quot;localizer&quot;,&amp;#10;                        #stim_label=&quot;task_break&quot;)&amp;#10;&amp;#10;&amp;#10;bids.schedule_onset(breaks_instruction,&amp;#10;                    block_num = block_num,&amp;#10;                    trial_num = trial_num,&amp;#10;                    type_of_stimulus=&quot;break&quot;,&amp;#10;                    component_label=&quot;break_instruction&quot;)&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="bids.schedule_onset(breaks_instruction, {&quot;block_num&quot;: block_num, &quot;trial_num&quot;: trial_num, &quot;type_of_stimulus&quot;: &quot;break&quot;, &quot;component_label&quot;: &quot;break_instruction&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="bids.mark_offset(breaks_instruction);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# log offset at last frame of routine&amp;#10;#if not continueRoutine:  &amp;#10;    #bids.mark_offset(breaks_instruction)&amp;#10;    &amp;#10;bids.mark_offset(breaks_instruction)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="bids_break_logging" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="breaks_instruction" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="breaks_instruction" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="break_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="set_break_instruction_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    breaks_instruction.text = &quot;Break, the task will continue soon.&quot;;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        breaks_instruction.text = &quot;Pause, die Aufgabe geht gleich weiter.&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if language==&quot;english&quot;:&amp;#10;    breaks_instruction.text = (&amp;#10;    &quot;Break, the task will continue soon.&quot;)&amp;#10;elif language==&quot;german&quot;:&amp;#10;     breaks_instruction.text =(&amp;#10;    &quot;Pause, die Aufgabe geht gleich weiter.&quot;)&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_break_instruction_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="progress_update" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="progress_update" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="break_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="progress_update_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    progress_update.text = `You have completed ${block_num} out of ${total_block_number} blocks.`;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        progress_update.text = `Sie haben ${block_num} von ${total_block_number} Blöcken abgeschlossen.`;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if language==&quot;english&quot;: &amp;#10;    progress_update.text = (&amp;#10;    f&quot;You have completed {block_num} out of &quot;&amp;#10;    f&quot;{total_block_number} blocks.&quot;)&amp;#10;elif language==&quot;german&quot;:&amp;#10;    progress_update.text = (&amp;#10;    f&quot;Sie haben {block_num} von &quot;&amp;#10;    f&quot;{total_block_number} Blöcken abgeschlossen.&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="progress_update_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="set_progress" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="timer_break = new core.CountdownTimer(break_dur);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="timer_break = core.CountdownTimer(break_dur)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="frac = 1.0 - (int(timer_break.getTime()) / break_dur)  # 0→1&amp;#10;progress_bar_breaks.progress = frac&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="frac = (1.0 - (Number.parseInt(timer_break.getTime()) / break_dur));&amp;#10;progress_bar_breaks.progress = frac;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_progress" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ProgressComponent name="progress_bar_breaks" plugin="None">
        <Param val="center-left" valType="str" updates="constant" name="anchor"/>
        <Param val="white" valType="color" updates="constant" name="borderColor"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="4" valType="num" updates="constant" name="lineWidth"/>
        <Param val="progress_bar_breaks" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="frac" valType="code" updates="set every frame" name="progress"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.03)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="break_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="height" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ProgressComponent>
      <TextComponent name="break_end_instruction" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="break_end_instruction" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="break_dur" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="set_instruction_end_text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((language === &quot;english&quot;)) {&amp;#10;    break_end_instruction.text = &quot;The break ended. Please press any button to restart the task.&quot;;&amp;#10;} else {&amp;#10;    if ((language === &quot;german&quot;)) {&amp;#10;        break_end_instruction.text = &quot;Die Pause ist vorbei. Dr\u00fccken sie eine beliebige Taste, um weiterzumachen.&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if language==&quot;english&quot;:&amp;#10;    break_end_instruction.text = (&amp;#10;    &quot;The break ended. &quot;&amp;#10;    &quot;Please press any button to restart the task.&quot;)&amp;#10;elif language==&quot;german&quot;:&amp;#10;     break_end_instruction.text =(&amp;#10;    &quot;Die Pause ist vorbei. &quot;&amp;#10;    &quot;Drücken sie eine beliebige Taste, um weiterzumachen.&quot;)&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_instruction_end_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="continue_button_8" plugin="None">
        <Param val="'y','b','r', 'g'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="continue_button_8" valType="code" updates="None" name="name"/>
        <Param val="release" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="break_dur" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="settings"/>
    <Routine name="instructions"/>
    <Routine name="instructions_02"/>
    <Routine name="instructions_03"/>
    <Routine name="instructions_meg"/>
    <LoopInitiator loopType="TrialHandler" name="trials_practice">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'image_shown': 'anchor.jpg', 'word_shown_german': 'Anker', 'word_shown_english': 'anchor', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'nonmatch_pres_side': 'right'}, {'image_shown': 'ant.jpg', 'word_shown_german': 'Ameise', 'word_shown_english': 'ant', 'ITI_length': 0.89, 'correct_response': 'r', 'match_idx': 1, 'nonmatch_pres_side': 'left'}, {'image_shown': 'axe.jpg', 'word_shown_german': 'Pferd', 'word_shown_english': 'horse', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 0, 'nonmatch_pres_side': 'left'}, {'image_shown': 'bus.jpg', 'word_shown_german': 'Bus', 'word_shown_english': 'bus', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'nonmatch_pres_side': 'right'}, {'image_shown': 'ball.jpg', 'word_shown_german': 'Gesicht', 'word_shown_english': 'face', 'ITI_length': 1.04, 'correct_response': 'r', 'match_idx': 0, 'nonmatch_pres_side': 'right'}, {'image_shown': 'banana.jpg', 'word_shown_german': 'Banane', 'word_shown_english': 'banana', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'nonmatch_pres_side': 'right'}, {'image_shown': 'glasses.jpg', 'word_shown_german': 'Brille', 'word_shown_english': 'glasses', 'ITI_length': 0.79, 'correct_response': 'r', 'match_idx': 1, 'nonmatch_pres_side': 'left'}, {'image_shown': 'basket.jpg', 'word_shown_german': 'Korb', 'word_shown_english': 'basket', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'nonmatch_pres_side': 'right'}, {'image_shown': 'bear.jpg', 'word_shown_german': 'Milch', 'word_shown_english': 'milk', 'ITI_length': 1.23, 'correct_response': 'r', 'match_idx': 0, 'nonmatch_pres_side': 'right'}, {'image_shown': 'belt.jpg', 'word_shown_german': 'Gürtel', 'word_shown_english': 'belt', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'nonmatch_pres_side': 'left'}, {'image_shown': 'bike.jpg', 'word_shown_german': 'Fahrrad', 'word_shown_english': 'bicycle ', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'nonmatch_pres_side': 'left '}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="sequences/localiser_trials_prc.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_practice" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="image_pres_prc"/>
    <Routine name="word_pres_prc"/>
    <Routine name="feedback_prc"/>
    <Routine name="ITI_prc"/>
    <LoopTerminator name="trials_practice"/>
    <Routine name="instructions_startexp"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'image_shown': 'pizza\\pizza_23.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'phones\\phones_36.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'jacket\\jacket_11.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 15}, {'image_shown': 'box\\box_34.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.95, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'chair\\chair_24.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'pizza\\pizza_10.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'box\\box_39.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'pizza\\pizza_03.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'berry\\berry_16.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'fish\\fish_27.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bug\\bug_26.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'pencil\\pencil_14.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'car\\car_40.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'bug\\bug_18.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'box\\box_06.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'jacket\\jacket_32.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'car\\car_19.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'chair\\chair_21.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'face\\face_36.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'face\\face_23.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'jacket\\jacket_08.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'milk\\milk_08.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'dog\\dog_24.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bird\\bird_33.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bug\\bug_29.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hammer\\hammer_36.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'hammer\\hammer_35.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'fish\\fish_40.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'berry\\berry_31.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'hammer\\hammer_32.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bike\\bike_33.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'chair\\chair_16.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'berry\\berry_23.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'pizza\\pizza_22.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'tree\\tree_16.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'hammer\\hammer_13.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bird\\bird_08.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'box\\box_31.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'guitar\\guitar_36.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'milk\\milk_18.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'pizza\\pizza_31.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'pencil\\pencil_11.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bike\\bike_38.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'guitar\\guitar_14.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'pencil\\pencil_22.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bug\\bug_09.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'plane\\plane_26.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'plane\\plane_05.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'hammer\\hammer_25.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'guitar\\guitar_15.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'berry\\berry_03.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'car\\car_22.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'house\\house_38.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'milk\\milk_14.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'fish\\fish_10.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'fish\\fish_16.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.18, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 10}, {'image_shown': 'phones\\phones_21.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'berry\\berry_02.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'plane\\plane_18.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'tree\\tree_02.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'milk\\milk_33.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'chair\\chair_32.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'jacket\\jacket_36.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'jacket\\jacket_14.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.13, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 15}, {'image_shown': 'bird\\bird_34.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'dog\\dog_15.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bike\\bike_36.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bird\\bird_10.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'pencil\\pencil_35.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.78, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 17}, {'image_shown': 'pencil\\pencil_21.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'hand\\hand_36.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'plane\\plane_36.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'tree\\tree_20.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'guitar\\guitar_25.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'jacket\\jacket_22.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'pencil\\pencil_01.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'milk\\milk_01.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'car\\car_25.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'phones\\phones_05.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'plane\\plane_15.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'hand\\hand_32.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.08, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 13}, {'image_shown': 'dog\\dog_05.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'pencil\\pencil_06.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bike\\bike_11.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'pizza\\pizza_21.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'chair\\chair_11.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'car\\car_10.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'bike\\bike_06.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'face\\face_21.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'tree\\tree_05.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'house\\house_26.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'pencil\\pencil_31.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'guitar\\guitar_23.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'bird\\bird_02.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.24, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 3}, {'image_shown': 'guitar\\guitar_16.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'guitar\\guitar_19.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'jacket\\jacket_10.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'plane\\plane_40.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'plane\\plane_13.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'bug\\bug_12.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'milk\\milk_30.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'face\\face_29.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'dog\\dog_11.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bug\\bug_06.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.83, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 5}, {'image_shown': 'box\\box_33.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'bug\\bug_27.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'bird\\bird_36.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'hand\\hand_11.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.91, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 13}, {'image_shown': 'tree\\tree_27.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'tree\\tree_25.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'guitar\\guitar_04.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'hammer\\hammer_24.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'berry\\berry_28.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.78, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 1}, {'image_shown': 'pizza\\pizza_16.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'jacket\\jacket_29.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'jacket\\jacket_03.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'phones\\phones_25.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'guitar\\guitar_02.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'fish\\fish_26.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'face\\face_13.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'jacket\\jacket_27.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'phones\\phones_11.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.83, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 18}, {'image_shown': 'tree\\tree_32.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'chair\\chair_07.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'box\\box_25.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'hand\\hand_08.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'guitar\\guitar_39.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'berry\\berry_14.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'face\\face_15.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'car\\car_17.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.08, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 6}, {'image_shown': 'box\\box_40.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.1, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'hammer\\hammer_08.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'pizza\\pizza_02.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'tree\\tree_15.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.23, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 21}, {'image_shown': 'box\\box_38.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'face\\face_09.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'dog\\dog_19.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'house\\house_15.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bike\\bike_34.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'phones\\phones_22.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'pencil\\pencil_15.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'hand\\hand_18.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'box\\box_36.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'hand\\hand_05.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'hammer\\hammer_40.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bike\\bike_18.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'hammer\\hammer_17.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'box\\box_13.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'face\\face_22.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'pizza\\pizza_33.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'face\\face_38.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'hand\\hand_09.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'dog\\dog_30.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'milk\\milk_16.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'fish\\fish_15.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'chair\\chair_04.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'dog\\dog_34.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'jacket\\jacket_21.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'berry\\berry_18.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'tree\\tree_19.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'hand\\hand_17.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'dog\\dog_12.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'guitar\\guitar_20.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'car\\car_11.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'chair\\chair_39.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'bike\\bike_02.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 2}, {'image_shown': 'plane\\plane_29.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'berry\\berry_11.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'hammer\\hammer_20.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bike\\bike_01.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bike\\bike_08.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bug\\bug_16.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'phones\\phones_33.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'phones\\phones_34.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'bug\\bug_15.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'box\\box_18.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'hand\\hand_35.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'phones\\phones_17.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'chair\\chair_02.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'bike\\bike_07.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'face\\face_19.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'plane\\plane_27.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'pencil\\pencil_10.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'house\\house_27.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'car\\car_39.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pizza\\pizza_06.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'house\\house_09.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bug\\bug_39.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'phones\\phones_09.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'chair\\chair_40.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'berry\\berry_04.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'plane\\plane_11.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.86, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 20}, {'image_shown': 'hammer\\hammer_06.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'guitar\\guitar_17.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.12, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 11}, {'image_shown': 'bike\\bike_14.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bike\\bike_16.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'pencil\\pencil_05.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'dog\\dog_40.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'hand\\hand_20.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'plane\\plane_10.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'berry\\berry_40.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'jacket\\jacket_17.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'fish\\fish_12.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.07, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 10}, {'image_shown': 'pencil\\pencil_23.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'plane\\plane_31.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'bird\\bird_11.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bird\\bird_40.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'jacket\\jacket_19.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'tree\\tree_28.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'house\\house_16.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.21, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 14}, {'image_shown': 'guitar\\guitar_31.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'house\\house_34.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'pizza\\pizza_14.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'fish\\fish_06.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'plane\\plane_23.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'chair\\chair_20.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'house\\house_33.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'hammer\\hammer_02.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.09, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 12}, {'image_shown': 'face\\face_37.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'fish\\fish_32.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'chair\\chair_13.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'hand\\hand_40.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'car\\car_06.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'box\\box_29.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'bird\\bird_18.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'fish\\fish_03.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'dog\\dog_31.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'pencil\\pencil_32.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bike\\bike_21.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bike\\bike_40.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'fish\\fish_36.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'pencil\\pencil_24.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bug\\bug_24.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'bike\\bike_31.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'fish\\fish_39.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bird\\bird_30.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'berry\\berry_39.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'box\\box_08.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'guitar\\guitar_32.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.87, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 11}, {'image_shown': 'tree\\tree_09.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bug\\bug_19.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'house\\house_32.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'car\\car_35.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pencil\\pencil_25.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'chair\\chair_03.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'phones\\phones_20.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'hand\\hand_38.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'milk\\milk_13.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'dog\\dog_35.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'face\\face_27.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'pizza\\pizza_28.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'guitar\\guitar_07.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'house\\house_12.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bike\\bike_32.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'berry\\berry_08.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'box\\box_15.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'jacket\\jacket_30.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'chair\\chair_14.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'milk\\milk_23.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'pizza\\pizza_34.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'jacket\\jacket_38.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'car\\car_29.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'hammer\\hammer_28.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bug\\bug_13.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hand\\hand_28.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'milk\\milk_38.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'chair\\chair_15.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'hand\\hand_01.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'chair\\chair_30.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.23, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 7}, {'image_shown': 'phones\\phones_29.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'bug\\bug_37.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'bug\\bug_32.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hand\\hand_31.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.04, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 13}, {'image_shown': 'pizza\\pizza_13.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'hammer\\hammer_15.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'fish\\fish_07.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'milk\\milk_24.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'chair\\chair_37.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'jacket\\jacket_01.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'plane\\plane_22.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'fish\\fish_14.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'dog\\dog_23.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bird\\bird_05.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'phones\\phones_30.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'hand\\hand_13.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'car\\car_02.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'hammer\\hammer_09.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'tree\\tree_26.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'hammer\\hammer_16.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'hand\\hand_22.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'dog\\dog_21.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.79, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'pizza\\pizza_26.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'phones\\phones_38.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'pencil\\pencil_34.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'box\\box_04.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'car\\car_26.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'car\\car_24.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'phones\\phones_40.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'dog\\dog_14.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.05, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'bird\\bird_09.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.08, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 3}, {'image_shown': 'dog\\dog_01.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'face\\face_35.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'car\\car_37.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pizza\\pizza_08.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'tree\\tree_13.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'plane\\plane_35.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'box\\box_35.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'house\\house_11.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'chair\\chair_36.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'car\\car_03.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'face\\face_12.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'hand\\hand_10.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'chair\\chair_12.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'face\\face_14.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'berry\\berry_29.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'car\\car_13.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'fish\\fish_19.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'car\\car_12.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'jacket\\jacket_33.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'pizza\\pizza_07.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.84, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 19}, {'image_shown': 'milk\\milk_29.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'car\\car_07.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'berry\\berry_19.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'hand\\hand_34.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'box\\box_30.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'house\\house_02.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'box\\box_02.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.84, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'berry\\berry_25.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'jacket\\jacket_04.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'hand\\hand_21.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.97, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 13}, {'image_shown': 'box\\box_11.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'plane\\plane_06.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'chair\\chair_09.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'pizza\\pizza_36.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'hand\\hand_23.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'bird\\bird_35.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'car\\car_16.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pencil\\pencil_09.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'plane\\plane_01.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.93, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 20}, {'image_shown': 'milk\\milk_21.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'bug\\bug_33.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'fish\\fish_11.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'hammer\\hammer_38.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'guitar\\guitar_22.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.17, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 11}, {'image_shown': 'tree\\tree_31.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'car\\car_32.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'tree\\tree_38.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'hammer\\hammer_05.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'pencil\\pencil_38.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.17, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 17}, {'image_shown': 'car\\car_33.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'house\\house_18.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.88, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 14}, {'image_shown': 'phones\\phones_02.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'milk\\milk_37.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'car\\car_23.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pizza\\pizza_35.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'hammer\\hammer_37.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bird\\bird_15.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'hammer\\hammer_30.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'dog\\dog_26.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bug\\bug_36.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'face\\face_02.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.1, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 9}, {'image_shown': 'bike\\bike_03.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'chair\\chair_17.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'fish\\fish_28.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bug\\bug_07.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'dog\\dog_16.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'pencil\\pencil_08.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'pizza\\pizza_19.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'plane\\plane_03.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'guitar\\guitar_21.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'face\\face_40.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'pencil\\pencil_12.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'box\\box_17.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'milk\\milk_11.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'house\\house_06.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'plane\\plane_20.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'dog\\dog_09.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'pencil\\pencil_36.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bug\\bug_17.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'milk\\milk_27.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'milk\\milk_19.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'box\\box_16.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'jacket\\jacket_35.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'house\\house_21.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'berry\\berry_09.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'pencil\\pencil_29.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'box\\box_05.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.14, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'bird\\bird_25.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'face\\face_25.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'tree\\tree_30.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bike\\bike_39.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'face\\face_39.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'phones\\phones_16.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'plane\\plane_12.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'dog\\dog_39.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.06, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'car\\car_20.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'bike\\bike_13.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'jacket\\jacket_24.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'hand\\hand_06.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'house\\house_30.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bike\\bike_30.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'milk\\milk_34.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'berry\\berry_12.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'bike\\bike_10.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'house\\house_25.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'plane\\plane_32.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'bug\\bug_21.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'car\\car_27.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'hammer\\hammer_03.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'jacket\\jacket_28.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'milk\\milk_12.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'tree\\tree_18.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'plane\\plane_25.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'jacket\\jacket_13.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'hammer\\hammer_23.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bird\\bird_07.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bird\\bird_31.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bike\\bike_28.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'face\\face_31.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'pizza\\pizza_38.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'berry\\berry_24.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'car\\car_15.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'phones\\phones_39.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'berry\\berry_34.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'jacket\\jacket_37.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'tree\\tree_37.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bug\\bug_20.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'pencil\\pencil_13.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'phones\\phones_35.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'plane\\plane_17.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'car\\car_21.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'dog\\dog_18.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'chair\\chair_27.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'guitar\\guitar_28.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'phones\\phones_23.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'bike\\bike_09.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'house\\house_28.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bike\\bike_27.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bike\\bike_04.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bug\\bug_04.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'pizza\\pizza_12.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'bird\\bird_20.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'phones\\phones_37.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'face\\face_07.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'bug\\bug_11.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hand\\hand_27.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'face\\face_28.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'hammer\\hammer_21.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'tree\\tree_34.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'berry\\berry_05.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'fish\\fish_30.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'fish\\fish_23.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'dog\\dog_32.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'fish\\fish_37.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'tree\\tree_01.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'tree\\tree_36.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bird\\bird_13.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'guitar\\guitar_37.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'phones\\phones_12.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'tree\\tree_33.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'chair\\chair_01.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'pencil\\pencil_18.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'berry\\berry_33.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'hand\\hand_16.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'phones\\phones_26.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'hammer\\hammer_14.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'guitar\\guitar_13.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.79, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 11}, {'image_shown': 'bike\\bike_29.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'chair\\chair_38.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.05, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 7}, {'image_shown': 'milk\\milk_26.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.02, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 16}, {'image_shown': 'house\\house_36.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'tree\\tree_06.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'berry\\berry_38.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'bug\\bug_23.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'house\\house_40.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'phones\\phones_08.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'chair\\chair_23.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'jacket\\jacket_12.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'milk\\milk_36.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'milk\\milk_35.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'phones\\phones_18.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.13, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 18}, {'image_shown': 'plane\\plane_16.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.2, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 20}, {'image_shown': 'box\\box_14.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'pizza\\pizza_27.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'face\\face_08.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.24, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'house\\house_01.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.07, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 14}, {'image_shown': 'box\\box_03.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'hand\\hand_30.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'plane\\plane_34.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'house\\house_17.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bird\\bird_16.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'jacket\\jacket_16.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'tree\\tree_40.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'plane\\plane_07.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'car\\car_36.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'bird\\bird_14.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'plane\\plane_02.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'face\\face_04.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'car\\car_28.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'hand\\hand_12.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'pencil\\pencil_28.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'berry\\berry_13.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'bird\\bird_32.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'hand\\hand_29.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'house\\house_14.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'pizza\\pizza_30.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'guitar\\guitar_24.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'chair\\chair_33.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'plane\\plane_38.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'dog\\dog_28.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'jacket\\jacket_31.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'pizza\\pizza_40.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'face\\face_10.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'fish\\fish_31.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'fish\\fish_20.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.77, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 10}, {'image_shown': 'car\\car_04.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pizza\\pizza_24.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'box\\box_26.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'chair\\chair_34.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'guitar\\guitar_26.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'tree\\tree_24.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'jacket\\jacket_25.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'fish\\fish_18.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'tree\\tree_03.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bug\\bug_22.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'bird\\bird_17.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bike\\bike_25.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'milk\\milk_25.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'hammer\\hammer_31.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.96, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 12}, {'image_shown': 'dog\\dog_03.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'guitar\\guitar_05.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'guitar\\guitar_18.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'berry\\berry_10.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.75, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'dog\\dog_08.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.79, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'guitar\\guitar_03.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'hammer\\hammer_01.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bird\\bird_37.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.91, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 3}, {'image_shown': 'bird\\bird_29.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'jacket\\jacket_07.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'dog\\dog_06.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bug\\bug_31.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.79, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 5}, {'image_shown': 'box\\box_21.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'guitar\\guitar_29.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'hammer\\hammer_12.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'jacket\\jacket_23.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'pizza\\pizza_20.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'face\\face_24.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'pencil\\pencil_27.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'plane\\plane_09.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'guitar\\guitar_33.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.95, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 11}, {'image_shown': 'guitar\\guitar_09.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'bug\\bug_05.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hand\\hand_26.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'berry\\berry_20.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'guitar\\guitar_34.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'hand\\hand_39.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'tree\\tree_35.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'milk\\milk_10.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'dog\\dog_33.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'milk\\milk_04.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'dog\\dog_02.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'box\\box_37.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.16, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'fish\\fish_24.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'phones\\phones_04.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'face\\face_33.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'bug\\bug_38.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'plane\\plane_39.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'hand\\hand_02.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'pencil\\pencil_40.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'milk\\milk_07.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'hand\\hand_25.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'hammer\\hammer_34.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'box\\box_09.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'bird\\bird_22.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'house\\house_04.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'guitar\\guitar_01.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'bug\\bug_10.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'pizza\\pizza_05.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'tree\\tree_12.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'dog\\dog_29.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'phones\\phones_13.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'car\\car_01.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'car\\car_30.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'milk\\milk_20.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'jacket\\jacket_20.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.19, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 15}, {'image_shown': 'pencil\\pencil_02.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.79, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 17}, {'image_shown': 'hand\\hand_19.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'dog\\dog_22.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'hammer\\hammer_29.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.09, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 12}, {'image_shown': 'guitar\\guitar_30.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'face\\face_01.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'dog\\dog_04.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'face\\face_30.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'milk\\milk_15.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'hammer\\hammer_26.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'fish\\fish_29.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'guitar\\guitar_10.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.89, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 11}, {'image_shown': 'house\\house_10.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'milk\\milk_39.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.79, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 16}, {'image_shown': 'chair\\chair_05.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'house\\house_08.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'face\\face_34.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.92, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 9}, {'image_shown': 'pencil\\pencil_07.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.96, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 17}, {'image_shown': 'bike\\bike_24.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'plane\\plane_21.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.2, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'bird\\bird_21.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'phones\\phones_19.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'bug\\bug_25.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hand\\hand_33.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'bird\\bird_27.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bike\\bike_17.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'milk\\milk_28.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'bug\\bug_35.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'dog\\dog_27.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'face\\face_11.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'fish\\fish_17.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'dog\\dog_38.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'pencil\\pencil_39.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'dog\\dog_07.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'house\\house_20.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'berry\\berry_35.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'hammer\\hammer_07.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'guitar\\guitar_08.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'dog\\dog_25.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'berry\\berry_30.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'bird\\bird_04.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bike\\bike_15.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'chair\\chair_22.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'house\\house_23.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'dog\\dog_10.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'jacket\\jacket_05.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'hammer\\hammer_10.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'face\\face_17.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.03, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 9}, {'image_shown': 'house\\house_22.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bird\\bird_12.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'house\\house_07.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'fish\\fish_38.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bike\\bike_19.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'berry\\berry_07.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'face\\face_26.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'phones\\phones_32.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'plane\\plane_04.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'hand\\hand_03.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'berry\\berry_06.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'jacket\\jacket_06.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'car\\car_08.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'car\\car_14.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'tree\\tree_17.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bike\\bike_05.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'box\\box_27.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'chair\\chair_28.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'jacket\\jacket_18.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.89, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 15}, {'image_shown': 'pizza\\pizza_39.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'chair\\chair_08.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'chair\\chair_18.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'bike\\bike_12.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'house\\house_03.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'tree\\tree_11.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'tree\\tree_07.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 21}, {'image_shown': 'car\\car_38.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.82, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 6}, {'image_shown': 'box\\box_23.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.24, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'house\\house_35.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'chair\\chair_26.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.84, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 7}, {'image_shown': 'milk\\milk_02.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'pizza\\pizza_29.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'box\\box_01.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'hand\\hand_15.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'berry\\berry_17.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'pencil\\pencil_37.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'jacket\\jacket_26.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'berry\\berry_27.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'bike\\bike_26.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'berry\\berry_21.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.92, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'fish\\fish_21.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'tree\\tree_21.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'car\\car_31.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'bug\\bug_28.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'hammer\\hammer_11.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bug\\bug_14.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'phones\\phones_01.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'bird\\bird_03.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bike\\bike_22.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'house\\house_37.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'milk\\milk_05.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'phones\\phones_06.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'dog\\dog_17.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.97, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'plane\\plane_30.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'bug\\bug_40.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'fish\\fish_25.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'fish\\fish_09.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.8, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bird\\bird_23.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'milk\\milk_06.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'face\\face_03.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.12, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'bug\\bug_03.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'pencil\\pencil_26.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'jacket\\jacket_09.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.96, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'plane\\plane_19.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'house\\house_05.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.16, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 14}, {'image_shown': 'pencil\\pencil_20.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.95, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'hammer\\hammer_18.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'berry\\berry_37.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'berry\\berry_32.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'phones\\phones_14.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'milk\\milk_09.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.9, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 16}, {'image_shown': 'milk\\milk_40.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.24, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 16}, {'image_shown': 'box\\box_20.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'box\\box_07.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'pizza\\pizza_15.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'pizza\\pizza_37.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'tree\\tree_08.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'fish\\fish_05.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'house\\house_29.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.02, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'car\\car_34.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'phones\\phones_27.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'box\\box_10.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'tree\\tree_04.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'bird\\bird_24.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'box\\box_28.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'fish\\fish_22.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'fish\\fish_33.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.21, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'face\\face_18.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'dog\\dog_36.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'bug\\bug_30.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'pencil\\pencil_30.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'bike\\bike_35.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'chair\\chair_06.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 1.08, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 7}, {'image_shown': 'guitar\\guitar_06.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'pizza\\pizza_01.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.89, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'box\\box_12.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.91, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'hammer\\hammer_22.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'chair\\chair_25.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'jacket\\jacket_39.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'bike\\bike_20.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'bird\\bird_19.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'phones\\phones_03.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'jacket\\jacket_34.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'jacket\\jacket_02.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'chair\\chair_19.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.08, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 7}, {'image_shown': 'face\\face_16.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.13, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'guitar\\guitar_40.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'bike\\bike_37.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'fish\\fish_01.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bird\\bird_06.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.17, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'box\\box_19.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'hand\\hand_37.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'box\\box_22.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.23, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'plane\\plane_14.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'berry\\berry_26.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.91, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'car\\car_05.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'pencil\\pencil_19.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.14, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'phones\\phones_31.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'pizza\\pizza_04.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'pizza\\pizza_18.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'phones\\phones_28.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'guitar\\guitar_27.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'pencil\\pencil_16.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.78, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'car\\car_09.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'house\\house_39.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'hammer\\hammer_39.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.09, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 12}, {'image_shown': 'box\\box_32.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.88, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 4}, {'image_shown': 'face\\face_20.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'plane\\plane_24.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'guitar\\guitar_11.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.16, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'hand\\hand_07.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'chair\\chair_10.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'dog\\dog_20.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.22, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'tree\\tree_39.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'fish\\fish_02.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.15, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 10}, {'image_shown': 'fish\\fish_08.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bike\\bike_23.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 2}, {'image_shown': 'phones\\phones_10.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.83, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'bug\\bug_02.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'guitar\\guitar_35.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'pencil\\pencil_33.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.14, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 17}, {'image_shown': 'pizza\\pizza_11.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'hammer\\hammer_27.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.94, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'fish\\fish_34.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'bug\\bug_34.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'plane\\plane_28.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'hand\\hand_04.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'pizza\\pizza_09.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.76, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'pencil\\pencil_17.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'phones\\phones_24.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.07, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'hand\\hand_14.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'guitar\\guitar_12.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'guitar\\guitar_38.jpg', 'word_shown_english': 'guitar', 'word_shown_german': 'Gitarre', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 11}, {'image_shown': 'pencil\\pencil_04.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'milk\\milk_17.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.78, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 16}, {'image_shown': 'house\\house_31.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 1.06, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'pencil\\pencil_03.jpg', 'word_shown_english': 'pencil', 'word_shown_german': 'Bleistift', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 17}, {'image_shown': 'jacket\\jacket_15.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 1.09, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 15}, {'image_shown': 'bird\\bird_39.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'berry\\berry_01.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'face\\face_32.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'hammer\\hammer_04.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.23, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'dog\\dog_37.jpg', 'word_shown_english': 'dog', 'word_shown_german': 'Hund', 'ITI_length': 0.98, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 8}, {'image_shown': 'face\\face_05.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.15, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}, {'image_shown': 'fish\\fish_35.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.87, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'hand\\hand_24.jpg', 'word_shown_english': 'hand', 'word_shown_german': 'Hand', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 13}, {'image_shown': 'tree\\tree_10.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'pizza\\pizza_25.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'house\\house_13.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 0.84, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 14}, {'image_shown': 'chair\\chair_35.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 0.97, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'bug\\bug_08.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'dog\\dog_13.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.07, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 8}, {'image_shown': 'chair\\chair_31.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'house\\house_24.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.84, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 14}, {'image_shown': 'bird\\bird_38.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.03, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'berry\\berry_15.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 1.05, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'chair\\chair_29.jpg', 'word_shown_english': 'chair', 'word_shown_german': 'Stuhl', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 7}, {'image_shown': 'milk\\milk_03.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'berry\\berry_36.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.14, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 1}, {'image_shown': 'bug\\bug_01.jpg', 'word_shown_english': 'bug', 'word_shown_german': 'Käfer', 'ITI_length': 0.85, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 5}, {'image_shown': 'milk\\milk_32.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'fish\\fish_04.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.99, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'milk\\milk_31.jpg', 'word_shown_english': 'bicycle', 'word_shown_german': 'Fahrrad', 'ITI_length': 0.89, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 16}, {'image_shown': 'plane\\plane_33.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.18, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'house\\house_19.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.84, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 14}, {'image_shown': 'car\\car_18.jpg', 'word_shown_english': 'car', 'word_shown_german': 'Auto', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 6}, {'image_shown': 'tree\\tree_23.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.82, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'jacket\\jacket_40.jpg', 'word_shown_english': 'house', 'word_shown_german': 'Haus', 'ITI_length': 0.99, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 15}, {'image_shown': 'tree\\tree_29.jpg', 'word_shown_english': 'tree', 'word_shown_german': 'Baum', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 21}, {'image_shown': 'fish\\fish_13.jpg', 'word_shown_english': 'fish', 'word_shown_german': 'Fisch', 'ITI_length': 0.77, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 10}, {'image_shown': 'box\\box_24.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 1.11, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 4}, {'image_shown': 'milk\\milk_22.jpg', 'word_shown_english': 'milk', 'word_shown_german': 'Milch', 'ITI_length': 0.88, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 16}, {'image_shown': 'hammer\\hammer_19.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 1.04, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'pizza\\pizza_17.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 0.79, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'plane\\plane_08.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 0.93, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'hammer\\hammer_33.jpg', 'word_shown_english': 'hammer', 'word_shown_german': 'Hammer', 'ITI_length': 0.9, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 12}, {'image_shown': 'bird\\bird_01.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 0.81, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'bird\\bird_26.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'phones\\phones_15.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'pizza\\pizza_32.jpg', 'word_shown_english': 'pizza', 'word_shown_german': 'Pizza', 'ITI_length': 1.19, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 19}, {'image_shown': 'bird\\bird_28.jpg', 'word_shown_english': 'bird', 'word_shown_german': 'Vogel', 'ITI_length': 1.08, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 3}, {'image_shown': 'berry\\berry_22.jpg', 'word_shown_english': 'berry', 'word_shown_german': 'Beere', 'ITI_length': 0.86, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 1}, {'image_shown': 'tree\\tree_22.jpg', 'word_shown_english': 'jacket', 'word_shown_german': 'Jacke', 'ITI_length': 0.85, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 21}, {'image_shown': 'plane\\plane_37.jpg', 'word_shown_english': 'plane', 'word_shown_german': 'Flugzeug', 'ITI_length': 1.25, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 20}, {'image_shown': 'tree\\tree_14.jpg', 'word_shown_english': 'box', 'word_shown_german': 'Kiste', 'ITI_length': 0.81, 'correct_response': 'g', 'match_idx': 0, 'concept_num': 21}, {'image_shown': 'phones\\phones_07.jpg', 'word_shown_english': 'phones', 'word_shown_german': 'Telefon', 'ITI_length': 1.22, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 18}, {'image_shown': 'face\\face_06.jpg', 'word_shown_english': 'face', 'word_shown_german': 'Gesicht', 'ITI_length': 1.01, 'correct_response': 'y', 'match_idx': 1, 'concept_num': 9}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$ &quot;sequences/localiser_conditions_&quot; + str(expInfo['participant']).zfill(2) + &quot;.xlsx&quot;&amp;#10;" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="image_pres"/>
    <Routine name="word_pres"/>
    <Routine name="feedback"/>
    <Routine name="ITI"/>
    <Routine name="break_3"/>
    <LoopTerminator name="trials"/>
    <Routine name="instructions_end"/>
  </Flow>
</PsychoPy2experiment>
